================ Lang-18 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java /home/yicheng/apr/d4jFixedProj/Lang/18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
495,497c495
<                 if (tokenLen >= 4) {
<                     rule = selectNumberRule(Calendar.YEAR, tokenLen);
<                 } else {
---
>                 if (tokenLen == 2) {
498a497,498
>                 } else {
>                     rule = selectNumberRule(Calendar.YEAR, tokenLen < 4 ? 4 : tokenLen);

================ Lang-21 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/21/src/main/java/org/apache/commons/lang3/time/DateUtils.java /home/yicheng/apr/d4jFixedProj/Lang/21/src/main/java/org/apache/commons/lang3/time/DateUtils.java
265c265
<                 cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
---
>                 cal1.get(Calendar.HOUR_OF_DAY) == cal2.get(Calendar.HOUR_OF_DAY) &&

================ Lang-42 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/42/src/java/org/apache/commons/lang/Entities.java /home/yicheng/apr/d4jFixedProj/Lang/42/src/java/org/apache/commons/lang/Entities.java
828c828
<             char c = str.charAt(i);
---
>             int c = Character.codePointAt(str, i); 
831c831,836
<                 if (c > 0x7F) {
---
>                 if (c >= 0x010000 && i < len - 1) {
>                     writer.write("&#");
>                     writer.write(Integer.toString(c, 10));
>                     writer.write(';');
>                     i++;
>                 } else if (c > 0x7F) { 

================ Lang-28 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java /home/yicheng/apr/d4jFixedProj/Lang/28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
62a63,67
>             if(entityValue > 0xFFFF) {
>                 char[] chrs = Character.toChars(entityValue);
>                 out.write(chrs[0]);
>                 out.write(chrs[1]);
>             } else {
63a69
>             }

================ Lang-48 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java /home/yicheng/apr/d4jFixedProj/Lang/48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java
379a380,382
>             if (lhs instanceof java.math.BigDecimal) {
>                 isEquals = (((java.math.BigDecimal)lhs).compareTo(rhs) == 0);
>             } else {
381a385
>             }

================ Lang-60 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/60/src/java/org/apache/commons/lang/text/StrBuilder.java /home/yicheng/apr/d4jFixedProj/Lang/60/src/java/org/apache/commons/lang/text/StrBuilder.java
1673c1673
<         for (int i = 0; i < thisBuf.length; i++) {
---
>         for (int i = 0; i < this.size; i++) {
1730c1730
<         for (int i = startIndex; i < thisBuf.length; i++) {
---
>         for (int i = startIndex; i < size; i++) {

================ Lang-43 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java /home/yicheng/apr/d4jFixedProj/Lang/43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java
421a422
>             next(pos);

================ Lang-19 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java /home/yicheng/apr/d4jFixedProj/Lang/19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java
40c40
<         if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {
---
>         if(input.charAt(index) == '&' && index < seqEnd - 2 && input.charAt(index + 1) == '#') {
49a50,52
>                 if(start == seqEnd) {
>                     return 0;
>                 }
54c57,59
<             while(input.charAt(end) != ';') 
---
>             while(end < seqEnd && ( (input.charAt(end) >= '0' && input.charAt(end) <= '9') ||
>                                     (input.charAt(end) >= 'a' && input.charAt(end) <= 'f') ||
>                                     (input.charAt(end) >= 'A' && input.charAt(end) <= 'F') ) )
78a84
>             boolean semiNext = (end != seqEnd) && (input.charAt(end) == ';');
80c86
<             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
---
>             return 2 + (end - start) + (isHex ? 1 : 0) + (semiNext ? 1 : 0);

================ Lang-25 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java /home/yicheng/apr/d4jFixedProj/Lang/25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java
74,100c74,100
<         {"\u00CB", "&Ecirc;"}, //  - uppercase E, circumflex accent
<         {"\u00CC", "&Euml;"}, //  - uppercase E, umlaut
<         {"\u00CD", "&Igrave;"}, //  - uppercase I, grave accent
<         {"\u00CE", "&Iacute;"}, //  - uppercase I, acute accent
<         {"\u00CF", "&Icirc;"}, //  - uppercase I, circumflex accent
<         {"\u00D0", "&Iuml;"}, //  - uppercase I, umlaut
<         {"\u00D1", "&ETH;"}, //  - uppercase Eth, Icelandic
<         {"\u00D2", "&Ntilde;"}, //  - uppercase N, tilde
<         {"\u00D3", "&Ograve;"}, //  - uppercase O, grave accent
<         {"\u00D4", "&Oacute;"}, //  - uppercase O, acute accent
<         {"\u00D5", "&Ocirc;"}, //  - uppercase O, circumflex accent
<         {"\u00D6", "&Otilde;"}, //  - uppercase O, tilde
<         {"\u00D7", "&Ouml;"}, //  - uppercase O, umlaut
<         {"\u00D8", "&times;"}, // multiplication sign
<         {"\u00D9", "&Oslash;"}, //  - uppercase O, slash
<         {"\u00DA", "&Ugrave;"}, //  - uppercase U, grave accent
<         {"\u00DB", "&Uacute;"}, //  - uppercase U, acute accent
<         {"\u00DC", "&Ucirc;"}, //  - uppercase U, circumflex accent
<         {"\u00DD", "&Uuml;"}, //  - uppercase U, umlaut
<         {"\u00DE", "&Yacute;"}, //  - uppercase Y, acute accent
<         {"\u00DF", "&THORN;"}, //  - uppercase THORN, Icelandic
<         {"\u00E0", "&szlig;"}, //  - lowercase sharps, German
<         {"\u00E1", "&agrave;"}, //  - lowercase a, grave accent
<         {"\u00E2", "&aacute;"}, //  - lowercase a, acute accent
<         {"\u00E3", "&acirc;"}, //  - lowercase a, circumflex accent
<         {"\u00E4", "&atilde;"}, //  - lowercase a, tilde
<         {"\u00E5", "&auml;"}, //  - lowercase a, umlaut
---
>         {"\u00CA", "&Ecirc;"}, //  - uppercase E, circumflex accent
>         {"\u00CB", "&Euml;"}, //  - uppercase E, umlaut
>         {"\u00CC", "&Igrave;"}, //  - uppercase I, grave accent
>         {"\u00CD", "&Iacute;"}, //  - uppercase I, acute accent
>         {"\u00CE", "&Icirc;"}, //  - uppercase I, circumflex accent
>         {"\u00CF", "&Iuml;"}, //  - uppercase I, umlaut
>         {"\u00D0", "&ETH;"}, //  - uppercase Eth, Icelandic
>         {"\u00D1", "&Ntilde;"}, //  - uppercase N, tilde
>         {"\u00D2", "&Ograve;"}, //  - uppercase O, grave accent
>         {"\u00D3", "&Oacute;"}, //  - uppercase O, acute accent
>         {"\u00D4", "&Ocirc;"}, //  - uppercase O, circumflex accent
>         {"\u00D5", "&Otilde;"}, //  - uppercase O, tilde
>         {"\u00D6", "&Ouml;"}, //  - uppercase O, umlaut
>         {"\u00D7", "&times;"}, // multiplication sign
>         {"\u00D8", "&Oslash;"}, //  - uppercase O, slash
>         {"\u00D9", "&Ugrave;"}, //  - uppercase U, grave accent
>         {"\u00DA", "&Uacute;"}, //  - uppercase U, acute accent
>         {"\u00DB", "&Ucirc;"}, //  - uppercase U, circumflex accent
>         {"\u00DC", "&Uuml;"}, //  - uppercase U, umlaut
>         {"\u00DD", "&Yacute;"}, //  - uppercase Y, acute accent
>         {"\u00DE", "&THORN;"}, //  - uppercase THORN, Icelandic
>         {"\u00DF", "&szlig;"}, //  - lowercase sharps, German
>         {"\u00E0", "&agrave;"}, //  - lowercase a, grave accent
>         {"\u00E1", "&aacute;"}, //  - lowercase a, acute accent
>         {"\u00E2", "&acirc;"}, //  - lowercase a, circumflex accent
>         {"\u00E3", "&atilde;"}, //  - lowercase a, tilde
>         {"\u00E4", "&auml;"}, //  - lowercase a, umlaut

================ Lang-49 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/49/src/java/org/apache/commons/lang/math/Fraction.java /home/yicheng/apr/d4jFixedProj/Lang/49/src/java/org/apache/commons/lang/math/Fraction.java
465a466,468
>         if (numerator == 0) {
>             return equals(ZERO) ? this : ZERO;
>         }

================ Lang-17 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java /home/yicheng/apr/d4jFixedProj/Lang/17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java
83c83
<         int len = Character.codePointCount(input, 0, input.length());
---
>         int len = input.length();
88a89,90
>                 pos+= c.length;
>                 continue;
90d91
<             else {
94d94
<                     if (pos < len - 2) {
96,100d95
<                     } else {
<                         pos++;
<                     }
<                 }
<                 pos--;
102d96
<             pos++;

================ Lang-64 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/64/src/java/org/apache/commons/lang/enums/ValuedEnum.java /home/yicheng/apr/d4jFixedProj/Lang/64/src/java/org/apache/commons/lang/enums/ValuedEnum.java
182a183,192
>         if (other == this) {
>             return 0;
>         }
>         if (other.getClass() != this.getClass()) {
>             if (other.getClass().getName().equals(this.getClass().getName())) {
>                 return iValue - getValueInOtherClassLoader(other);
>             }
>             throw new ClassCastException(
>                     "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
>         }
191a202,207
>     private int getValueInOtherClassLoader(Object other) {
>         try {
>             Method mth = other.getClass().getMethod("getValue", null);
>             Integer value = (Integer) mth.invoke(other, null);
>             return value.intValue();
>         } catch (NoSuchMethodException e) {
192a209
>         } catch (IllegalAccessException e) {
193a211
>         } catch (InvocationTargetException e) {
194a213,215
>         }
>         throw new IllegalStateException("This should not happen");
>     }

================ Lang-26 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java /home/yicheng/apr/d4jFixedProj/Lang/26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java
820c820
<         Calendar c = new GregorianCalendar(mTimeZone);
---
>         Calendar c = new GregorianCalendar(mTimeZone, mLocale);

================ Lang-50 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/50/src/java/org/apache/commons/lang/time/FastDateFormat.java /home/yicheng/apr/d4jFixedProj/Lang/50/src/java/org/apache/commons/lang/time/FastDateFormat.java
285,286c285,286
<         if (locale != null) {
<             key = new Pair(key, locale);
---
>         if (locale == null) {
>             locale = Locale.getDefault();
288a289
>         key = new Pair(key, locale);
292,294d292
<             if (locale == null) {
<                 locale = Locale.getDefault();
<             }
465,466c463,464
<         if (locale != null) {
<             key = new Pair(key, locale);
---
>         if (locale == null) {
>             locale = Locale.getDefault();
467a466
>         key = new Pair(key, locale);
471,473d469
<             if (locale == null) {
<                 locale = Locale.getDefault();
<             }

================ Lang-45 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/45/src/java/org/apache/commons/lang/WordUtils.java /home/yicheng/apr/d4jFixedProj/Lang/45/src/java/org/apache/commons/lang/WordUtils.java
615a616,618
>         if (lower > str.length()) {
>             lower = str.length();    
>         }

================ Lang-47 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/47/src/java/org/apache/commons/lang/text/StrBuilder.java /home/yicheng/apr/d4jFixedProj/Lang/47/src/java/org/apache/commons/lang/text/StrBuilder.java
1185a1186,1188
>             if (str == null) {
>                 str = "";
>             }
1229a1233,1235
>             if (str == null) {
>                 str = "";
>             }

================ Lang-44 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/44/src/java/org/apache/commons/lang/NumberUtils.java /home/yicheng/apr/d4jFixedProj/Lang/44/src/java/org/apache/commons/lang/NumberUtils.java
144a145,147
>         if (val.length() == 1 && !Character.isDigit(val.charAt(0))) {
>             throw new NumberFormatException(val + " is not a valid number.");
>         }

================ Lang-57 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/57/src/java/org/apache/commons/lang/LocaleUtils.java /home/yicheng/apr/d4jFixedProj/Lang/57/src/java/org/apache/commons/lang/LocaleUtils.java
223c223
<         return cAvailableLocaleSet.contains(locale);
---
>         return availableLocaleList().contains(locale);

================ Lang-46 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/46/src/java/org/apache/commons/lang/StringEscapeUtils.java /home/yicheng/apr/d4jFixedProj/Lang/46/src/java/org/apache/commons/lang/StringEscapeUtils.java
86c86
<         return escapeJavaStyleString(str, false);
---
>         return escapeJavaStyleString(str, false, false);
102c102
<         escapeJavaStyleString(out, str, false);
---
>         escapeJavaStyleString(out, str, false, false);
127c127
<         return escapeJavaStyleString(str, true);
---
>         return escapeJavaStyleString(str, true, true);
143c143
<         escapeJavaStyleString(out, str, true);
---
>         escapeJavaStyleString(out, str, true, true);
154c154
<     private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {
---
>     private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes, boolean escapeForwardSlash) {
160c160
<             escapeJavaStyleString(writer, str, escapeSingleQuotes);
---
>             escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);
178c178,179
<     private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {
---
>     private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote,
>             boolean escapeForwardSlash) throws IOException {
243a245
>                         if (escapeForwardSlash) {
244a247
>                         }

================ Lang-20 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/20/src/main/java/org/apache/commons/lang3/StringUtils.java /home/yicheng/apr/d4jFixedProj/Lang/20/src/main/java/org/apache/commons/lang3/StringUtils.java
3298c3298
<         StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
---
>         StringBuilder buf = new StringBuilder(noOfItems * 16);
3383c3383
<         StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
---
>         StringBuilder buf = new StringBuilder(noOfItems * 16);

================ Lang-51 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/51/src/java/org/apache/commons/lang/BooleanUtils.java /home/yicheng/apr/d4jFixedProj/Lang/51/src/java/org/apache/commons/lang/BooleanUtils.java
681a682
>                 return false;

================ Lang-62 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/62/src/java/org/apache/commons/lang/Entities.java /home/yicheng/apr/d4jFixedProj/Lang/62/src/java/org/apache/commons/lang/Entities.java
849a850,852
>                             if (entityValue > 0xFFFF) {
>                                 entityValue = -1;
>                             }
919a923
>                                         break;
924a929,931
>                                 if (entityValue > 0xFFFF) {
>                                     entityValue = -1;
>                                 }
925a933
>                                 entityValue = -1;

================ Lang-10 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java /home/yicheng/apr/d4jFixedProj/Lang/10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
304d303
<         boolean wasWhite= false;
307,314d305
<             if(Character.isWhitespace(c)) {
<                 if(!wasWhite) {
<                     wasWhite= true;
<                     regex.append("\\s*+");
<                 }
<                 continue;
<             }
<             wasWhite= false;

================ Lang-65 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/65/src/java/org/apache/commons/lang/time/DateUtils.java /home/yicheng/apr/d4jFixedProj/Lang/65/src/java/org/apache/commons/lang/time/DateUtils.java
623a624,626
>         if (field == Calendar.MILLISECOND) {
>             return;
>         }
630a634,636
>         Date date = val.getTime();
>         long time = date.getTime();
>         boolean done = false;
632a639,645
>         int millisecs = val.get(Calendar.MILLISECOND);
>         if (!round || millisecs < 500) {
>             time = time - millisecs;
>             if (field == Calendar.SECOND) {
>                 done = true;
>             }
>         }
634a648,654
>         int seconds = val.get(Calendar.SECOND);
>         if (!done && (!round || seconds < 30)) {
>             time = time - (seconds * 1000L);
>             if (field == Calendar.MINUTE) {
>                 done = true;
>             }
>         }
636a657,660
>         int minutes = val.get(Calendar.MINUTE);
>         if (!done && (!round || minutes < 30)) {
>             time = time - (minutes * 60000L);
>         }
638a663,666
>         if (date.getTime() != time) {
>             date.setTime(time);
>             val.setTime(date);
>         }
708a737
>             if (offset != 0) {
709a739
>             }

================ Lang-35 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/35/src/main/java/org/apache/commons/lang3/ArrayUtils.java /home/yicheng/apr/d4jFixedProj/Lang/35/src/main/java/org/apache/commons/lang3/ArrayUtils.java
3295c3295
<             type = Object.class;
---
>             throw new IllegalArgumentException("Arguments cannot both be null");            
3574c3574
<             return (T[]) new Object[] { null };
---
>             throw new IllegalArgumentException("Array and element cannot both be null");            

================ Lang-12 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java /home/yicheng/apr/d4jFixedProj/Lang/12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
229a230,232
>         if (chars != null && chars.length == 0) {
>             throw new IllegalArgumentException("The chars array must not be empty");
>         }
231a235,237
>             if (chars != null) {
>                 end = chars.length;
>             } else {
237a244
>             }

================ Lang-22 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/22/src/main/java/org/apache/commons/lang3/math/Fraction.java /home/yicheng/apr/d4jFixedProj/Lang/22/src/main/java/org/apache/commons/lang3/math/Fraction.java
582a583,588
>         if ((u == 0) || (v == 0)) {
>             if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {
>                 throw new ArithmeticException("overflow: gcd is 2^31");
>             }
>             return Math.abs(u) + Math.abs(v);
>         }
584c590
<         if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
---
>         if (Math.abs(u) == 1 || Math.abs(v) == 1) {

================ Lang-14 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/14/src/main/java/org/apache/commons/lang3/StringUtils.java /home/yicheng/apr/d4jFixedProj/Lang/14/src/main/java/org/apache/commons/lang3/StringUtils.java
787a788
>         if (cs1 instanceof String && cs2 instanceof String) {
788a790,791
>         }
>         return CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, Math.max(cs1.length(), cs2.length()));

================ Lang-36 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/36/src/java/org/apache/commons/lang3/math/NumberUtils.java /home/yicheng/apr/d4jFixedProj/Lang/36/src/java/org/apache/commons/lang3/math/NumberUtils.java
491c491
<         if (!Character.isDigit(lastChar)) {
---
>         if (!Character.isDigit(lastChar) && lastChar != '.') {
1386a1387,1394
>             }
>             if (chars[i] == '.') {
>                 if (hasDecPoint || hasExp) {
>                     // two decimal points or dec in exponent
>                     return false;
>                 }
>                 // single trailing decimal point after non-exponent is ok
>                 return foundDigit;

================ Lang-4 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java /home/yicheng/apr/d4jFixedProj/Lang/4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java
31c31
<     private final HashMap<CharSequence, CharSequence> lookupMap;
---
>     private final HashMap<String, CharSequence> lookupMap;
46c46
<         lookupMap = new HashMap<CharSequence, CharSequence>();
---
>         lookupMap = new HashMap<String, CharSequence>();
51c51
<                 this.lookupMap.put(seq[0], seq[1]);
---
>                 this.lookupMap.put(seq[0].toString(), seq[1]);
77c77
<             final CharSequence result = lookupMap.get(subSeq);
---
>             final CharSequence result = lookupMap.get(subSeq.toString());

================ Lang-3 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java /home/yicheng/apr/d4jFixedProj/Lang/3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
592a593
>             if(numDecimals <= 7){// If number has 7 or fewer digits past the decimal point then make it a float
596a598
>             }
600a603
>             if(numDecimals <= 16){// If number has between 8 and 16 digits past the decimal point then make it a double
604a608
>             }

================ Lang-8 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java /home/yicheng/apr/d4jFixedProj/Lang/8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
1098d1097
<         private final TimeZone zone;
1112d1110
<             zone = timeZone;
1133a1132
>             TimeZone zone = calendar.getTimeZone();

================ Lang-41 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/41/src/java/org/apache/commons/lang/ClassUtils.java /home/yicheng/apr/d4jFixedProj/Lang/41/src/java/org/apache/commons/lang/ClassUtils.java
190a191
>         StringBuffer arrayPrefix = new StringBuffer();
192a194,198
>         if (className.startsWith("[")) {
>             while (className.charAt(0) == '[') {
>                 className = className.substring(1);
>                 arrayPrefix.append("[]");
>             }
193a200,203
>             if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {
>                 className = className.substring(1, className.length() - 1);
>             }
>         }
194a205,207
>         if (reverseAbbreviationMap.containsKey(className)) {
>             className = reverseAbbreviationMap.get(className);
>         }
203c216
<         return out;
---
>         return out + arrayPrefix;
245c258
<         if (className == null) {
---
>         if (className == null || className.length() == 0) {
249a263,265
>         while (className.charAt(0) == '[') {
>             className = className.substring(1);
>         }
250a267,269
>         if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {
>             className = className.substring(1);
>         }

================ Lang-16 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java /home/yicheng/apr/d4jFixedProj/Lang/16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
458c458
<         if (str.startsWith("0x") || str.startsWith("-0x")) {
---
>         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {

================ Lang-6 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java /home/yicheng/apr/d4jFixedProj/Lang/6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java
95c95
<                 pos += Character.charCount(Character.codePointAt(input, pos));
---
>                 pos += Character.charCount(Character.codePointAt(input, pt));

================ Lang-1 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java /home/yicheng/apr/d4jFixedProj/Lang/1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
466a467,475
>             char firstSigDigit = 0; // strip leading zeroes
>             for(int i = pfxLen; i < str.length(); i++) {
>                 firstSigDigit = str.charAt(i);
>                 if (firstSigDigit == '0') { // count leading zeroes
>                     pfxLen++;
>                 } else {
>                     break;
>                 }
>             }
468c477
<             if (hexDigits > 16) { // too many for Long
---
>             if (hexDigits > 16 || (hexDigits == 16 && firstSigDigit > '7')) { // too many for Long
471c480
<             if (hexDigits > 8) { // too many for an int
---
>             if (hexDigits > 8 || (hexDigits == 8 && firstSigDigit > '7')) { // too many for an int

================ Lang-59 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/59/src/java/org/apache/commons/lang/text/StrBuilder.java /home/yicheng/apr/d4jFixedProj/Lang/59/src/java/org/apache/commons/lang/text/StrBuilder.java
884c884
<                 str.getChars(0, strLen, buffer, size);
---
>                 str.getChars(0, width, buffer, size);

================ Lang-39 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/39/src/java/org/apache/commons/lang3/StringUtils.java /home/yicheng/apr/d4jFixedProj/Lang/39/src/java/org/apache/commons/lang3/StringUtils.java
3675a3676,3678
>             if (searchList[i] == null || replacementList[i] == null) {
>                 continue;
>             }

================ Lang-5 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/5/src/main/java/org/apache/commons/lang3/LocaleUtils.java /home/yicheng/apr/d4jFixedProj/Lang/5/src/main/java/org/apache/commons/lang3/LocaleUtils.java
96a97,116
>         if (ch0 == '_') {
>             if (len < 3) {
>                 throw new IllegalArgumentException("Invalid locale format: " + str);
>             }
>             final char ch1 = str.charAt(1);
>             final char ch2 = str.charAt(2);
>             if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {
>                 throw new IllegalArgumentException("Invalid locale format: " + str);
>             }
>             if (len == 3) {
>                 return new Locale("", str.substring(1, 3));
>             }
>             if (len < 5) {
>                 throw new IllegalArgumentException("Invalid locale format: " + str);
>             }
>             if (str.charAt(3) != '_') {
>                 throw new IllegalArgumentException("Invalid locale format: " + str);
>             }
>             return new Locale("", str.substring(1, 3), str.substring(4));
>         } else {
127a148
>         }

================ Lang-54 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/54/src/java/org/apache/commons/lang/LocaleUtils.java /home/yicheng/apr/d4jFixedProj/Lang/54/src/java/org/apache/commons/lang/LocaleUtils.java
113a114,116
>             if (ch3 == '_') {
>                 return new Locale(str.substring(0, 2), "", str.substring(4));
>             }

================ Lang-33 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/33/src/main/java/org/apache/commons/lang3/ClassUtils.java /home/yicheng/apr/d4jFixedProj/Lang/33/src/main/java/org/apache/commons/lang3/ClassUtils.java
910c910
<             classes[i] = array[i].getClass();
---
>             classes[i] = array[i] == null ? null : array[i].getClass();

================ Lang-32 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java /home/yicheng/apr/d4jFixedProj/Lang/32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java
104,109c104
<     private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {
<         @Override
<         protected Set<IDKey> initialValue() {
<             return new HashSet<IDKey>();
<         }
<     };
---
>     private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>();
152c147,148
<         return getRegistry().contains(new IDKey(value));
---
>         Set<IDKey> registry = getRegistry();
>         return registry != null && registry.contains(new IDKey(value));
521a518,522
>         synchronized (HashCodeBuilder.class) {
>             if (getRegistry() == null) {
>                 REGISTRY.set(new HashSet<IDKey>());
>             }
>         }
538c539,547
<         getRegistry().remove(new IDKey(value));
---
>         Set<IDKey> s = getRegistry();
>         if (s != null) {
>             s.remove(new IDKey(value));
>             synchronized (HashCodeBuilder.class) {
>                 if (s.isEmpty()) {
>                     REGISTRY.remove();
>                 }
>             }
>         }

================ Lang-23 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java /home/yicheng/apr/d4jFixedProj/Lang/23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java
72a73
>     private static final int HASH_SEED = 31;
262a264,286
>     @Override
>     public boolean equals(Object obj) {
>         if (obj == this) {
>             return true;
>         }
>         if (obj == null) {
>             return false;
>         }
>         if (!super.equals(obj)) {
>             return false;
>         }
>         if (ObjectUtils.notEqual(getClass(), obj.getClass())) {
>           return false;
>         }
>         ExtendedMessageFormat rhs = (ExtendedMessageFormat)obj;
>         if (ObjectUtils.notEqual(toPattern, rhs.toPattern)) {
>             return false;
>         }
>         if (ObjectUtils.notEqual(registry, rhs.registry)) {
>             return false;
>         }
>         return true;
>     }
268a293,299
>     @Override
>     public int hashCode() {
>         int result = super.hashCode();
>         result = HASH_SEED * result + ObjectUtils.hashCode(registry);
>         result = HASH_SEED * result + ObjectUtils.hashCode(toPattern);
>         return result;
>     }

================ Lang-30 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/30/src/main/java/org/apache/commons/lang3/StringUtils.java /home/yicheng/apr/d4jFixedProj/Lang/30/src/main/java/org/apache/commons/lang3/StringUtils.java
1375a1376
>         int csLast = csLen - 1;
1376a1378
>         int searchLast = searchLen - 1;
1380a1383
>                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
1381a1385,1388
>                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
>                             return i;
>                         }
>                     } else {
1382a1390
>                     }
1443c1451
<     public static boolean containsAny(CharSequence cs, char[] searchChars) {
---
>     public static boolean containsAny(String cs, char[] searchChars) {
1455c1463,1464
<                     if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {
---
>                     if (Character.isHighSurrogate(ch)) {
>                         if (j == searchLast) {
1457c1466,1468
<                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
---
>                             return true;
>                         }
>                         if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
1497c1508
<     public static boolean containsAny(CharSequence cs, String searchChars) {
---
>     public static boolean containsAny(String cs, String searchChars) {
1532a1544
>         int csLast = csLen - 1;
1533a1546
>         int searchLast = searchLen - 1;
1538a1552,1556
>                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
>                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
>                             continue outer;
>                         }
>                     } else {
1539a1558
>                     }
1576c1595,1598
<             if (searchChars.indexOf(ch) < 0) {
---
>             boolean chFound = searchChars.indexOf(ch) >= 0;
>             if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
>                 char ch2 = str.charAt(i + 1);
>                 if (chFound && searchChars.indexOf(ch2) < 0) {
1577a1600,1604
>                 }
>             } else {
>                 if (!chFound) {
>                     return i;
>                 }
1677a1705
>         int csLast = csLen - 1;
1678a1707
>         int searchLast = searchLen - 1;
1682a1712,1713
>                     if (Character.isHighSurrogate(ch)) {
>                         if (j == searchLast) {
1683a1715,1720
>                             return false;
>                         }
>                         if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
>                             return false;
>                         }
>                     } else {
1685a1723
>                     }

================ Lang-9 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java /home/yicheng/apr/d4jFixedProj/Lang/9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java
143a144,146
>         if (patternMatcher.regionStart() != patternMatcher.regionEnd()) {
>             throw new IllegalArgumentException("Failed to parse \""+pattern+"\" ; gave up at index "+patternMatcher.regionStart());
>         }

================ Lang-53 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/53/src/java/org/apache/commons/lang/time/DateUtils.java /home/yicheng/apr/d4jFixedProj/Lang/53/src/java/org/apache/commons/lang/time/DateUtils.java
642a643
>         }
645d645
<             }
651a652
>         }
654d654
<             }

================ Lang-58 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/58/src/java/org/apache/commons/lang/math/NumberUtils.java /home/yicheng/apr/d4jFixedProj/Lang/58/src/java/org/apache/commons/lang/math/NumberUtils.java
454,455c454
<                         && isDigits(numeric.substring(1))
<                         && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
---
>                         && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {

================ Lang-37 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/37/src/java/org/apache/commons/lang3/ArrayUtils.java /home/yicheng/apr/d4jFixedProj/Lang/37/src/java/org/apache/commons/lang3/ArrayUtils.java
2961a2962
>         try {
2962a2964
>         } catch (ArrayStoreException ase) {
2963a2966,2971
>             final Class<?> type2 = array2.getClass().getComponentType();
>             if (!type1.isAssignableFrom(type2)){
>                 throw new IllegalArgumentException("Cannot store "+type2.getName()+" in an array of "+type1.getName());
>             }
>             throw ase; // No, so rethrow original
>         }

================ Lang-13 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/13/src/main/java/org/apache/commons/lang3/SerializationUtils.java /home/yicheng/apr/d4jFixedProj/Lang/13/src/main/java/org/apache/commons/lang3/SerializationUtils.java
238a239,240
>         private static final Map<String, Class<?>> primitiveTypes = 
>                 new HashMap<String, Class<?>>();
251a254,262
>             primitiveTypes.put("byte", byte.class);
>             primitiveTypes.put("short", short.class);
>             primitiveTypes.put("int", int.class);
>             primitiveTypes.put("long", long.class);
>             primitiveTypes.put("float", float.class);
>             primitiveTypes.put("double", double.class);
>             primitiveTypes.put("boolean", boolean.class);
>             primitiveTypes.put("char", char.class);
>             primitiveTypes.put("void", void.class);
267a279
>                 try {
268a281,287
>                 } catch (ClassNotFoundException cnfe) {
>                     Class<?> cls = primitiveTypes.get(name);
>                     if (cls != null)
>                         return cls;
>                     else
>                         throw cnfe;
>                 }

================ Lang-27 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java /home/yicheng/apr/d4jFixedProj/Lang/27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
479c479
<                 if (expPos < decPos) {
---
>                 if (expPos < decPos || expPos > str.length()) {
488a489,491
>                 if (expPos > str.length()) {
>                     throw new NumberFormatException(str + " is not a valid number.");
>                 }

================ Lang-63 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java /home/yicheng/apr/d4jFixedProj/Lang/63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java
306c306,307
<             days += 31;
---
>             end.add(Calendar.MONTH, -1);
>             days += end.getActualMaximum(Calendar.DAY_OF_MONTH);
312a314
>             end.add(Calendar.MONTH, 1);
318,324d319
<         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
<         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
<         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
<         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
<         days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
<         months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
<         years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
431,442d425
<     }
<     static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {
<         end.add( field, -1 * difference );
<         int endValue = end.get(field);
<         int startValue = start.get(field);
<         if (endValue < startValue) {
<             int newdiff = startValue - endValue;
<             end.add( field, newdiff );
<             return newdiff;
<         } else {
<             return 0;
<         }

================ Lang-52 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/52/src/java/org/apache/commons/lang/StringEscapeUtils.java /home/yicheng/apr/d4jFixedProj/Lang/52/src/java/org/apache/commons/lang/StringEscapeUtils.java
235a236,239
>                     case '/':
>                         out.write('\\');
>                         out.write('/');
>                         break;

================ Lang-24 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java /home/yicheng/apr/d4jFixedProj/Lang/24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
1413c1413
<                 return foundDigit && !hasExp;
---
>                 return foundDigit && !hasExp && !hasDecPoint;

================ Lang-55 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/55/src/java/org/apache/commons/lang/time/StopWatch.java /home/yicheng/apr/d4jFixedProj/Lang/55/src/java/org/apache/commons/lang/time/StopWatch.java
117a118
>         if(this.runningState == STATE_RUNNING) {
118a120
>         }

================ Lang-29 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/29/src/main/java/org/apache/commons/lang3/SystemUtils.java /home/yicheng/apr/d4jFixedProj/Lang/29/src/main/java/org/apache/commons/lang3/SystemUtils.java
1672c1672
<     static float toJavaVersionInt(String version) {
---
>     static int toJavaVersionInt(String version) {

================ Lang-7 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java /home/yicheng/apr/d4jFixedProj/Lang/7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
452,454d451
<         if (str.startsWith("--")) {
<             return null;
<         }
720a718
>         if (str.trim().startsWith("--")) {
724a723,724
>             throw new NumberFormatException(str + " is not a valid number.");
>         }

================ Lang-38 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/38/src/java/org/apache/commons/lang3/time/FastDateFormat.java /home/yicheng/apr/d4jFixedProj/Lang/38/src/java/org/apache/commons/lang3/time/FastDateFormat.java
871a872
>             calendar.getTime(); /// LANG-538

================ Lang-56 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/56/src/java/org/apache/commons/lang/time/FastDateFormat.java /home/yicheng/apr/d4jFixedProj/Lang/56/src/java/org/apache/commons/lang/time/FastDateFormat.java
140c140
<     private Rule[] mRules;
---
>     private transient Rule[] mRules;
144c144
<     private int mMaxLengthEstimate;
---
>     private transient int mMaxLengthEstimate;
1021a1022,1025
>     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
>         in.defaultReadObject();
>         init();
>     }

================ Lang-40 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/40/src/java/org/apache/commons/lang/StringUtils.java /home/yicheng/apr/d4jFixedProj/Lang/40/src/java/org/apache/commons/lang/StringUtils.java
1048c1048,1055
<         return contains(str.toUpperCase(), searchStr.toUpperCase());
---
>         int len = searchStr.length();
>         int max = str.length() - len;
>         for (int i = 0; i <= max; i++) {
>             if (str.regionMatches(true, i, searchStr, 0, len)) {
>                 return true;
>             }
>         }
>         return false;

================ Lang-11 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java /home/yicheng/apr/d4jFixedProj/Lang/11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
244a245,248
>         } else {
>             if (end <= start) {
>                 throw new IllegalArgumentException("Parameter end (" + end + ") must be greater than start (" + start + ")");
>             }

================ Lang-61 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/61/src/java/org/apache/commons/lang/text/StrBuilder.java /home/yicheng/apr/d4jFixedProj/Lang/61/src/java/org/apache/commons/lang/text/StrBuilder.java
1776c1776
<         int len = thisBuf.length - strLen;
---
>         int len = size - strLen + 1;

================ Lang-15 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java /home/yicheng/apr/d4jFixedProj/Lang/15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java
219,221c219,221
<         for (Map.Entry<TypeVariable<?>, Type> entry : toTypeVarAssigns.entrySet()) {
<             Type toTypeArg = entry.getValue();
<             Type fromTypeArg = fromTypeVarAssigns.get(entry.getKey());
---
>         for (TypeVariable<?> var : toTypeVarAssigns.keySet()) {
>             Type toTypeArg = unrollVariableAssignments(var, toTypeVarAssigns);
>             Type fromTypeArg = unrollVariableAssignments(var, fromTypeVarAssigns);
675c675
<         if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {
---
>         if (toClass.equals(cls)) {

================ Lang-31 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/31/src/main/java/org/apache/commons/lang3/StringUtils.java /home/yicheng/apr/d4jFixedProj/Lang/31/src/main/java/org/apache/commons/lang3/StringUtils.java
1445a1446,1447
> 		int csLastIndex = csLength - 1;
> 		int searchLastIndex = searchLength - 1;
1449a1452
> 					if (i < csLastIndex && j < searchLastIndex && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {
1450a1454,1457
> 						if (searchChars[j + 1] == cs.charAt(i + 1)) {
> 							return true;
> 						}
> 					} else {
1452a1460
> 					}

================ Lang-34 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Lang/34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java /home/yicheng/apr/d4jFixedProj/Lang/34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
148c148
<         return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();
---
>         return REGISTRY.get();
164c164
<         return m.containsKey(value);
---
>         return m != null && m.containsKey(value);

================ Closure-86 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/86/src/com/google/javascript/jscomp/NodeUtil.java /home/yicheng/apr/d4jFixedProj/Closure/86/src/com/google/javascript/jscomp/NodeUtil.java
2465c2465
<         return true;
---
>         return false;

================ Closure-91 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/91/src/com/google/javascript/jscomp/CheckGlobalThis.java /home/yicheng/apr/d4jFixedProj/Closure/91/src/com/google/javascript/jscomp/CheckGlobalThis.java
114a115,123
>       Node gramps = parent.getParent();
>       if (NodeUtil.isObjectLitKey(parent, gramps)) {
>         JSDocInfo maybeLends = gramps.getJSDocInfo();
>         if (maybeLends != null &&
>             maybeLends.getLendsName() != null &&
>             maybeLends.getLendsName().endsWith(".prototype")) {
>           return false;
>         }
>       }

================ Closure-18 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/18/src/com/google/javascript/jscomp/Compiler.java /home/yicheng/apr/d4jFixedProj/Closure/18/src/com/google/javascript/jscomp/Compiler.java
1288c1288
<       if (options.dependencyOptions.needsManagement() && options.closurePass) {
---
>       if (options.dependencyOptions.needsManagement()) {

================ Closure-66 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/66/src/com/google/javascript/jscomp/TypeCheck.java /home/yicheng/apr/d4jFixedProj/Closure/66/src/com/google/javascript/jscomp/TypeCheck.java
515a516
>         } else {
516a518
>           typeable = false;

================ Closure-79 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/79/src/com/google/javascript/jscomp/Normalize.java /home/yicheng/apr/d4jFixedProj/Closure/79/src/com/google/javascript/jscomp/Normalize.java
122c122
<         .traverse(root);
---
>         .traverseRoots(externs, root);
diff -r /home/yicheng/apr/d4jProj/Closure/79/src/com/google/javascript/jscomp/VarCheck.java /home/yicheng/apr/d4jFixedProj/Closure/79/src/com/google/javascript/jscomp/VarCheck.java
220a221
>     compiler.reportCodeChange();

================ Closure-96 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/96/src/com/google/javascript/jscomp/TypeCheck.java /home/yicheng/apr/d4jFixedProj/Closure/96/src/com/google/javascript/jscomp/TypeCheck.java
1409c1409,1410
<            parameters.hasNext()) {
---
>            (parameters.hasNext() ||
>             parameter != null && parameter.isVarArgs())) {
1411a1413
>       if (parameters.hasNext()) {
1412a1415
>       }

================ Closure-21 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/21/src/com/google/javascript/jscomp/CheckSideEffects.java /home/yicheng/apr/d4jFixedProj/Closure/21/src/com/google/javascript/jscomp/CheckSideEffects.java
101c101
<     if (n.isExprResult()) {
---
>     if (n.isExprResult() || n.isBlock()) {
113,130c113
<     if (parent.getType() == Token.COMMA) {
<       if (isResultUsed) {
<         return;
<       }
<       if (n == parent.getLastChild()) {
<         for (Node an : parent.getAncestors()) {
<           int ancestorType = an.getType();
<           if (ancestorType == Token.COMMA) continue;
<           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
<           else break;
<         }
<       }
<     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
<       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
<         return;
<       }
<     }
<     if (
---
>     if (!isResultUsed &&

================ Closure-95 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/95/src/com/google/javascript/jscomp/TypedScopeCreator.java /home/yicheng/apr/d4jFixedProj/Closure/95/src/com/google/javascript/jscomp/TypedScopeCreator.java
898a899,901
>       if (n.getType() == Token.GETPROP && !scope.isGlobal() &&
>           isQnameRootedInGlobalScope(n)) {
>         Scope globalScope = scope.getGlobalScope();
901a905,908
>         if (!globalScope.isDeclared(variableName, false)) {
>           scopeToDeclareIn = scope.getGlobalScope();
>         }
>       }

================ Closure-42 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/42/src/com/google/javascript/jscomp/parsing/IRFactory.java /home/yicheng/apr/d4jFixedProj/Closure/42/src/com/google/javascript/jscomp/parsing/IRFactory.java
567a568,572
>       if (loopNode.isForEach()) {
>         errorReporter.error(
>             "unsupported language extension: for each",
>             sourceName,
>             loopNode.getLineno(), "", 0);
569a575,576
>         return newNode(Token.EXPR_RESULT, Node.newNumber(0));
>       }

================ Closure-71 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/71/src/com/google/javascript/jscomp/CheckAccessControls.java /home/yicheng/apr/d4jFixedProj/Closure/71/src/com/google/javascript/jscomp/CheckAccessControls.java
416c416
<       boolean isOverride = t.inGlobalScope() &&
---
>       boolean isOverride = parent.getJSDocInfo() != null &&

================ Closure-112 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/112/src/com/google/javascript/jscomp/TypeInference.java /home/yicheng/apr/d4jFixedProj/Closure/112/src/com/google/javascript/jscomp/TypeInference.java
1192,1193c1192,1194
<     Map<TemplateType, JSType> inferred = 
<         inferTemplateTypesFromParameters(fnType, n);
---
>     Map<TemplateType, JSType> inferred = Maps.filterKeys(
>         inferTemplateTypesFromParameters(fnType, n),
>         new Predicate<TemplateType>() {
1194a1196,1200
>           @Override
>           public boolean apply(TemplateType key) {
>             return keys.contains(key);
>           }}
>         );

================ Closure-28 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/28/src/com/google/javascript/jscomp/InlineCostEstimator.java /home/yicheng/apr/d4jFixedProj/Closure/28/src/com/google/javascript/jscomp/InlineCostEstimator.java
101a102,105
>     @Override
>     void addConstant(String newcode) {
>       add("0");
>     }

================ Closure-68 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/68/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java /home/yicheng/apr/d4jFixedProj/Closure/68/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
867a868
>                   }
870d870
<                   }
1708a1709
>     restoreLookAhead(token);
1760a1762
>       restoreLookAhead(token);

================ Closure-90 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/90/src/com/google/javascript/jscomp/FunctionTypeBuilder.java /home/yicheng/apr/d4jFixedProj/Closure/90/src/com/google/javascript/jscomp/FunctionTypeBuilder.java
184c184
<       if (!type.isSubtype(
---
>       if (!type.restrictByNotNullOrUndefined().isSubtype(
diff -r /home/yicheng/apr/d4jProj/Closure/90/src/com/google/javascript/rhino/jstype/FunctionType.java /home/yicheng/apr/d4jFixedProj/Closure/90/src/com/google/javascript/rhino/jstype/FunctionType.java
879a880,882
>     if (maybeTypeOfThis != null) {
>       maybeTypeOfThis = maybeTypeOfThis.restrictByNotNullOrUndefined();
>     }

================ Closure-48 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/48/src/com/google/javascript/jscomp/TypedScopeCreator.java /home/yicheng/apr/d4jFixedProj/Closure/48/src/com/google/javascript/jscomp/TypedScopeCreator.java
1521c1521
<       if (inferred) {
---
>       if (inferred && rhsValue != null && rhsValue.isFunction()) {
1523,1525c1523,1528
<         inferred = !(rhsValue != null &&
<             rhsValue.isFunction() &&
<             (info != null || !scope.isDeclared(qName, false)));
---
>         if (info != null) {
>           inferred = false;
>         } else if (!scope.isDeclared(qName, false) &&
>                    n.isUnscopedQualifiedName()) {
>           inferred = false;
>         }

================ Closure-60 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/60/src/com/google/javascript/jscomp/NodeUtil.java /home/yicheng/apr/d4jFixedProj/Closure/60/src/com/google/javascript/jscomp/NodeUtil.java
107a108,109
>       case Token.VOID:
>         return TernaryValue.FALSE;
135a138
>         if (!mayHaveSideEffects(n.getFirstChild())) {
136a140,141
>         }
>         break;

================ Closure-43 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/43/src/com/google/javascript/jscomp/TypedScopeCreator.java /home/yicheng/apr/d4jFixedProj/Closure/43/src/com/google/javascript/jscomp/TypedScopeCreator.java
419a420
>     private List<Node> lentObjectLiterals = null;
546a548,554
>       if (n.getParent() != null && NodeUtil.isStatement(n) &&
>           lentObjectLiterals != null) {
>         for (Node objLit : lentObjectLiterals) {
>           defineObjectLiteral(objLit);
>         }
>         lentObjectLiterals.clear();
>       }
579a588,595
>           JSDocInfo info = n.getJSDocInfo();
>           if (info != null &&
>               info.getLendsName() != null) {
>             if (lentObjectLiterals == null) {
>               lentObjectLiterals = Lists.newArrayList();
>             }
>             lentObjectLiterals.add(n);
>           } else {
580a597
>           }

================ Closure-19 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/19/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java /home/yicheng/apr/d4jFixedProj/Closure/19/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
171a172
>       case Token.THIS:
172a174
>         break;

================ Closure-25 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/25/src/com/google/javascript/jscomp/TypeInference.java /home/yicheng/apr/d4jFixedProj/Closure/25/src/com/google/javascript/jscomp/TypeInference.java
1035a1036
>     scope = traverseChildren(n, scope);
1038d1038
<     scope = traverse(constructor, scope);
1054a1055
>           backwardsInferenceFromCallSite(n, ct);
1059,1061d1059
<     for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {
<       scope = traverse(arg, scope);
<     }

================ Closure-105 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/105/src/com/google/javascript/jscomp/FoldConstants.java /home/yicheng/apr/d4jFixedProj/Closure/105/src/com/google/javascript/jscomp/FoldConstants.java
1477c1477
<     StringBuilder sb = new StringBuilder();
---
>     StringBuilder sb = null;
1483c1483,1485
<         if (sb.length() > 0) {
---
>         if (sb == null) {
>           sb = new StringBuilder();
>         } else {
1488c1490
<         if (sb.length() > 0) {
---
>         if (sb != null) {
1492c1494
<           sb = new StringBuilder();
---
>           sb = null;
1500c1502
<     if (sb.length() > 0) {
---
>     if (sb != null) {

================ Closure-49 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java /home/yicheng/apr/d4jFixedProj/Closure/49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
91,98d90
<     if (declarationRoot.getType() == Token.FUNCTION) {
<       for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {
<         String name = c.getString();
<         renamer.addDeclaredName(name);
<       }
<       Node functionBody = declarationRoot.getLastChild();
<       findDeclaredNames(functionBody, null, renamer);
<     }  else 
129a122,124
>           nameStack.push(renamer);
>         }
>         break;
130a126,127
>       case Token.LP: {
>           Renamer renamer = nameStack.peek().forChildScope();
132a130,133
>           for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
>             String name = c.getString();
>             renamer.addDeclaredName(name);
>           }
134a136,137
>           Node functionBody = n.getNext();
>           findDeclaredNames(functionBody, null, renamer);
172a176
>         nameStack.pop();
176a181
>       case Token.LP:
179a185
>         break;

================ Closure-123 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/123/src/com/google/javascript/jscomp/CodeGenerator.java /home/yicheng/apr/d4jFixedProj/Closure/123/src/com/google/javascript/jscomp/CodeGenerator.java
285c285
<         Context rhsContext = Context.OTHER;
---
>         Context rhsContext = getContextForNoInOperator(context);

================ Closure-17 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/17/src/com/google/javascript/jscomp/TypedScopeCreator.java /home/yicheng/apr/d4jFixedProj/Closure/17/src/com/google/javascript/jscomp/TypedScopeCreator.java
1291c1291,1292
<               if (rValue.getJSType() != null && !rValue.getJSType().isUnknownType()) {
---
>               JSDocInfo rValueInfo = rValue.getJSDocInfo();
>               if (rValueInfo != null && rValueInfo.hasType()) {
1292a1294,1296
>                 return rValueInfo.getType().evaluate(scope, typeRegistry);
>               } else if (rValue.getJSType() != null
>                   && !rValue.getJSType().isUnknownType()) {

================ Closure-64 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/64/src/com/google/javascript/jscomp/Compiler.java /home/yicheng/apr/d4jFixedProj/Closure/64/src/com/google/javascript/jscomp/Compiler.java
1432c1432
<         String code = toSource(root, sourceMap);
---
>         String code = toSource(root, sourceMap, inputSeqNum == 0);
1461c1461
<     return toSource(n, null);
---
>     return toSource(n, null, true);
1467c1467
<   private String toSource(Node n, SourceMap sourceMap) {
---
>   private String toSource(Node n, SourceMap sourceMap, boolean firstOutput) {
1473c1473
<     builder.setTagAsStrict(
---
>     builder.setTagAsStrict(firstOutput &&

================ Closure-131 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/131/src/com/google/javascript/rhino/TokenStream.java /home/yicheng/apr/d4jFixedProj/Closure/131/src/com/google/javascript/rhino/TokenStream.java
193a194
>           Character.isIdentifierIgnorable(s.charAt(0)) ||
199c200
<         if (
---
>         if (Character.isIdentifierIgnorable(s.charAt(i)) ||

================ Closure-114 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/114/src/com/google/javascript/jscomp/NameAnalyzer.java /home/yicheng/apr/d4jFixedProj/Closure/114/src/com/google/javascript/jscomp/NameAnalyzer.java
578c578
<         } else {
---
>         } else if (!(parent.isCall() && parent.getFirstChild() == n)) {

================ Closure-26 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java /home/yicheng/apr/d4jFixedProj/Closure/26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
127a128
>     private Set<String> modulesWithExports = Sets.newHashSet();
206a208,210
>       if (!modulesWithExports.contains(moduleName)) {
>         return;
>       }
227a232
>       modulesWithExports.add(moduleName);

================ Closure-98 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/98/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java /home/yicheng/apr/d4jFixedProj/Closure/98/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
360a361,368
>       for (BasicBlock block = ref.getBasicBlock();
>            block != null; block = block.getParent()) {
>         if (block.isFunction) {
>           break;
>         } else if (block.isLoop) {
>           return false;
>         }
>       }
544a553
>     private final boolean isFunction;
548a558
>     private final boolean isLoop;
560a571
>       this.isFunction = root.getType() == Token.FUNCTION;
561a573,580
>       if (root.getParent() != null) {
>         int pType = root.getParent().getType();
>         this.isLoop = pType == Token.DO ||
>             pType == Token.WHILE ||
>             pType == Token.FOR;
>       } else {
>         this.isLoop = false;
>       }

================ Closure-103 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java /home/yicheng/apr/d4jFixedProj/Closure/103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
893a894
>       case Token.INSTANCEOF:
diff -r /home/yicheng/apr/d4jProj/Closure/103/src/com/google/javascript/jscomp/DisambiguateProperties.java /home/yicheng/apr/d4jFixedProj/Closure/103/src/com/google/javascript/jscomp/DisambiguateProperties.java
762a763,765
>       if (foundType == null) {
>         ObjectType maybeType = ObjectType.cast(
>             registry.getGreatestSubtypeWithProperty(type, field));
765a769,772
>         if (maybeType != null && maybeType.hasOwnProperty(field)) {
>           foundType = maybeType;
>         }
>       }

================ Closure-50 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/50/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java /home/yicheng/apr/d4jFixedProj/Closure/50/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java
376c376
<       if (!NodeUtil.isImmutableValue(right)) {
---
>       if (right.getNext() != null || !NodeUtil.isImmutableValue(right)) {
388a389,390
>     if (right != null && right.getType() == Token.STRING
>         && ",".equals(right.getString())) {
389a392,394
>       n.removeChild(right);
>       reportCodeChange();
>     }

================ Closure-128 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/128/src/com/google/javascript/jscomp/CodeGenerator.java /home/yicheng/apr/d4jFixedProj/Closure/128/src/com/google/javascript/jscomp/CodeGenerator.java
784a785,787
>     if (len == 0) {
>       return false;
>     }
791c794
<     return len > 0 && s.charAt(0) != '0';
---
>     return len == 1 || s.charAt(0) != '0';

================ Closure-45 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/45/src/com/google/javascript/jscomp/RemoveUnusedVars.java /home/yicheng/apr/d4jFixedProj/Closure/45/src/com/google/javascript/jscomp/RemoveUnusedVars.java
731a732
>           boolean maybeEscaped = false;
738a740,742
>             if (assign.maybeAliased) {
>               maybeEscaped = true;
>             }
741c745
<           if (assignedToUnknownValue && hasPropertyAssign) {
---
>           if ((assignedToUnknownValue || maybeEscaped) && hasPropertyAssign) {
904c908
<       this.maybeAliased = !assignNode.getParent().isExprResult();
---
>       this.maybeAliased = NodeUtil.isExpressionResultUsed(assignNode);

================ Closure-99 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/99/src/com/google/javascript/jscomp/CheckGlobalThis.java /home/yicheng/apr/d4jFixedProj/Closure/99/src/com/google/javascript/jscomp/CheckGlobalThis.java
91a92
>            jsDoc.isInterface() ||
124a126
>         if (NodeUtil.isGet(lhs)) {
129c131,133
<           if (lhs.getQualifiedName() != null && lhs.getQualifiedName().contains(".prototype.")) {
---
>           Node llhs = lhs.getFirstChild();
>           if (llhs.getType() == Token.GETPROP &&
>               llhs.getLastChild().getString().equals("prototype")) {
131a136
>         }

================ Closure-47 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java /home/yicheng/apr/d4jFixedProj/Closure/47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java
489,490c489,490
<         .setLineNumber(entry.getSourceLine())
<         .setColumnPosition(entry.getSourceColumn());
---
>         .setLineNumber(entry.getSourceLine() + 1)
>         .setColumnPosition(entry.getSourceColumn() + 1);
diff -r /home/yicheng/apr/d4jProj/Closure/47/src/com/google/javascript/jscomp/SourceMap.java /home/yicheng/apr/d4jFixedProj/Closure/47/src/com/google/javascript/jscomp/SourceMap.java
137a138,142
>     int lineBaseOffset = 1;
>     if (generator instanceof SourceMapGeneratorV1
>         || generator instanceof SourceMapGeneratorV2) {
>       lineBaseOffset = 0;
>     }
141c146
<         new FilePosition(node.getLineno(), node.getCharno()),
---
>         new FilePosition(node.getLineno() - lineBaseOffset, node.getCharno()),

================ Closure-44 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/44/src/com/google/javascript/jscomp/CodeConsumer.java /home/yicheng/apr/d4jFixedProj/Closure/44/src/com/google/javascript/jscomp/CodeConsumer.java
193a194
>     } else if (c == '/' && getLastChar() == '/') {
198a200
>       append(" ");

================ Closure-2 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/2/src/com/google/javascript/jscomp/TypeCheck.java /home/yicheng/apr/d4jFixedProj/Closure/2/src/com/google/javascript/jscomp/TypeCheck.java
1571a1572
>     if (implicitProto == null) {
1573a1575,1576
>       currentPropertyNames = ImmutableSet.of();
>     } else {
1574a1578
>     }

================ Closure-57 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/57/src/com/google/javascript/jscomp/ClosureCodingConvention.java /home/yicheng/apr/d4jFixedProj/Closure/57/src/com/google/javascript/jscomp/ClosureCodingConvention.java
197c197
<           if (target != null) {
---
>           if (target != null && target.getType() == Token.STRING) {

================ Closure-46 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/46/src/com/google/javascript/rhino/jstype/RecordType.java /home/yicheng/apr/d4jFixedProj/Closure/46/src/com/google/javascript/rhino/jstype/RecordType.java
140,155d139
<   @Override
<   public JSType getLeastSupertype(JSType that) {
<     if (!that.isRecordType()) {
<       return super.getLeastSupertype(that);
<     }
<     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
<     for (String property : properties.keySet()) {
<       if (that.toMaybeRecordType().hasProperty(property) &&
<           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
<               getPropertyType(property))) {
<         builder.addProperty(property, getPropertyType(property),
<             getPropertyNode(property));
<       }
<     }
<     return builder.build();
<   }

================ Closure-104 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/104/src/com/google/javascript/rhino/jstype/UnionType.java /home/yicheng/apr/d4jFixedProj/Closure/104/src/com/google/javascript/rhino/jstype/UnionType.java
291c291
<     if (result != null) {
---
>     if (!result.isNoType()) {

================ Closure-20 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java /home/yicheng/apr/d4jFixedProj/Closure/20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
220c220,221
<       if (value != null) {
---
>       if (value != null && value.getNext() == null &&
>           NodeUtil.isImmutableValue(value)) {

================ Closure-51 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/51/src/com/google/javascript/jscomp/CodeConsumer.java /home/yicheng/apr/d4jFixedProj/Closure/51/src/com/google/javascript/jscomp/CodeConsumer.java
241c241
<     if ((long) x == x) {
---
>     if ((long) x == x && !isNegativeZero(x)) {
258a259
>   }
259a261,262
>   static boolean isNegativeZero(double x) {
>     return x == 0.0 && Math.copySign(1, x) == -1.0;

================ Closure-62 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java /home/yicheng/apr/d4jFixedProj/Closure/62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java
98c98
<           && 0 <= charno && charno < sourceExcerpt.length()) {
---
>           && 0 <= charno && charno <= sourceExcerpt.length()) {

================ Closure-10 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/10/src/com/google/javascript/jscomp/NodeUtil.java /home/yicheng/apr/d4jFixedProj/Closure/10/src/com/google/javascript/jscomp/NodeUtil.java
1417c1417
<       return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
---
>       return anyResultsMatch(n, MAY_BE_STRING_PREDICATE);

================ Closure-127 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java /home/yicheng/apr/d4jFixedProj/Closure/127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
170c170
<             if (nextCfgNode == fallThrough) {
---
>             if (nextCfgNode == fallThrough && !inFinally(n.getParent(), n)) {
176a177,185
>     private boolean inFinally(Node parent, Node child) {
>       if (parent == null || parent.isFunction()) {
>         return false;
>       } else if (NodeUtil.isTryFinallyNode(parent, child)) {
>         return true;
>       } else {
>         return inFinally(parent.getParent(), parent);
>       }
>     }

================ Closure-65 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/65/src/com/google/javascript/jscomp/CodeGenerator.java /home/yicheng/apr/d4jFixedProj/Closure/65/src/com/google/javascript/jscomp/CodeGenerator.java
1015c1015
<         case '\0': sb.append("\\0"); break;
---
>         case '\0': sb.append("\\000"); break;

================ Closure-83 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/83/src/com/google/javascript/jscomp/CommandLineRunner.java /home/yicheng/apr/d4jFixedProj/Closure/83/src/com/google/javascript/jscomp/CommandLineRunner.java
334c334,337
<         String param = params.getParameter(0);
---
>         String param = null;
>         try {
>           param = params.getParameter(0);
>         } catch (CmdLineException e) {}

================ Closure-70 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/70/src/com/google/javascript/jscomp/TypedScopeCreator.java /home/yicheng/apr/d4jFixedProj/Closure/70/src/com/google/javascript/jscomp/TypedScopeCreator.java
1745c1745
<                   jsDocParameter.getJSType(), true);
---
>                   jsDocParameter.getJSType(), false);

================ Closure-35 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/35/src/com/google/javascript/jscomp/TypeInference.java /home/yicheng/apr/d4jFixedProj/Closure/35/src/com/google/javascript/jscomp/TypeInference.java
1121,1135c1121,1122
<     if (constraintObj != null && constraintObj.isRecordType()) {
<       ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());
<       if (objType != null) {
<         for (String prop : constraintObj.getOwnPropertyNames()) {
<           JSType propType = constraintObj.getPropertyType(prop);
<           if (!objType.isPropertyTypeDeclared(prop)) {
<             JSType typeToInfer = propType;
<             if (!objType.hasProperty(prop)) {
<               typeToInfer =
<                   getNativeType(VOID_TYPE).getLeastSupertype(propType);
<             }
<             objType.defineInferredProperty(prop, typeToInfer, null);
<           }
<         }
<       }
---
>     if (constraintObj != null) {
>       type.matchConstraint(constraintObj);

================ Closure-120 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/120/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java /home/yicheng/apr/d4jFixedProj/Closure/120/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
430a431,433
>           if (ref.getSymbol().getScope() != ref.scope) {
>             return false;
>           }

================ Closure-12 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/12/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java /home/yicheng/apr/d4jFixedProj/Closure/12/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java
159a160,165
>     List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(cfgNode);
>     for (DiGraphEdge<Node, Branch> edge : branchEdges) {
>       if (edge.getValue() == Branch.ON_EX) {
>         return true;
>       }
>     }

================ Closure-97 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java /home/yicheng/apr/d4jFixedProj/Closure/97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
698c698,699
<           result = lvalInt >>> rvalInt;
---
>           long lvalLong = lvalInt & 0xffffffffL;
>           result = lvalLong >>> rvalInt;

================ Closure-22 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/22/src/com/google/javascript/jscomp/CheckSideEffects.java /home/yicheng/apr/d4jFixedProj/Closure/22/src/com/google/javascript/jscomp/CheckSideEffects.java
101,104c101
<     if (parent.getType() == Token.COMMA) {
<       Node gramps = parent.getParent();
<       if (gramps.isCall() && parent == gramps.getFirstChild()) {
<         if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && "eval".equals(n.getNext().getString())) {
---
>     if (n.isExprResult() || n.isBlock()) {
106d102
<         }
111,125c107
<       if (n == parent.getLastChild()) {
<         for (Node an : parent.getAncestors()) {
<           int ancestorType = an.getType();
<           if (ancestorType == Token.COMMA)
<             continue;
<           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
<             return;
<           else
<             break;
<         }
<       }
<     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
<       if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
<            n == parent.getFirstChild().getNext().getNext())) {
<       } else {
---
>     if (n.isQualifiedName() && n.getJSDocInfo() != null) {
127d108
<       }
134,138d114
<       if (n.isQualifiedName() && n.getJSDocInfo() != null) {
<         return;
<       } else if (n.isExprResult()) {
<         return;
<       }

================ Closure-14 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/14/src/com/google/javascript/jscomp/ControlFlowAnalysis.java /home/yicheng/apr/d4jFixedProj/Closure/14/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
767c767
<               cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);
---
>               cfa.createEdge(fromNode, Branch.ON_EX, finallyNode);

================ Closure-36 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/36/src/com/google/javascript/jscomp/InlineVariables.java /home/yicheng/apr/d4jFixedProj/Closure/36/src/com/google/javascript/jscomp/InlineVariables.java
574a575,577
>           if (convention.getSingletonGetterClassName(callNode) != null) {
>             return false;
>           }

================ Closure-4 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/4/src/com/google/javascript/rhino/jstype/NamedType.java /home/yicheng/apr/d4jFixedProj/Closure/4/src/com/google/javascript/rhino/jstype/NamedType.java
190c190
<     if (detectImplicitPrototypeCycle()) {
---
>     if (detectInheritanceCycle()) {
202c202
<     if (detectImplicitPrototypeCycle()) {
---
>     if (detectInheritanceCycle()) {

================ Closure-3 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java /home/yicheng/apr/d4jFixedProj/Closure/3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
155c155
<       if (c.canInline()) {
---
>       if (c.canInline(t.getScope())) {
280c280
<     private boolean canInline() {
---
>     private boolean canInline(final Scope scope) {
374a375,380
>                   case Token.NAME:
>                     Var var = scope.getOwnSlot(input.getString());
>                     if (var != null
>                         && var.getParentNode().isCatch()) {
>                       return true;
>                     }

================ Closure-87 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java /home/yicheng/apr/d4jFixedProj/Closure/87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
522a523
>         if (maybeExpr.getType() == Token.EXPR_RESULT) {
528a530,531
>           if (maybeExpr.getFirstChild().getType() == Token.CALL) {
>             Node calledFn = maybeExpr.getFirstChild().getFirstChild();
531a535,541
>             if (calledFn.getType() == Token.GETELEM) {
>               return false;
>             } else if (calledFn.getType() == Token.GETPROP &&
>                        calledFn.getLastChild().getString().startsWith("on")) {
>               return false;
>             }
>           }
533c543,545
<           return NodeUtil.isExpressionNode(maybeExpr);
---
>           return true;
>         }
>         return false;

================ Closure-119 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/119/src/com/google/javascript/jscomp/GlobalNamespace.java /home/yicheng/apr/d4jFixedProj/Closure/119/src/com/google/javascript/jscomp/GlobalNamespace.java
365a366
>               case Token.CATCH:

================ Closure-92 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java /home/yicheng/apr/d4jFixedProj/Closure/92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
789c789
<           int indexOfDot = namespace.indexOf('.');
---
>           int indexOfDot = namespace.lastIndexOf('.');

================ Closure-110 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/110/src/com/google/javascript/jscomp/ScopedAliases.java /home/yicheng/apr/d4jFixedProj/Closure/110/src/com/google/javascript/jscomp/ScopedAliases.java
357a358
>         boolean isFunctionDecl = NodeUtil.isFunctionDeclaration(parent);
366c367,368
<         } else if (isVar) {
---
>         } else if (isVar || isFunctionDecl) {
>           boolean isHoisted = NodeUtil.isHoistedFunctionDeclaration(parent);
368,369c370,371
<           Node value = n.hasChildren() ?
<               v.getInitialValue().detachFromParent() :
---
>           Node value = v.getInitialValue() != null ?
>               v.getInitialValue() :
371c373
<           Node varNode = parent;
---
>           Node varNode = null;
382a385
>           if (isFunctionDecl) {
383a387
>             Node existingName = v.getNameNode();
391a396,397
>             Node newName = IR.name("").useSourceInfoFrom(existingName);
>             value.replaceChild(existingName, newName);
392a399,402
>             varNode = IR.var(existingName).useSourceInfoFrom(existingName);
>             grandparent.replaceChild(parent, varNode);
>           } else {
>             if (value != null) {
394a405,408
>               value.detachFromParent();
>             }
>             varNode = parent;
>           }
407a422,424
>             if (isHoisted) {
>               grandparent.addChildToFront(newDecl);
>             } else {
408a426
>             }
diff -r /home/yicheng/apr/d4jProj/Closure/110/src/com/google/javascript/rhino/Node.java /home/yicheng/apr/d4jFixedProj/Closure/110/src/com/google/javascript/rhino/Node.java
553a554,556
>     if (n == null) {
>       throw new RuntimeException("node is not a child");
>     }

================ Closure-76 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/76/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java /home/yicheng/apr/d4jFixedProj/Closure/76/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java
299a300,307
>           if (n.getNext() != null) {
>             state = isVariableReadBeforeKill(
>                 n.getNext(), variable);
>             if (state == VariableLiveness.KILL) {
>               state = VariableLiveness.MAYBE_LIVE;
>             }
>           }
>           break;
304a313,317
>           if (n.getNext() != null && n.getNext().getNext() != null) {
>             state = checkHookBranchReadBeforeKill(
>                 n.getNext(), n.getNext().getNext(), variable);
>           }
>           break;
309d321
<             if (!ControlFlowGraph.isEnteringNewCfgNode(sibling)) {
310a323,327
>             if (state != VariableLiveness.MAYBE_LIVE) {
>               break;
>             }
>           }
>       }
317,319d333
<             }
<           }
<       }
339a354,356
>     if (ControlFlowGraph.isEnteringNewCfgNode(n)) { // Not a FUNCTION
>       return VariableLiveness.MAYBE_LIVE;
>     }
361a379,382
>         VariableLiveness v1 = isVariableReadBeforeKill(
>           n.getFirstChild(), variable);
>         VariableLiveness v2 = isVariableReadBeforeKill(
>           n.getLastChild(), variable);
363a385,391
>         if (v1 != VariableLiveness.MAYBE_LIVE) {
>           return v1;
>         } else if (v2 == VariableLiveness.READ) {
>           return VariableLiveness.READ;
>         } else {
>           return VariableLiveness.MAYBE_LIVE;
>         }
364a393,397
>         VariableLiveness first = isVariableReadBeforeKill(
>             n.getFirstChild(), variable);
>         if (first != VariableLiveness.MAYBE_LIVE) {
>           return first;
>         }
372d404
<           if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
378d409
<       }

================ Closure-132 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/132/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java /home/yicheng/apr/d4jFixedProj/Closure/132/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
782c782,784
<               !mayEffectMutableState(lhs)) {
---
>               !mayEffectMutableState(lhs) &&
>               (!mayHaveSideEffects(cond) ||
>                   (thenOp.isAssign() && thenOp.getFirstChild().isName()))) {

================ Closure-8 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java /home/yicheng/apr/d4jFixedProj/Closure/8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java
203a204
>           && !isNamedParameter(var)
207a209,211
>   private boolean isNamedParameter(Var v) {
>     return v.getParentNode().isParamList();
>   }

================ Closure-109 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/109/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java /home/yicheng/apr/d4jFixedProj/Closure/109/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
1908c1908,1912
<           return parseTypeName(token);
---
>     if (token == JsDocToken.QMARK) {
>       return newNode(Token.QMARK);
>     } else {
>       return parseBasicTypeExpression(token);
>     }

================ Closure-41 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/41/src/com/google/javascript/jscomp/FunctionTypeBuilder.java /home/yicheng/apr/d4jFixedProj/Closure/41/src/com/google/javascript/jscomp/FunctionTypeBuilder.java
291a292,294
>       while (oldParams.hasNext()) {
>         paramBuilder.newParameterFromNode(oldParams.next());
>       }
482a486,491
>     if (!isVarArgs) {
>       while (oldParameterType != null && !isVarArgs) {
>         builder.newParameterFromNode(oldParameterType);
>         oldParameterType = oldParameterType.getNext();
>       }
>     }

================ Closure-16 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/16/src/com/google/javascript/jscomp/ScopedAliases.java /home/yicheng/apr/d4jFixedProj/Closure/16/src/com/google/javascript/jscomp/ScopedAliases.java
169a170
>     private final Node aliasDefinition;
172c173
<     AliasedTypeNode(Node typeReference,
---
>     AliasedTypeNode(Node typeReference, Node aliasDefinition,
174a176
>       this.aliasDefinition = aliasDefinition;
180c182,186
<       typeReference.setString(aliasName);
---
>       String typeName = typeReference.getString();
>       String aliasExpanded =
>           Preconditions.checkNotNull(aliasDefinition.getQualifiedName());
>       Preconditions.checkState(typeName.startsWith(aliasName));
>       typeReference.setString(typeName.replaceFirst(aliasName, aliasExpanded));
468c474
<           aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex)));
---
>           aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode, baseName));

================ Closure-6 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/6/src/com/google/javascript/jscomp/TypeValidator.java /home/yicheng/apr/d4jFixedProj/Closure/6/src/com/google/javascript/jscomp/TypeValidator.java
366,368d365
<       if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
<         registerMismatch(rightType, leftType, null);
<       } else {
385d381
<       }
405,407d400
<       if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
<         registerMismatch(rightType, leftType, null);
<       } else {
409d401
<       }

================ Closure-1 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/1/src/com/google/javascript/jscomp/RemoveUnusedVars.java /home/yicheng/apr/d4jFixedProj/Closure/1/src/com/google/javascript/jscomp/RemoveUnusedVars.java
378a379,381
>     if (!removeGlobals) {
>       return;
>     }

================ Closure-126 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/126/src/com/google/javascript/jscomp/MinimizeExitPoints.java /home/yicheng/apr/d4jFixedProj/Closure/126/src/com/google/javascript/jscomp/MinimizeExitPoints.java
141,144d140
<       if (NodeUtil.hasFinally(n)) {
<         Node finallyBlock = n.getLastChild();
<         tryMinimizeExits(finallyBlock, exitType, labelName);
<       }

================ Closure-75 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/75/src/com/google/javascript/jscomp/NodeUtil.java /home/yicheng/apr/d4jFixedProj/Closure/75/src/com/google/javascript/jscomp/NodeUtil.java
312a313
>     if (rawJsString.contains("\u000b")) {
313a315,316
>       return null;
>     }
375c378
<         return TernaryValue.TRUE;
---
>         return TernaryValue.UNKNOWN;  // IE says "no", EcmaScript says "yes"

================ Closure-74 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java /home/yicheng/apr/d4jFixedProj/Closure/74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
907,908c907,908
<     int lhType = left.getType();
<     int rhType = right.getType();
---
>     int lhType = getNormalizedNodeType(left);
>     int rhType = getNormalizedNodeType(right);
1073a1074,1086
>   private int getNormalizedNodeType(Node n) {
>     int type = n.getType();
>     if (type == Token.NOT) {
>       TernaryValue value = NodeUtil.getPureBooleanValue(n);
>       switch (value) {
>         case TRUE:
>           return Token.TRUE;
>         case FALSE:
>           return Token.FALSE;
>       }
>     }
>     return type;
>   }

================ Closure-59 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/59/src/com/google/javascript/jscomp/Compiler.java /home/yicheng/apr/d4jFixedProj/Closure/59/src/com/google/javascript/jscomp/Compiler.java
255c255,256
<     if (options.checkGlobalThisLevel.isOn()) {
---
>     if (options.checkGlobalThisLevel.isOn() &&
>         !options.disables(DiagnosticGroups.GLOBAL_THIS)) {

================ Closure-39 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java /home/yicheng/apr/d4jFixedProj/Closure/39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java
380c380
<         sb.append(getPropertyType(property).toString());
---
>         sb.append(getPropertyType(property).toStringHelper(forAnnotations));
383c383
<         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
---
>         if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) {
394c394
<       return "{...}";
---
>       return forAnnotations ? "?" : "{...}";

================ Closure-5 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/5/src/com/google/javascript/jscomp/InlineObjectLiterals.java /home/yicheng/apr/d4jFixedProj/Closure/5/src/com/google/javascript/jscomp/InlineObjectLiterals.java
175a176,178
>           if (gramps.isDelProp()) {
>             return false;
>           }

================ Closure-67 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java /home/yicheng/apr/d4jFixedProj/Closure/67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java
318c318
<           ) {
---
>           && assign.getParent().getType() == Token.EXPR_RESULT) {

================ Closure-73 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/73/src/com/google/javascript/jscomp/CodeGenerator.java /home/yicheng/apr/d4jFixedProj/Closure/73/src/com/google/javascript/jscomp/CodeGenerator.java
1045c1045
<             if (c > 0x1f && c <= 0x7f) {
---
>             if (c > 0x1f && c < 0x7f) {

================ Closure-54 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/54/src/com/google/javascript/jscomp/TypedScopeCreator.java /home/yicheng/apr/d4jFixedProj/Closure/54/src/com/google/javascript/jscomp/TypedScopeCreator.java
1413c1413,1419
<           if (!qVar.isTypeInferred()) {
---
>           ObjectType qVarType = ObjectType.cast(qVar.getType());
>           if (qVarType != null &&
>               rhsValue != null &&
>               rhsValue.getType() == Token.OBJECTLIT) {
>             typeRegistry.resetImplicitPrototype(
>                 rhsValue.getJSType(), qVarType.getImplicitPrototype());
>           } else if (!qVar.isTypeInferred()) {
diff -r /home/yicheng/apr/d4jProj/Closure/54/src/com/google/javascript/rhino/jstype/FunctionType.java /home/yicheng/apr/d4jFixedProj/Closure/54/src/com/google/javascript/rhino/jstype/FunctionType.java
341d340
<         baseType.isUnknownType() ||
366c365,366
<     boolean replacedPrototype = prototype != null;
---
>     PrototypeObjectType oldPrototype = this.prototype;
>     boolean replacedPrototype = oldPrototype != null;
371a372
>     if (oldPrototype != null) {
373a375,376
>       oldPrototype.setOwnerFunction(null);
>     }

================ Closure-130 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/130/src/com/google/javascript/jscomp/CollapseProperties.java /home/yicheng/apr/d4jFixedProj/Closure/130/src/com/google/javascript/jscomp/CollapseProperties.java
172c172
<       if (name.globalSets == 1 && name.localSets == 0 &&
---
>       if (!name.inExterns && name.globalSets == 1 && name.localSets == 0 &&

================ Closure-122 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/122/src/com/google/javascript/jscomp/parsing/IRFactory.java /home/yicheng/apr/d4jFixedProj/Closure/122/src/com/google/javascript/jscomp/parsing/IRFactory.java
252c252,253
<     if (comment.getValue().indexOf("/* @") != -1 || comment.getValue().indexOf("\n * @") != -1) {
---
>     Pattern p = Pattern.compile("(/|(\n[ \t]*))\\*[ \t]*@[a-zA-Z]");
>     if (p.matcher(comment.getValue()).find()) {

================ Closure-33 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java /home/yicheng/apr/d4jFixedProj/Closure/33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java
556a557,559
>     if (hasReferenceName()) {
>       return;
>     }

================ Closure-116 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/116/src/com/google/javascript/jscomp/FunctionInjector.java /home/yicheng/apr/d4jFixedProj/Closure/116/src/com/google/javascript/jscomp/FunctionInjector.java
696a697,705
>     boolean hasSideEffects = false;  // empty function case
>     if (block.hasChildren()) {
>       Preconditions.checkState(block.hasOneChild());
>       Node stmt = block.getFirstChild();
>       if (stmt.isReturn()) {
>         hasSideEffects = NodeUtil.mayHaveSideEffects(
>             stmt.getFirstChild(), compiler);
>       }
>     }
722a732,734
>           if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
>             return CanInlineResult.NO;
>           }

================ Closure-113 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java /home/yicheng/apr/d4jFixedProj/Closure/113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
329c329
<       if (provided != null) {
---
>       if (provided != null || requiresLevel.isOn()) {

================ Closure-133 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/133/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java /home/yicheng/apr/d4jFixedProj/Closure/133/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
2400a2401
>     unreadToken = NO_UNREAD_TOKEN;

================ Closure-111 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/111/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java /home/yicheng/apr/d4jFixedProj/Closure/111/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java
54c54,55
<           return topType;
---
>           return topType.isAllType() ?
>               getNativeType(ARRAY_TYPE) : topType;

================ Closure-32 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java /home/yicheng/apr/d4jFixedProj/Closure/32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
1357a1358
>     int lineStartChar = -1;
1363a1365
>             lineStartChar = stream.getCharno() + 1;
1381a1384
>           lineStartChar = 0;
1388a1392,1400
>           boolean isEOC = token == JsDocToken.EOC;
>           if (!isEOC) {
>             if (lineStartChar != -1 && option == WhitespaceOption.PRESERVE) {
>               int numSpaces = stream.getCharno() - lineStartChar;
>               for (int i = 0; i < numSpaces; i++) {
>                 builder.append(' ');
>               }
>               lineStartChar = -1;
>             } else if (builder.length() > 0) {
1389a1402,1404
>               builder.append(' ');
>             }
>           }
1414,1416d1428
<           if (builder.length() > 0) {
<             builder.append(' ');
<           }

================ Closure-23 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java /home/yicheng/apr/d4jFixedProj/Closure/23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
1451c1451,1456
<     for (int i = 0; current != null && i < intIndex; i++) {
---
>     for (int i = 0; current != null; i++) {
>       if (i != intIndex) {
>         if (mayHaveSideEffects(current)) {
>           return n;
>         }
>       } else {
1452a1458
>       }

================ Closure-101 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/101/src/com/google/javascript/jscomp/CommandLineRunner.java /home/yicheng/apr/d4jFixedProj/Closure/101/src/com/google/javascript/jscomp/CommandLineRunner.java
433,435d432
<     if (flags.process_closure_primitives) {
<       options.closurePass = true;
<     }
436a434
>     options.closurePass = flags.process_closure_primitives;

================ Closure-117 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/117/src/com/google/javascript/jscomp/TypeValidator.java /home/yicheng/apr/d4jFixedProj/Closure/117/src/com/google/javascript/jscomp/TypeValidator.java
724a725,731
>     JSType type = getJSType(n);
>     if (dereference) {
>       ObjectType dereferenced = type.dereference();
>       if (dereferenced != null) {
>         type = dereferenced;
>       }
>     }
726a734,738
>     if (type.isFunctionPrototypeType() ||
>         (type.toObjectType() != null &&
>          type.toObjectType().getConstructor() != null)) {
>       return type.toString();
>     }
756,767d767
<     JSType type = getJSType(n);
<     if (dereference) {
<       ObjectType dereferenced = type.dereference();
<       if (dereferenced != null) {
<         type = dereferenced;
<       }
<     }
<     if (type.isFunctionPrototypeType() ||
<         (type.toObjectType() != null &&
<          type.toObjectType().getConstructor() != null)) {
<       return type.toString();
<     }

================ Closure-30 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/30/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java /home/yicheng/apr/d4jFixedProj/Closure/30/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
157c157
<     (new NodeTraversal(compiler, this)).traverse(root);
---
>     (new NodeTraversal(compiler, this)).traverseRoots(externs, root);
diff -r /home/yicheng/apr/d4jProj/Closure/30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java /home/yicheng/apr/d4jFixedProj/Closure/30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java
70a71
>     private boolean unknownDependencies = false;
396c397
<         if (n.isName() && jsScope.isDeclared(n.getString(), true)) {
---
>         if (n.isName()) {
397a399,401
>           if (dep == null) {
>             def.unknownDependencies = true;
>           } else {
398a403
>           }
429a435,437
>     if (def.unknownDependencies) {
>       return true;
>     }

================ Closure-125 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/125/src/com/google/javascript/jscomp/TypeCheck.java /home/yicheng/apr/d4jFixedProj/Closure/125/src/com/google/javascript/jscomp/TypeCheck.java
1661c1661
<       if (fnType != null) {
---
>       if (fnType != null && fnType.hasInstanceType()) {

================ Closure-100 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/100/src/com/google/javascript/jscomp/CheckGlobalThis.java /home/yicheng/apr/d4jFixedProj/Closure/100/src/com/google/javascript/jscomp/CheckGlobalThis.java
98a99,105
>       int pType = parent.getType();
>       if (!(pType == Token.BLOCK ||
>             pType == Token.SCRIPT ||
>             pType == Token.NAME ||
>             pType == Token.ASSIGN)) {
>         return false;
>       }
146c153
<     return false;
---
>     return parent != null && NodeUtil.isGet(parent);

================ Closure-118 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/118/src/com/google/javascript/jscomp/DisambiguateProperties.java /home/yicheng/apr/d4jFixedProj/Closure/118/src/com/google/javascript/jscomp/DisambiguateProperties.java
494a495,497
>         if (child.isQuotedString()) {
>           continue;
>         }

================ Closure-9 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java /home/yicheng/apr/d4jFixedProj/Closure/9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
118a119
>     filename = filename.replace("\\", "/");
183c184
<       String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName()));
---
>       String moduleName = guessCJSModuleName(script.getSourceFileName());

================ Closure-121 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/121/src/com/google/javascript/jscomp/InlineVariables.java /home/yicheng/apr/d4jFixedProj/Closure/121/src/com/google/javascript/jscomp/InlineVariables.java
304c304
<           referenceInfo.isAssignedOnceInLifetime()) {
---
>           referenceInfo.isAssignedOnceInLifetime() &&
307a308,309
>           (isInlineableDeclaredConstant(v, referenceInfo) ||
>            referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {

================ Closure-53 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/53/src/com/google/javascript/jscomp/InlineObjectLiterals.java /home/yicheng/apr/d4jFixedProj/Closure/53/src/com/google/javascript/jscomp/InlineObjectLiterals.java
330a331,333
>       if (nodes.isEmpty()) {
>         replacement = new Node(Token.TRUE);
>       } else {
349a353
>       }

================ Closure-94 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/94/src/com/google/javascript/jscomp/NodeUtil.java /home/yicheng/apr/d4jFixedProj/Closure/94/src/com/google/javascript/jscomp/NodeUtil.java
328a329
>       case Token.ADD:
332a334,350
>       case Token.DIV:
>       case Token.EQ:
>       case Token.GE:
>       case Token.GT:
>       case Token.LE:
>       case Token.LSH:
>       case Token.LT:
>       case Token.MOD:
>       case Token.MUL:
>       case Token.NE:
>       case Token.RSH:
>       case Token.SHEQ:
>       case Token.SHNE:
>       case Token.SUB:
>       case Token.URSH:
>         return isValidDefineValue(val.getFirstChild(), defines)
>             && isValidDefineValue(val.getLastChild(), defines);
336a355
>       case Token.POS:

================ Closure-89 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/89/src/com/google/javascript/jscomp/CollapseProperties.java /home/yicheng/apr/d4jFixedProj/Closure/89/src/com/google/javascript/jscomp/CollapseProperties.java
483a484,486
>     if (rvalue != null && rvalue.getType() == Token.FUNCTION) {
>       checkForHosedThisReferences(rvalue, refName.docInfo, refName);
>     }
diff -r /home/yicheng/apr/d4jProj/Closure/89/src/com/google/javascript/jscomp/GlobalNamespace.java /home/yicheng/apr/d4jFixedProj/Closure/89/src/com/google/javascript/jscomp/GlobalNamespace.java
920c920
<       if (type != Type.FUNCTION && aliasingGets > 0) {
---
>       if (aliasingGets > 0) {

================ Closure-82 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/82/src/com/google/javascript/rhino/jstype/JSType.java /home/yicheng/apr/d4jFixedProj/Closure/82/src/com/google/javascript/rhino/jstype/JSType.java
163c163,165
<     return isNoType() || isNoObjectType() || isNoResolvedType();
---
>     return isNoType() || isNoObjectType() || isNoResolvedType() ||
>         (registry.getNativeFunctionType(
>              JSTypeNative.LEAST_FUNCTION_TYPE) == this);

================ Closure-58 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java /home/yicheng/apr/d4jFixedProj/Closure/58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java
205a206
>           if (NodeUtil.isName(lhs)) {
207a209,211
>           } else {
>             computeGenKill(lhs, gen, kill, conditional);
>           }

================ Closure-115 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/115/src/com/google/javascript/jscomp/FunctionInjector.java /home/yicheng/apr/d4jFixedProj/Closure/115/src/com/google/javascript/jscomp/FunctionInjector.java
697,704d696
<     boolean hasSideEffects = false;
<     if (block.hasChildren()) {
<       Preconditions.checkState(block.hasOneChild());
<       Node stmt = block.getFirstChild();
<       if (stmt.isReturn()) {
<         hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
<       }
<     }
730,732d721
<           if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
<             return CanInlineResult.NO;
<           }

================ Closure-37 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/37/src/com/google/javascript/jscomp/NodeTraversal.java /home/yicheng/apr/d4jFixedProj/Closure/37/src/com/google/javascript/jscomp/NodeTraversal.java
541c541
<             body.isBlock());
---
>             body.isBlock(), body);
diff -r /home/yicheng/apr/d4jProj/Closure/37/src/com/google/javascript/jscomp/parsing/IRFactory.java /home/yicheng/apr/d4jFixedProj/Closure/37/src/com/google/javascript/jscomp/parsing/IRFactory.java
666a667
>       if (!bodyNode.isBlock()) {
669a671,673
>         Preconditions.checkState(config.isIdeMode);
>         bodyNode = IR.block();
>       }

================ Closure-84 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/84/src/com/google/javascript/jscomp/parsing/IRFactory.java /home/yicheng/apr/d4jFixedProj/Closure/84/src/com/google/javascript/jscomp/parsing/IRFactory.java
340a341,347
>       Node target = assign.getFirstChild();
>       if (!validAssignmentTarget(target)) {
>         errorReporter.error(
>           "invalid assignment target",
>           sourceName,
>           target.getLineno(), "", 0);
>       }
796a804,814
>         if (type == Token.INC || type == Token.DEC) {
>           if (!validAssignmentTarget(operand)) {
>             String msg = (type == Token.INC)
>                 ? "invalid increment target"
>                 : "invalid decrement target";
>             errorReporter.error(
>               msg,
>               sourceName,
>               operand.getLineno(), "", 0);
>           }
>         }
805a824,832
>     private boolean validAssignmentTarget(Node target) {
>       switch (target.getType()) {
>         case Token.NAME:
>         case Token.GETPROP:
>         case Token.GETELEM:
>           return true;
>       }
>       return false;
>     }

================ Closure-88 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java /home/yicheng/apr/d4jFixedProj/Closure/88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java
326a327
>         Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
329a331,335
>         Node rhs = n.getNext();
>         VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
>         if (state == VariableLiveness.READ) {
>           return state;
>         }

================ Closure-124 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/124/src/com/google/javascript/jscomp/ExploitAssigns.java /home/yicheng/apr/d4jFixedProj/Closure/124/src/com/google/javascript/jscomp/ExploitAssigns.java
212a213
>     while (node.isGetProp()) {
213a215
>     }

================ Closure-77 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/77/src/com/google/javascript/jscomp/CodeGenerator.java /home/yicheng/apr/d4jFixedProj/Closure/77/src/com/google/javascript/jscomp/CodeGenerator.java
965a966
>         case '\0': sb.append("\\0"); break;

================ Closure-85 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java /home/yicheng/apr/d4jFixedProj/Closure/85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
153,158d152
<     if (n.getParent() == null) {
<       List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();
<       if (outEdges.size() == 1) {
<         return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());
<       }
<     }
160,166d153
<       case Token.BLOCK:
<         if (n.hasChildren()) {
<           Node first = n.getFirstChild();
<           return tryRemoveUnconditionalBranching(first);
<         } else {
<           return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));
<         }
183c170
<           Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));
---
>           Node fallThrough = computeFollowing(n);
195a183,189
>     while (next != null && next.getType() == Token.BLOCK) {
>       if (next.hasChildren()) {
>         next = next.getFirstChild();
>       } else {
>         next = computeFollowing(next);
>       }
>     }

================ Closure-129 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/129/src/com/google/javascript/jscomp/PrepareAst.java /home/yicheng/apr/d4jFixedProj/Closure/129/src/com/google/javascript/jscomp/PrepareAst.java
165a166,168
>       while (first.isCast()) {
>         first = first.getFirstChild();
>       }

================ Closure-13 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/13/src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java /home/yicheng/apr/d4jFixedProj/Closure/13/src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java
126d125
<         traverse(c);
127a127
>         traverse(c);

================ Closure-69 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/69/src/com/google/javascript/jscomp/TypeCheck.java /home/yicheng/apr/d4jFixedProj/Closure/69/src/com/google/javascript/jscomp/TypeCheck.java
1579a1580,1586
>       if (functionType.isOrdinaryFunction() &&
>           !functionType.getTypeOfThis().isUnknownType() &&
>           !functionType.getTypeOfThis().isNativeObjectType() &&
>           !(child.getType() == Token.GETELEM ||
>             child.getType() == Token.GETPROP)) {
>         report(t, n, EXPECTED_THIS_TYPE, functionType.toString());
>       }

================ Closure-27 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/27/src/com/google/javascript/rhino/IR.java /home/yicheng/apr/d4jFixedProj/Closure/27/src/com/google/javascript/rhino/IR.java
110a111,113
>   private static Node blockUnchecked(Node stmt) {
>     return new Node(Token.BLOCK, stmt);
>   }
224,225c227,228
<     Preconditions.checkState(tryBody.isLabelName());
<     Preconditions.checkState(finallyBody.isLabelName());
---
>     Preconditions.checkState(tryBody.isBlock());
>     Preconditions.checkState(finallyBody.isBlock());
233c236
<     Node catchBody = block(catchNode).copyInformationFrom(catchNode);
---
>     Node catchBody = blockUnchecked(catchNode).copyInformationFrom(catchNode);

================ Closure-52 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/52/src/com/google/javascript/jscomp/CodeGenerator.java /home/yicheng/apr/d4jFixedProj/Closure/52/src/com/google/javascript/jscomp/CodeGenerator.java
745c745
<     return len > 0;
---
>     return len > 0 && s.charAt(0) != '0';

================ Closure-81 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/81/src/com/google/javascript/jscomp/parsing/IRFactory.java /home/yicheng/apr/d4jFixedProj/Closure/81/src/com/google/javascript/jscomp/parsing/IRFactory.java
516a517,523
>         int functionType = functionNode.getFunctionType();
>         if (functionType != FunctionNode.FUNCTION_EXPRESSION) {
>           errorReporter.error(
>             "unnamed function statement",
>             sourceName,
>             functionNode.getLineno(), "", 0);
>         }

================ Closure-24 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/24/src/com/google/javascript/jscomp/ScopedAliases.java /home/yicheng/apr/d4jFixedProj/Closure/24/src/com/google/javascript/jscomp/ScopedAliases.java
278,279c278,279
<         if (parent.isVar()) {
<           if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
---
>         if (parent.isVar() &&
>             n.hasChildren() && n.getFirstChild().isQualifiedName()) {
286a287
>         } else if (v.isBleedingFunction()) {
288a290
>         } else if (parent.getType() == Token.LP) {
294d295
<         }

================ Closure-55 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/55/src/com/google/javascript/jscomp/FunctionRewriter.java /home/yicheng/apr/d4jFixedProj/Closure/55/src/com/google/javascript/jscomp/FunctionRewriter.java
117c117,118
<     return NodeUtil.isFunctionExpression(n);
---
>     return NodeUtil.isFunctionExpression(n)
>         && !NodeUtil.isGetOrSetKey(n.getParent());

================ Closure-108 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/108/src/com/google/javascript/jscomp/ScopedAliases.java /home/yicheng/apr/d4jFixedProj/Closure/108/src/com/google/javascript/jscomp/ScopedAliases.java
258a259
>     private final Set<Node> injectedDecls = Sets.newHashSet();
315a317
>         injectedDecls.clear();
431a434
>             injectedDecls.add(newDecl.getFirstChild());
581c584
<         if (info != null) {
---
>         if (info != null && !injectedDecls.contains(n)) {

================ Closure-78 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/78/src/com/google/javascript/jscomp/PeepholeFoldConstants.java /home/yicheng/apr/d4jFixedProj/Closure/78/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
711d710
<           error(DiagnosticType.error("JSC_DIVIDE_BY_0_ERROR", "Divide by 0"), right);
718d716
<           error(DiagnosticType.error("JSC_DIVIDE_BY_0_ERROR", "Divide by 0"), right);

================ Closure-29 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/29/src/com/google/javascript/jscomp/InlineObjectLiterals.java /home/yicheng/apr/d4jFixedProj/Closure/29/src/com/google/javascript/jscomp/InlineObjectLiterals.java
156a157
>       Set<String> validProperties = Sets.newHashSet();
180a182,189
>           String propName = parent.getLastChild().getString();
>           if (!validProperties.contains(propName)) {
>             if (NodeUtil.isVarOrSimpleAssignLhs(parent, gramps)) {
>               validProperties.add(propName);
>             } else {
>               return false;
>             }
>           }
215a225
>           validProperties.add(child.getString());

================ Closure-106 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/106/src/com/google/javascript/jscomp/GlobalNamespace.java /home/yicheng/apr/d4jFixedProj/Closure/106/src/com/google/javascript/jscomp/GlobalNamespace.java
906a907,910
>       Preconditions.checkNotNull(declaration);
>       if (declaration.getTwin() != null) {
>         return false;
>       }
diff -r /home/yicheng/apr/d4jProj/Closure/106/src/com/google/javascript/rhino/JSDocInfoBuilder.java /home/yicheng/apr/d4jFixedProj/Closure/106/src/com/google/javascript/rhino/JSDocInfoBuilder.java
189d188
<     if (parseDocumentation) {
191d189
<     }

================ Closure-80 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/80/src/com/google/javascript/jscomp/NodeUtil.java /home/yicheng/apr/d4jFixedProj/Closure/80/src/com/google/javascript/jscomp/NodeUtil.java
1261a1262
>       case Token.DELPROP:
2909a2911
>       case Token.DELPROP:

================ Closure-7 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java /home/yicheng/apr/d4jFixedProj/Closure/7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java
613c613
<         return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
---
>         if (resultEqualsValue) {
614a615,616
>           return ctorType.getGreatestSubtype(type);
>         } else {
615a618,619
>           return type.isSubtype(ctorType) ? null : type;
>         }

================ Closure-72 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/72/src/com/google/javascript/jscomp/FunctionToBlockMutator.java /home/yicheng/apr/d4jFixedProj/Closure/72/src/com/google/javascript/jscomp/FunctionToBlockMutator.java
151a152,153
>     new RenameLabels(compiler, new LabelNameSupplier(idSupplier), false)
>         .process(null, fnNode);
diff -r /home/yicheng/apr/d4jProj/Closure/72/src/com/google/javascript/jscomp/RenameLabels.java /home/yicheng/apr/d4jFixedProj/Closure/72/src/com/google/javascript/jscomp/RenameLabels.java
215c215
<       if (li.referenced) {
---
>       if (li.referenced || !removeUnused) {

================ Closure-102 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/102/src/com/google/javascript/jscomp/Normalize.java /home/yicheng/apr/d4jFixedProj/Closure/102/src/com/google/javascript/jscomp/Normalize.java
88a89
>     removeDuplicateDeclarations(root);
94d94
<     removeDuplicateDeclarations(root);

================ Closure-38 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/38/src/com/google/javascript/jscomp/CodeConsumer.java /home/yicheng/apr/d4jFixedProj/Closure/38/src/com/google/javascript/jscomp/CodeConsumer.java
245c245
<     if (x < 0 && prev == '-') {
---
>     if ((x < 0 || negativeZero) && prev == '-') {

================ Closure-56 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/56/src/com/google/javascript/jscomp/SourceFile.java /home/yicheng/apr/d4jFixedProj/Closure/56/src/com/google/javascript/jscomp/SourceFile.java
241a242
>       if (pos >= js.length()) {
242a244,246
>       } else {
>         return js.substring(pos, js.length());
>       }

================ Closure-40 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/40/src/com/google/javascript/jscomp/NameAnalyzer.java /home/yicheng/apr/d4jFixedProj/Closure/40/src/com/google/javascript/jscomp/NameAnalyzer.java
635,636c635
<           JsName name = getName(ns.name, false);
<           if (name != null) {
---
>           JsName name = getName(ns.name, true);
639d637
<           }

================ Closure-11 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/11/src/com/google/javascript/jscomp/TypeCheck.java /home/yicheng/apr/d4jFixedProj/Closure/11/src/com/google/javascript/jscomp/TypeCheck.java
1314,1315d1313
<     } else if (n.getJSType() != null && parent.isAssign()) {
<       return;

================ Closure-61 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/61/src/com/google/javascript/jscomp/NodeUtil.java /home/yicheng/apr/d4jFixedProj/Closure/61/src/com/google/javascript/jscomp/NodeUtil.java
957a958,963
>       if (nameNode.getFirstChild().getType() == Token.NAME) {
>         String namespaceName = nameNode.getFirstChild().getString();
>         if (namespaceName.equals("Math")) {
>           return false;
>         }
>       }

================ Closure-107 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/107/src/com/google/javascript/jscomp/CommandLineRunner.java /home/yicheng/apr/d4jFixedProj/Closure/107/src/com/google/javascript/jscomp/CommandLineRunner.java
861a862
>       options.setWarningLevel(JsMessageVisitor.MSG_CONVENTIONS, CheckLevel.OFF);

================ Closure-15 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/15/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java /home/yicheng/apr/d4jFixedProj/Closure/15/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
101a102,104
>         if (n.isDelProp()) {
>           return true;
>         }

================ Closure-31 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/31/src/com/google/javascript/jscomp/Compiler.java /home/yicheng/apr/d4jFixedProj/Closure/31/src/com/google/javascript/jscomp/Compiler.java
1285d1284
<           !options.skipAllPasses &&

================ Closure-34 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Closure/34/src/com/google/javascript/jscomp/CodeGenerator.java /home/yicheng/apr/d4jFixedProj/Closure/34/src/com/google/javascript/jscomp/CodeGenerator.java
122,124c122
<         addExpr(first, p, context);
<         cc.addOp(opstr, true);
<         addExpr(last, p + 1, rhsContext);
---
>         unrollBinaryOperator(n, type, opstr, context, rhsContext, p, p + 1);
754c752
<       cc.listSeparator();
---
>       cc.addOp(opStr, true);
diff -r /home/yicheng/apr/d4jProj/Closure/34/src/com/google/javascript/jscomp/CodePrinter.java /home/yicheng/apr/d4jFixedProj/Closure/34/src/com/google/javascript/jscomp/CodePrinter.java
334c334
<         if (getLastChar() != ' ') {
---
>         if (getLastChar() != ' ' && op.charAt(0) != ',') {

================ Chart-18 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/18/source/org/jfree/data/DefaultKeyedValues.java /home/yicheng/apr/d4jFixedProj/Chart/18/source/org/jfree/data/DefaultKeyedValues.java
318d317
<         if (index < this.keys.size()) {
320d318
<         }
335c333,334
< 			return;
---
>             throw new UnknownKeyException("The key (" + key 
>                     + ") is not recognised.");
diff -r /home/yicheng/apr/d4jProj/Chart/18/source/org/jfree/data/DefaultKeyedValues2D.java /home/yicheng/apr/d4jFixedProj/Chart/18/source/org/jfree/data/DefaultKeyedValues2D.java
454a455,460
>     	if (columnKey == null) {
>     		throw new IllegalArgumentException("Null 'columnKey' argument.");
>     	}
>     	if (!this.columnKeys.contains(columnKey)) {
>     		throw new UnknownKeyException("Unknown key: " + columnKey);
>     	}
457a464,465
>             int index = rowData.getIndex(columnKey);
>             if (index >= 0) {
458a467
>             }

================ Chart-21 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java /home/yicheng/apr/d4jFixedProj/Chart/21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java
156a157
>         else {
187a189
>         }
740a743,744
>         this.minimumRangeValueRow = -1;
>         this.minimumRangeValueColumn = -1;
741a746,780
>         this.maximumRangeValueRow = -1;
>         this.maximumRangeValueColumn = -1;
>         int rowCount = getRowCount();
>         int columnCount = getColumnCount();
>         for (int r = 0; r < rowCount; r++) {
>             for (int c = 0; c < columnCount; c++) {
>                 BoxAndWhiskerItem item = getItem(r, c);
>                 if (item != null) {
>                     Number min = item.getMinOutlier();
>                     if (min != null) {
>                         double minv = min.doubleValue();
>                         if (!Double.isNaN(minv)) {
>                             if (minv < this.minimumRangeValue || Double.isNaN(
>                                     this.minimumRangeValue)) {
>                                 this.minimumRangeValue = minv;
>                                 this.minimumRangeValueRow = r;
>                                 this.minimumRangeValueColumn = c;
>                             }
>                         }
>                     }
>                     Number max = item.getMaxOutlier();
>                     if (max != null) {
>                         double maxv = max.doubleValue();
>                         if (!Double.isNaN(maxv)) {
>                             if (maxv > this.maximumRangeValue || Double.isNaN(
>                                     this.maximumRangeValue)) {
>                                 this.maximumRangeValue = maxv;
>                                 this.maximumRangeValueRow = r;
>                                 this.maximumRangeValueColumn = c;
>                             }
>                         }
>                     }
>                 }
>             }
>         }

================ Chart-19 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/19/source/org/jfree/chart/plot/CategoryPlot.java /home/yicheng/apr/d4jFixedProj/Chart/19/source/org/jfree/chart/plot/CategoryPlot.java
697a698,700
>         if (axis == null) {
>             throw new IllegalArgumentException("Null 'axis' argument.");
>         }
972a976,978
>         if (axis == null) {
>             throw new IllegalArgumentException("Null 'axis' argument.");
>         }

================ Chart-25 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java /home/yicheng/apr/d4jFixedProj/Chart/25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
258a259,261
>         if (meanValue == null) {
>             return;
>         }
315c318,320
<             double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
---
>         Number n = dataset.getStdDevValue(row, column);
>         if (n != null) {
>             double valueDelta = n.doubleValue();
343a349
>         }
402a409,411
>         if (meanValue == null) {
>             return;
>         }
459c468,470
<             double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
---
>         Number n = dataset.getStdDevValue(row, column);
>         if (n != null) {
>             double valueDelta = n.doubleValue();
486a498
>         }

================ Chart-17 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/17/source/org/jfree/data/time/TimeSeries.java /home/yicheng/apr/d4jFixedProj/Chart/17/source/org/jfree/data/time/TimeSeries.java
857c857,858
<         Object clone = createCopy(0, getItemCount() - 1);
---
>         TimeSeries clone = (TimeSeries) super.clone();
>         clone.data = (List) ObjectUtilities.deepClone(this.data);

================ Chart-26 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/26/source/org/jfree/chart/axis/Axis.java /home/yicheng/apr/d4jFixedProj/Chart/26/source/org/jfree/chart/axis/Axis.java
1191a1192
>             if (owner != null) {
1196a1198
>             }

================ Chart-2 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/2/source/org/jfree/data/general/DatasetUtilities.java /home/yicheng/apr/d4jFixedProj/Chart/2/source/org/jfree/data/general/DatasetUtilities.java
754a755
>                     double value = intervalXYData.getXValue(series, item);
756a758,761
>                     if (!Double.isNaN(value)) {
>                         minimum = Math.min(minimum, value);
>                         maximum = Math.max(maximum, value);
>                     }
758a764
>                         maximum = Math.max(maximum, lvalue);
760a767
>                         minimum = Math.min(minimum, uvalue);
1241a1249
>                     double value = ixyd.getYValue(series, item);
1243a1252,1255
>                     if (!Double.isNaN(value)) {
>                         minimum = Math.min(minimum, value);
>                         maximum = Math.max(maximum, value);
>                     }
1245a1258
>                         maximum = Math.max(maximum, lvalue);
1247a1261
>                         minimum = Math.min(minimum, uvalue);

================ Chart-20 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/20/source/org/jfree/chart/plot/ValueMarker.java /home/yicheng/apr/d4jFixedProj/Chart/20/source/org/jfree/chart/plot/ValueMarker.java
95c95
<         super(paint, stroke, paint, stroke, alpha);
---
>         super(paint, stroke, outlinePaint, outlineStroke, alpha);

================ Chart-10 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/10/source/org/jfree/chart/imagemap/StandardToolTipTagFragmentGenerator.java /home/yicheng/apr/d4jFixedProj/Chart/10/source/org/jfree/chart/imagemap/StandardToolTipTagFragmentGenerator.java
65c65
<         return " title=\"" + toolTipText
---
>         return " title=\"" + ImageMapUtilities.htmlEscape(toolTipText) 

================ Chart-12 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/12/source/org/jfree/chart/plot/MultiplePiePlot.java /home/yicheng/apr/d4jFixedProj/Chart/12/source/org/jfree/chart/plot/MultiplePiePlot.java
145c145
<         this.dataset = dataset;
---
>         setDataset(dataset);

================ Chart-22 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/22/source/org/jfree/data/KeyedObjects2D.java /home/yicheng/apr/d4jFixedProj/Chart/22/source/org/jfree/data/KeyedObjects2D.java
231d230
<         if (row >= 0) {
233c232,234
<             return rowData.getObject(columnKey);
---
>         int index = rowData.getIndex(columnKey);
>         if (index >= 0) {
>             return rowData.getObject(index);
317a319
>         allNull = true;
318a321,329
>         for (int item = 0, itemCount = this.rows.size(); item < itemCount; 
>              item++) {
>             row = (KeyedObjects) this.rows.get(item);
>             int columnIndex = row.getIndex(columnKey);
>             if (columnIndex >= 0 && row.getObject(columnIndex) != null) {
>                 allNull = false;
>                 break;
>             }
>         }
319a331,341
>         if (allNull) {
>             for (int item = 0, itemCount = this.rows.size(); item < itemCount; 
>                  item++) {
>                 row = (KeyedObjects) this.rows.get(item);
>                 int columnIndex = row.getIndex(columnKey);
>                 if (columnIndex >= 0) {
>                     row.removeValue(columnIndex);
>                 }
>             }
>             this.columnKeys.remove(columnKey);
>         }
344a367,370
>         if (index < 0) {
>             throw new UnknownKeyException("Row key (" + rowKey 
>                     + ") not recognised.");
>         }
378c404,407
<                 rowData.removeValue(columnKey);
---
>             int i = rowData.getIndex(columnKey);
>             if (i >= 0) {
>                 rowData.removeValue(i);
>             }

================ Chart-14 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/14/source/org/jfree/chart/plot/CategoryPlot.java /home/yicheng/apr/d4jFixedProj/Chart/14/source/org/jfree/chart/plot/CategoryPlot.java
2165a2166,2168
>         if (markers == null) {
>             return false;
>         }
2446a2450,2452
>         }
>         if (markers == null) {
>             return false;
diff -r /home/yicheng/apr/d4jProj/Chart/14/source/org/jfree/chart/plot/XYPlot.java /home/yicheng/apr/d4jFixedProj/Chart/14/source/org/jfree/chart/plot/XYPlot.java
2292a2293,2295
>         if (markers == null) {
>             return false;
>         }
2527a2531,2533
>         }
>         if (markers == null) {
>             return false;

================ Chart-4 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/4/source/org/jfree/chart/plot/XYPlot.java /home/yicheng/apr/d4jFixedProj/Chart/4/source/org/jfree/chart/plot/XYPlot.java
4492a4493
>                 if (r != null) {
4500a4502
>                 }

================ Chart-3 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/3/source/org/jfree/data/time/TimeSeries.java /home/yicheng/apr/d4jFixedProj/Chart/3/source/org/jfree/data/time/TimeSeries.java
1056a1057,1058
>         copy.minY = Double.NaN;
>         copy.maxY = Double.NaN;

================ Chart-8 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/8/source/org/jfree/data/time/Week.java /home/yicheng/apr/d4jFixedProj/Chart/8/source/org/jfree/data/time/Week.java
175c175
<         this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());
---
>         this(time, zone, Locale.getDefault());

================ Chart-16 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java /home/yicheng/apr/d4jFixedProj/Chart/16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java
207,208c207,208
<                 this.seriesKeys = null;
<                 this.categoryKeys = null;
---
>                 this.seriesKeys = new Comparable[0];
>                 this.categoryKeys = new Comparable[0];
338c338
<         if (categoryKeys.length != this.startData[0].length) {
---
>         if (categoryKeys.length != getCategoryCount()) {

================ Chart-6 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/6/source/org/jfree/chart/util/ShapeList.java /home/yicheng/apr/d4jFixedProj/Chart/6/source/org/jfree/chart/util/ShapeList.java
111c111,118
<         return super.equals(obj);
---
>         ShapeList that = (ShapeList) obj;
>         int listSize = size();
>         for (int i = 0; i < listSize; i++) {
>            if (!ShapeUtilities.equal((Shape) get(i), (Shape) that.get(i))) {
>                return false;
>            }
>         }
>         return true;

================ Chart-1 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java /home/yicheng/apr/d4jFixedProj/Chart/1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
1797c1797
<         if (dataset != null) {
---
>         if (dataset == null) {

================ Chart-5 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/5/source/org/jfree/data/xy/XYSeries.java /home/yicheng/apr/d4jFixedProj/Chart/5/source/org/jfree/data/xy/XYSeries.java
543a544,547
>         if (this.allowDuplicateXValues) {
>             add(x, y);
>             return null;
>         }
548c552
<         if (index >= 0 && !this.allowDuplicateXValues) {
---
>         if (index >= 0) {

================ Chart-23 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java /home/yicheng/apr/d4jFixedProj/Chart/23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java
434a435,453
>     public boolean equals(Object obj) {
>         if (obj == this) {
>             return true;
>         }
>         if (!(obj instanceof MinMaxCategoryRenderer)) {
>             return false;
>         }
>         MinMaxCategoryRenderer that = (MinMaxCategoryRenderer) obj;
>         if (this.plotLines != that.plotLines) {
>             return false;
>         }
>         if (!PaintUtilities.equal(this.groupPaint, that.groupPaint)) {
>             return false;
>         }
>         if (!this.groupStroke.equals(that.groupStroke)) {
>             return false;
>         }
>         return super.equals(obj);
>     }

================ Chart-9 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/9/source/org/jfree/data/time/TimeSeries.java /home/yicheng/apr/d4jFixedProj/Chart/9/source/org/jfree/data/time/TimeSeries.java
944c944
<         if (endIndex < 0) {
---
>         if ((endIndex < 0)  || (endIndex < startIndex)) {

================ Chart-13 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/13/source/org/jfree/chart/block/BorderArrangement.java /home/yicheng/apr/d4jFixedProj/Chart/13/source/org/jfree/chart/block/BorderArrangement.java
455c455
<                     new Range(0.0, constraint.getWidth() - w[2]),
---
>                     new Range(0.0, Math.max(constraint.getWidth() - w[2], 0.0)),

================ Chart-24 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/24/source/org/jfree/chart/renderer/GrayPaintScale.java /home/yicheng/apr/d4jFixedProj/Chart/24/source/org/jfree/chart/renderer/GrayPaintScale.java
126c126
<         int g = (int) ((value - this.lowerBound) / (this.upperBound 
---
>         int g = (int) ((v - this.lowerBound) / (this.upperBound 

================ Chart-7 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/7/source/org/jfree/data/time/TimePeriodValues.java /home/yicheng/apr/d4jFixedProj/Chart/7/source/org/jfree/data/time/TimePeriodValues.java
300c300
<             long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
---
>             long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart()
302c302
<             long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
---
>             long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd()

================ Chart-11 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/11/source/org/jfree/chart/util/ShapeUtilities.java /home/yicheng/apr/d4jFixedProj/Chart/11/source/org/jfree/chart/util/ShapeUtilities.java
275c275
<         PathIterator iterator2 = p1.getPathIterator(null);
---
>         PathIterator iterator2 = p2.getPathIterator(null);

================ Chart-15 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Chart/15/source/org/jfree/chart/plot/PiePlot.java /home/yicheng/apr/d4jFixedProj/Chart/15/source/org/jfree/chart/plot/PiePlot.java
1377a1378,1380
>         if (this.dataset == null) {
>             return 0.0;
>         }
2050a2054
>         if (this.dataset != null) {
2052a2057
>         }

================ Math-86 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java /home/yicheng/apr/d4jFixedProj/Math/86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java
114,116d113
<             if (lTData[i][i] < absolutePositivityThreshold) {
<                 throw new NotPositiveDefiniteMatrixException();
<             }
136a134,136
>             if (ltI[i] < absolutePositivityThreshold) {
>                 throw new NotPositiveDefiniteMatrixException();
>             }

================ Math-91 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/91/src/java/org/apache/commons/math/fraction/Fraction.java /home/yicheng/apr/d4jFixedProj/Math/91/src/java/org/apache/commons/math/fraction/Fraction.java
259,260c259,260
<         double nOd = doubleValue();
<         double dOn = object.doubleValue();
---
>         long nOd = ((long) numerator) * object.denominator;
>         long dOn = ((long) denominator) * object.numerator;

================ Math-18 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
932c932
<                 res[i] = (x[i] - boundaries[0][i]) / diff;
---
>                 res[i] = x[i] / diff;
958c958
<                 res[i] = diff * x[i] + boundaries[0][i];
---
>                 res[i] = diff * x[i];
989a990,991
>             final double[] bLoEnc = encode(boundaries[0]);
>             final double[] bHiEnc = encode(boundaries[1]);
992c994
<                 if (x[i] < 0) {
---
>                 if (x[i] < bLoEnc[i]) {
995c997
<                 if (x[i] > 1.0) {
---
>                 if (x[i] > bHiEnc[i]) {

================ Math-66 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java
44c44
<         setMaxEvaluations(Integer.MAX_VALUE);
---
>         setMaxEvaluations(1000);
46,47c46,47
<         setAbsoluteAccuracy(1E-10);
<         setRelativeAccuracy(1.0e-14);
---
>         setAbsoluteAccuracy(1e-11);
>         setRelativeAccuracy(1e-9);
57,60d56
<         throw new UnsupportedOperationException();
<     }
<     public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws MaxIterationsExceededException, FunctionEvaluationException {
<         clearResult();
62c58
<                         f, goalType, min, startValue, max,
---
>                         getMin(), getStartValue(), getMax(),
65,67d60
<     public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws MaxIterationsExceededException, FunctionEvaluationException {
<         return optimize(f, goalType, min, max, min + GOLDEN_SECTION * (max - min));
<     }
94,95d86
<                             UnivariateRealFunction f,
<                             GoalType goalType,
119,120c110,111
<         double fx = computeObjectiveValue(f, x);
<         if (goalType == GoalType.MAXIMIZE) {
---
>         double fx = computeObjectiveValue(x);
>         if (!isMinim) {
126,127c117
<         int count = 0;
<         while (count < maximalIterationCount) {
---
>         while (true) {
200,201c190,191
<                 double fu = computeObjectiveValue(f, u);
<                 if (goalType == GoalType.MAXIMIZE) {
---
>                 double fu = computeObjectiveValue(u);
>                 if (!isMinim) {
238c228
<                 setResult(x, (goalType == GoalType.MAXIMIZE) ? -fx : fx, count);
---
>                 setFunctionValue(isMinim ? fx : -fx);
241c231
<             ++count;
---
>             incrementIterationsCounter();
243d232
<         throw new MaxIterationsExceededException(maximalIterationCount);

================ Math-79 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/79/src/main/java/org/apache/commons/math/util/MathUtils.java /home/yicheng/apr/d4jFixedProj/Math/79/src/main/java/org/apache/commons/math/util/MathUtils.java
1624c1624
<       int sum = 0;
---
>       double sum = 0;
1626c1626
<           final int dp = p1[i] - p2[i];
---
>           final double dp = p1[i] - p2[i];

================ Math-96 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/96/src/java/org/apache/commons/math/complex/Complex.java /home/yicheng/apr/d4jFixedProj/Math/96/src/java/org/apache/commons/math/complex/Complex.java
258c258
<                     ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary())); 
---
>                     ret = (real == rhs.real) && (imaginary == rhs.imaginary); 

================ Math-21 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java /home/yicheng/apr/d4jFixedProj/Math/21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java
69d68
<         int[] swap  = new int[order];
79c78
<             swap[r] = r;
---
>             int swapR = r;
82,84c81,83
<                 int isi = index[swap[i]];
<                 if (c[ii][ii] > c[isi][isi]) {
<                     swap[r] = i;
---
>                 int isr = index[swapR];
>                 if (c[ii][ii] > c[isr][isr]) {
>                     swapR = i;
90,93c89,95
<             if (swap[r] != r) {
<                 int tmp = index[r];
<                 index[r] = index[swap[r]];
<                 index[swap[r]] = tmp;
---
>             if (swapR != r) {
>                 final int tmpIndex    = index[r];
>                 index[r]              = index[swapR];
>                 index[swapR]          = tmpIndex;
>                 final double[] tmpRow = b[r];
>                 b[r]                  = b[swapR];
>                 b[swapR]              = tmpRow;
123a126
>                 final double inverse2 = 1 / c[ir][ir];
128c131
<                     c[ii][ii] -= e * e;
---
>                     c[ii][ii] -= c[ii][ir] * c[ii][ir] * inverse2;

================ Math-95 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java /home/yicheng/apr/d4jFixedProj/Math/95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
144c144
<         double ret;
---
>         double ret = 1.0;
145a146
>         if (d > 2.0) {
147a149
>         }

================ Math-42 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java /home/yicheng/apr/d4jFixedProj/Math/42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
409a410
>           if (basicRow != null && basicRow == 0) {
413c414,415
<           if (basicRows.contains(basicRow)) {
---
>               coefficients[i] = 0;
>           } else if (basicRows.contains(basicRow)) {

================ Math-71 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java /home/yicheng/apr/d4jFixedProj/Math/71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
299a300,303
>                   interpolator.storeTime(stepStart);
>                   System.arraycopy(y, 0, yTmp, 0, y0.length);
>                   hNew     = 0;
>                   stepSize = 0;
diff -r /home/yicheng/apr/d4jProj/Math/71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java /home/yicheng/apr/d4jFixedProj/Math/71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java
179a180,182
>                 interpolator.storeTime(stepStart);
>                 System.arraycopy(y, 0, yTmp, 0, y0.length);
>                 stepSize = 0;

================ Math-28 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java /home/yicheng/apr/d4jFixedProj/Math/28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
118a119
>             if (tableau.getNumArtificialVariables() > 0) {
127a129
>             }
137a140
>             if (getIterations() < getMaxIterations() / 2) {
151a155
>             }

================ Math-68 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/68/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/68/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java
165a166
>         setConvergenceChecker(null);
246a248
>         VectorialPointValuePair current = new VectorialPointValuePair(point, objective);
251a254
>             VectorialPointValuePair previous = current;
303c306
<                 return new VectorialPointValuePair(point, objective);
---
>                 return current;
344a348
>                 current = new VectorialPointValuePair(point, objective);
412a417
>                 if (checker != null) {
413a419,422
>                     if (checker.converged(getIterations(), previous, current)) {
>                         return current;                        
>                     }
>                 } else {
419c428
<                         return new VectorialPointValuePair(point, objective);
---
>                         return current;
420a430
>                 }

================ Math-90 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/90/src/java/org/apache/commons/math/stat/Frequency.java /home/yicheng/apr/d4jFixedProj/Math/90/src/java/org/apache/commons/math/stat/Frequency.java
109a110,111
>         addValue((Comparable<?>) v);
>     }
120a123
>     public void addValue(Comparable<?>v){

================ Math-48 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java /home/yicheng/apr/d4jFixedProj/Math/48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
188a189,191
>                     if (x == x1) {
>                         throw new ConvergenceException();
>                     }

================ Math-60 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java /home/yicheng/apr/d4jFixedProj/Math/60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
126c126,128
<         try {
---
>         if (FastMath.abs(dev) > 40 * standardDeviation) { 
>             return dev < 0 ? 0.0d : 1.0d;
>         }
129,137d130
<         } catch (MaxIterationsExceededException ex) {
<             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
<                 return 0;
<             } else if (x > (mean + 20 * standardDeviation)) {
<                 return 1;
<             } else {
<                 throw ex;
<             }
<         }

================ Math-43 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/43/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java /home/yicheng/apr/d4jFixedProj/Math/43/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java
158c158
<         if (!(meanImpl instanceof Mean)) {
---
>         if (meanImpl != mean) {
161c161
<         if (!(varianceImpl instanceof Variance)) {
---
>         if (varianceImpl != variance) {
164c164
<         if (!(geoMeanImpl instanceof GeometricMean)) {
---
>         if (geoMeanImpl != geoMean) {

================ Math-19 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
539a540,552
>                 for (int i = 0; i < lB.length; i++) {
>                     if (Double.isInfinite(boundaries[1][i] - boundaries[0][i])) {
>                         final double max = Double.MAX_VALUE + boundaries[0][i];
>                         final NumberIsTooLargeException e
>                             = new NumberIsTooLargeException(boundaries[1][i],
>                                                             max,
>                                                             true);
>                         e.getContext().addMessage(LocalizedFormats.OVERFLOW);
>                         e.getContext().addMessage(LocalizedFormats.INDEX, i);
> 
>                         throw e;
>                     }
>                 }

================ Math-25 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java /home/yicheng/apr/d4jFixedProj/Math/25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java
322a323
>                 if (c2 == 0) {
324a326,327
>                     throw new MathIllegalStateException(LocalizedFormats.ZERO_DENOMINATOR);
>                 }

================ Math-105 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java /home/yicheng/apr/d4jFixedProj/Math/105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java
264c264
<         return sumYY - sumXY * sumXY / sumXX;
---
>         return Math.max(0d, sumYY - sumXY * sumXY / sumXX);

================ Math-49 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java /home/yicheng/apr/d4jFixedProj/Math/49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java
345c345
<         Iterator iter = res.entries.iterator();
---
>         Iterator iter = entries.iterator();
358c358
<         Iterator iter = res.entries.iterator();
---
>         Iterator iter = entries.iterator();
370c370
<         Iterator iter = res.entries.iterator();
---
>         Iterator iter = entries.iterator();
383c383
<         Iterator iter = res.entries.iterator();
---
>         Iterator iter = entries.iterator();

================ Math-17 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/17/src/main/java/org/apache/commons/math3/dfp/Dfp.java /home/yicheng/apr/d4jFixedProj/Math/17/src/main/java/org/apache/commons/math3/dfp/Dfp.java
1602a1603
>         if (x >= 0 && x < RADIX) {
1603a1605,1607
>         } else {
>             return multiply(newInstance(x));
>         }

================ Math-64 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java
257a258,259
>         double[] oldObj  = new double[rows];
>         double[] qtf     = new double[rows];
269a272,274
>             for (int i=0;i<rows;i++) {
>                 qtf[i]=residuals[i];
>             }
278c283
<             qTy(residuals);
---
>             qTy(qtf);
316c321
<                             sum += jacobian[i][pj] * residuals[i];
---
>                             sum += jacobian[i][pj] * qtf[i];
323a329,330
>             	updateResidualsAndCost();
>             	current = new VectorialPointValuePair(point, objective);
343a351,353
>                 tmpVec    = objective;
>                 objective = oldObj;
>                 oldObj    = tmpVec;
346c356
<                 determineLMParameter(oldRes, delta, diag, work1, work2, work3);
---
>                 determineLMParameter(qtf, delta, diag, work1, work2, work3);
365d374
<                 current = new VectorialPointValuePair(point, objective);
420a430
>                     current = new VectorialPointValuePair(point, objective);
422a433
>                     if (checker != null) {
423a435,438
>                     	if (checker.converged(getIterations(), previous, current)) {
>                     		return current;
>                     	}
>                     }
433a449,451
>                     tmpVec    = objective;
>                     objective = oldObj;
>                     oldObj    = tmpVec;
442,445d459
<                 } else {
<                     if (checker.converged(getIterations(), previous, current)) {
<                         return current;
<                     }

================ Math-93 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/93/src/java/org/apache/commons/math/util/MathUtils.java /home/yicheng/apr/d4jFixedProj/Math/93/src/java/org/apache/commons/math/util/MathUtils.java
345,346c345,348
<         long result = Math.round(factorialDouble(n));
<         if (result == Long.MAX_VALUE) {
---
>         if (n < 0) {
>             throw new IllegalArgumentException("must have n >= 0 for n!");
>         }
>         if (n > 20) {
376a379,381
>         if (n < 21) {
>             return factorial(n);
>         }
395a401,403
>         }
>         if (n < 21) {
>             return Math.log(factorial(n));

================ Math-26 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/26/src/main/java/org/apache/commons/math3/fraction/Fraction.java /home/yicheng/apr/d4jFixedProj/Math/26/src/main/java/org/apache/commons/math3/fraction/Fraction.java
181c181
<         if (a0 > overflow) {
---
>         if (FastMath.abs(a0) > overflow) {
209c209
<             if ((p2 > overflow) || (q2 > overflow)) {
---
>             if ((FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow)) {

================ Math-98 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java /home/yicheng/apr/d4jFixedProj/Math/98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java
991c991
<         final BigDecimal[] out = new BigDecimal[v.length];
---
>         final BigDecimal[] out = new BigDecimal[nRows];
diff -r /home/yicheng/apr/d4jProj/Math/98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java /home/yicheng/apr/d4jFixedProj/Math/98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java
779c779
<         final double[] out = new double[v.length];
---
>         final double[] out = new double[nRows];

================ Math-103 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java /home/yicheng/apr/d4jFixedProj/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
108a109
>         try {
110a112,120
>         } catch (MaxIterationsExceededException ex) {
>             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
>                 return 0.0d;
>             } else if (x > (mean + 20 * standardDeviation)) {
>                 return 1.0d;
>             } else {
>                 throw ex;
>             }
>         }

================ Math-50 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java /home/yicheng/apr/d4jFixedProj/Math/50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
187,190d186
<                     if (x == x1) {
<                         x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
<                         f0 = computeObjectiveValue(x0);
<                     }

================ Math-45 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/45/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java /home/yicheng/apr/d4jFixedProj/Math/45/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java
49a50,54
>         long lRow = (long) rowDimension;
>         long lCol = (long) columnDimension;
>         if (lRow * lCol >= (long) Integer.MAX_VALUE) {
>             throw new NumberIsTooLargeException(lRow * lCol, Integer.MAX_VALUE, false);
>         }

================ Math-99 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/99/src/java/org/apache/commons/math/util/MathUtils.java /home/yicheng/apr/d4jFixedProj/Math/99/src/java/org/apache/commons/math/util/MathUtils.java
542a543,547
>             if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {
>                 throw MathRuntimeException.createArithmeticException(
>                         "overflow: gcd({0}, {1}) is 2^31",
>                         new Object[] { p, q });
>             }
713a719,721
>         if (lcm == Integer.MIN_VALUE){
>             throw new ArithmeticException("overflow: lcm is 2^31");
>         }

================ Math-47 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/47/src/main/java/org/apache/commons/math/complex/Complex.java /home/yicheng/apr/d4jFixedProj/Math/47/src/main/java/org/apache/commons/math/complex/Complex.java
81a82
>     private final transient boolean isZero;
104a106
>         isZero = real == 0 && imaginary == 0;
256,257c258,259
<         if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {
<             return NaN;
---
>         if (divisor.isZero) {
>             return isZero ? NaN : INF;
293c295
<             return NaN;
---
>             return isZero ? NaN : INF;

================ Math-44 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java /home/yicheng/apr/d4jFixedProj/Math/44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java
280d279
<             resetOccurred = false;
333a333,335
>                     for (final EventState remaining : occuringEvents) {
>                         remaining.stepAccepted(eventT, eventY);
>                     }
342a345,347
>                     for (final EventState remaining : occuringEvents) {
>                         remaining.stepAccepted(eventT, eventY);
>                     }

================ Math-2 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java /home/yicheng/apr/d4jFixedProj/Math/2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java
268c268
<         return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();
---
>         return getSampleSize() * (getNumberOfSuccesses() / (double) getPopulationSize());

================ Math-57 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java /home/yicheng/apr/d4jFixedProj/Math/57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java
175c175
<             int sum = 0;
---
>             double sum = 0;

================ Math-46 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/46/src/main/java/org/apache/commons/math/complex/Complex.java /home/yicheng/apr/d4jFixedProj/Math/46/src/main/java/org/apache/commons/math/complex/Complex.java
260c260
<             return isZero ? NaN : INF;
---
>             return NaN;
297c297
<             return isZero ? NaN : INF;
---
>             return NaN;

================ Math-104 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/104/src/java/org/apache/commons/math/special/Gamma.java /home/yicheng/apr/d4jFixedProj/Math/104/src/java/org/apache/commons/math/special/Gamma.java
37c37
<     private static final double DEFAULT_EPSILON = 10e-9;
---
>     private static final double DEFAULT_EPSILON = 10e-15;

================ Math-20 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
921c921,922
<             return
---
>             return boundaries != null && isRepairMode ?
>                 decode(repair(x)) :

================ Math-51 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java /home/yicheng/apr/d4jFixedProj/Math/51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java
184a185,188
>                 case REGULA_FALSI:
>                     if (x == x1) {
>                         final double delta = FastMath.max(rtol * FastMath.abs(x1),
>                                                           atol);
186a191,194
>                         x0 = 0.5 * (x0 + x1 - delta);
>                         f0 = computeObjectiveValue(x0);
>                     }
>                     break;
188a197
>                     throw new MathInternalError();

================ Math-62 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/62/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/62/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java
146c146
<         return optimize(f, goal, min, max, 0);
---
>         return optimize(f, goal, min, max, min + 0.5 * (max - min));
160,162c160,161
<                 final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
<                 final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
<                 optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
---
>                 final double s = (i == 0) ? startValue : min + generator.nextDouble() * (max - min);
>                 optima[i] = optimizer.optimize(f, goal, min, max, s);

================ Math-10 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java /home/yicheng/apr/d4jFixedProj/Math/10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
1418a1419
>         result[resultOffset] = FastMath.atan2(y[yOffset], x[xOffset]);

================ Math-65 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java
240,245c240
<         double criterion = 0;
<         for (int i = 0; i < rows; ++i) {
<             final double residual = residuals[i];
<             criterion += residual * residual * residualsWeights[i];
<         }
<         return Math.sqrt(criterion / rows);
---
>         return Math.sqrt(getChiSquare() / rows);
258c253
<             chiSquare += residual * residual / residualsWeights[i];
---
>             chiSquare += residual * residual * residualsWeights[i];

================ Math-83 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java /home/yicheng/apr/d4jFixedProj/Math/83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
292c292
<         int start = getNumObjectiveFunctions();
---
>         int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
341c341
<       Integer negativeVarBasicRow = getBasicRow(getNegativeDecisionVariableOffset());
---
>       Integer negativeVarBasicRow = getBasicRowForSolution(getNegativeDecisionVariableOffset());
345c345
<           Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);
---
>           Integer basicRow = getBasicRowForSolution(getNumObjectiveFunctions() + i);

================ Math-70 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/70/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java /home/yicheng/apr/d4jFixedProj/Math/70/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java
72c72
<         return solve(min, max);
---
>         return solve(f, min, max);

================ Math-35 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java /home/yicheng/apr/d4jFixedProj/Math/35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java
51c51
<         this.elitismRate = elitismRate;
---
>         setElitismRate(elitismRate);
65c65
<         this.elitismRate = elitismRate;
---
>         setElitismRate(elitismRate);

================ Math-12 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java /home/yicheng/apr/d4jFixedProj/Math/12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java
18a19
> import java.io.Serializable;
29c30,31
<     implements RandomGenerator {
---
>     implements RandomGenerator,
>                Serializable {
30a33
>     private static final long serialVersionUID = 20130104L;

================ Math-97 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/97/src/java/org/apache/commons/math/analysis/BrentSolver.java /home/yicheng/apr/d4jFixedProj/Math/97/src/java/org/apache/commons/math/analysis/BrentSolver.java
138c138
<         if (sign >= 0) {
---
>         if (sign > 0) {
139a140,146
>             if (Math.abs(yMin) <= functionValueAccuracy) {
>                 setResult(min, 0);
>                 ret = min;
>             } else if (Math.abs(yMax) <= functionValueAccuracy) {
>                 setResult(max, 0);
>                 ret = max;
>             } else {
145c152,153
<         } else {
---
>             }
>         } else if (sign < 0){
147a156
>         } else {
148a158,162
>             if (yMin == 0.0) {
>                 ret = min;
>             } else {
>                 ret = max;
>             }

================ Math-22 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java /home/yicheng/apr/d4jFixedProj/Math/22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
275c275
<         return true;
---
>         return false;
diff -r /home/yicheng/apr/d4jProj/Math/22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java /home/yicheng/apr/d4jFixedProj/Math/22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java
184c184
<         return false;
---
>         return true;

================ Math-14 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java /home/yicheng/apr/d4jFixedProj/Math/14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java
43,46c43
<         weightMatrix = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim, dim);
<         for (int i = 0; i < dim; i++) {
<             weightMatrix.setEntry(i, i, weight[i]);
<         }
---
>         weightMatrix = new DiagonalMatrix(weight);
diff -r /home/yicheng/apr/d4jProj/Math/14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java
266a267,274
>         if (m instanceof DiagonalMatrix) {
>             final int dim = m.getRowDimension();
>             final RealMatrix sqrtM = new DiagonalMatrix(dim);
>             for (int i = 0; i < dim; i++) {
>                 sqrtM.setEntry(i, i, FastMath.sqrt(m.getEntry(i, i)));
>             }
>             return sqrtM;
>         } else {
268a277
>         }

================ Math-36 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/36/src/main/java/org/apache/commons/math/fraction/BigFraction.java /home/yicheng/apr/d4jFixedProj/Math/36/src/main/java/org/apache/commons/math/fraction/BigFraction.java
685a686
>         if (Double.isNaN(result)) {
687a689,693
>             int shift = Math.max(numerator.bitLength(),
>                                  denominator.bitLength()) - Double.MAX_EXPONENT;
>             result = numerator.shiftRight(shift).doubleValue() /
>                 denominator.shiftRight(shift).doubleValue();
>         }
732a739
>         if (Double.isNaN(result)) {
734a742,746
>             int shift = Math.max(numerator.bitLength(),
>                                  denominator.bitLength()) - Float.MAX_EXPONENT;
>             result = numerator.shiftRight(shift).floatValue() /
>                 denominator.shiftRight(shift).floatValue();
>         }

================ Math-4 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java /home/yicheng/apr/d4jFixedProj/Math/4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java
113a114,116
>         if (v1D == null) {
>             return null;
>         }
diff -r /home/yicheng/apr/d4jProj/Math/4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java /home/yicheng/apr/d4jFixedProj/Math/4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java
117a118,120
>         if (v2D == null) {
>             return null;
>         }

================ Math-3 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/3/src/main/java/org/apache/commons/math3/util/MathArrays.java /home/yicheng/apr/d4jFixedProj/Math/3/src/main/java/org/apache/commons/math3/util/MathArrays.java
820a821
>         if (len == 1) {
821a823,824
>             return a[0] * b[0];
>         }

================ Math-87 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java /home/yicheng/apr/d4jFixedProj/Math/87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
275,276c275
<             if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
<                 if (row == null) {
---
>             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
278c277
<                 } else {
---
>             } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
280d278
<                 }

================ Math-92 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/92/src/java/org/apache/commons/math/util/MathUtils.java /home/yicheng/apr/d4jFixedProj/Math/92/src/java/org/apache/commons/math/util/MathUtils.java
184,188d183
<         long result = Math.round(binomialCoefficientDouble(n, k));
<         if (result == Long.MAX_VALUE) {
<             throw new ArithmeticException(
<                 "result too large to represent in a long integer");
<         }
189a185,186
>         if (k > n / 2)
>             return binomialCoefficient(n, n - k);
195a193,194
>         long result = 1;
>         if (n <= 61) {
196a196,199
>             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
>                 result = result * i / j;
>             }
>         } else if (n <= 66) {
198a202
>             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
204a209,212
>                 long d = gcd(i, j);
>                 result = (result / (j / d)) * (i / d);
>             }
>         } else {
207a216,220
>             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
>                 long d = gcd(i, j);
>                 result = mulAndCheck((result / (j / d)), (i / d));
>             }
>         }
233a247,266
>         if (n < k) {
>             throw new IllegalArgumentException(
>                 "must have n >= k for binomial coefficient (n,k)");
>         }
>         if (n < 0) {
>             throw new IllegalArgumentException(
>                 "must have n >= 0 for binomial coefficient (n,k)");
>         }
>         if ((n == k) || (k == 0)) {
>             return 1d;
>         }
>         if ((k == 1) || (k == n - 1)) {
>             return n;
>         }
>         if (k > n/2) {
>             return binomialCoefficientDouble(n, n - k);
>         }
>         if (n < 67) {
>             return binomialCoefficient(n,k);
>         }
234a268,271
>         double result = 1d;
>         for (int i = 1; i <= k; i++) {
>              result *= (double)(n - k + i) / (double)i;
>         }
236c273
<         return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);
---
>         return Math.floor(result + 0.5);
276a314,316
>         if (n < 67) {  
>             return Math.log(binomialCoefficient(n,k));
>         }
281a322,324
>         if (n < 1030) { 
>             return Math.log(binomialCoefficientDouble(n, k));
>         } 

================ Math-76 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java /home/yicheng/apr/d4jFixedProj/Math/76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java
162c162
<                     eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1);
---
>                     eigenDecomposition.getV().getSubMatrix(0, n - 1, 0, p - 1);
166c166
<                 for (int i = 0; i < p - 1; ++i) {
---
>                 for (int i = 0; i < p; ++i) {
170a171
>                     if (i < n - 1) {
176c177
<                 }
---
>                     } else {
178c179
<                             wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j];
---
>                             wi[j] = mi * ei0[j] / singularValues[j];
179a181,182
>                     }
>                 }
248c251
<                     eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1);
---
>                     eigenDecomposition.getV().getSubMatrix(0, m - 1, 0, p - 1);
252c255
<                 for (int i = 0; i < p - 1; ++i) {
---
>                 for (int i = 0; i < p; ++i) {
255a259
>                     if (i < m - 1) {
261c265
<                 }
---
>                     } else {
263c267
<                             wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j];
---
>                             wi[j] = mi * ei0[j] / singularValues[j];
264a269,270
>                     }
>                 }

================ Math-8 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java /home/yicheng/apr/d4jFixedProj/Math/8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java
181c181
<     public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
---
>     public Object[] sample(int sampleSize) throws NotStrictlyPositiveException {
187c187
<         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
---
>         final Object[] out = new Object[sampleSize];

================ Math-41 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java /home/yicheng/apr/d4jFixedProj/Math/41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java
520c520
<                 for (int i = 0; i < weights.length; i++) {
---
>                 for (int i = begin; i < begin + length; i++) {

================ Math-16 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/16/src/main/java/org/apache/commons/math3/util/FastMath.java /home/yicheng/apr/d4jFixedProj/Math/16/src/main/java/org/apache/commons/math3/util/FastMath.java
81a82
>     private static final double LOG_MAX_VALUE = StrictMath.log(Double.MAX_VALUE);
393a395
>           if (x >= LOG_MAX_VALUE) {
394a397,399
>               final double t = exp(0.5 * x);
>               return (0.5 * t) * t;
>           } else {
397c402,403
<       if (x < -20) {
---
>       } else if (x < -20) {
>           if (x <= -LOG_MAX_VALUE) {
398a405,407
>               final double t = exp(-0.5 * x);
>               return (0.5 * t) * t;
>           } else {
399a409
>           }
454a465
>           if (x >= LOG_MAX_VALUE) {
455a467,469
>               final double t = exp(0.5 * x);
>               return (0.5 * t) * t;
>           } else {
458c472,473
<       if (x < -20) {
---
>       } else if (x < -20) {
>           if (x <= -LOG_MAX_VALUE) {
459a475,477
>               final double t = exp(-0.5 * x);
>               return (-0.5 * t) * t;
>           } else {
460a479
>           }

================ Math-6 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java
51c51
<         iterations = new Incrementor(0, new MaxIterCallback());
---
>         iterations = new Incrementor(Integer.MAX_VALUE, new MaxIterCallback());
diff -r /home/yicheng/apr/d4jProj/Math/6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
214d213
<         int iter = 0;
217c216
<             ++iter;
---
>             incrementIterationCount();
223c222
<                 if (checker.converged(iter, previous, current)) {
---
>                 if (checker.converged(getIterations(), previous, current)) {
277c276
<             if (iter % n == 0 ||
---
>             if (getIterations() % n == 0 ||
diff -r /home/yicheng/apr/d4jProj/Math/6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
387a388
>             incrementIterationCount();
diff -r /home/yicheng/apr/d4jProj/Math/6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java
191d190
<         int iter = 0;
193c192
<             ++iter;
---
>             incrementIterationCount();
227c226
<                     stop = checker.converged(iter, previous, current);
---
>                     stop = checker.converged(getIterations(), previous, current);
diff -r /home/yicheng/apr/d4jProj/Math/6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java
158c158
<             if (iteration > 0) {
---
>             if (getIterations() > 0) {
175c175
< 			++iteration;
---
>             incrementIterationCount();
diff -r /home/yicheng/apr/d4jProj/Math/6/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/6/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java
106d105
<         int iter = 0;
108c107
<             ++iter;
---
>             incrementIterationCount();
160c159
<                 converged = checker.converged(iter, previous, current);
---
>                 converged = checker.converged(getIterations(), previous, current);
diff -r /home/yicheng/apr/d4jProj/Math/6/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/6/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
322d321
<         int iter = 0;
325c324,325
<             ++iter;
---
>             incrementIterationCount();
> 
489c489
<                         if (checker.converged(iter, previous, current)) {
---
>                         if (checker.converged(getIterations(), previous, current)) {

================ Math-1 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java /home/yicheng/apr/d4jFixedProj/Math/1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java
305a306,308
>                 if (epsilon == 0.0 && FastMath.abs(q1) < maxDenominator) {
>                     break;
>                 }
diff -r /home/yicheng/apr/d4jProj/Math/1/src/main/java/org/apache/commons/math3/fraction/Fraction.java /home/yicheng/apr/d4jFixedProj/Math/1/src/main/java/org/apache/commons/math3/fraction/Fraction.java
214a215,217
>                 if (epsilon == 0.0 && FastMath.abs(q1) < maxDenominator) {
>                     break;
>                 }

================ Math-75 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/75/src/main/java/org/apache/commons/math/stat/Frequency.java /home/yicheng/apr/d4jFixedProj/Math/75/src/main/java/org/apache/commons/math/stat/Frequency.java
303c303
<         return getCumPct((Comparable<?>) v);
---
>         return getPct((Comparable<?>) v);

================ Math-74 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java /home/yicheng/apr/d4jFixedProj/Math/74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
245c245
<           final double[] scale;
---
>           final double[] scale = new double[y0.length];
247,248c247,249
<               scale = new double[y0.length];
<               java.util.Arrays.fill(scale, scalAbsoluteTolerance);
---
>               for (int i = 0; i < scale.length; ++i) {
>                 scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * Math.abs(y[i]);
>               }
250c251,253
<               scale = vecAbsoluteTolerance;
---
>               for (int i = 0; i < scale.length; ++i) {
>                 scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * Math.abs(y[i]);
>               }

================ Math-59 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/59/src/main/java/org/apache/commons/math/util/FastMath.java /home/yicheng/apr/d4jFixedProj/Math/59/src/main/java/org/apache/commons/math/util/FastMath.java
3482c3482
<         return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);
---
>         return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : a);

================ Math-39 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java /home/yicheng/apr/d4jFixedProj/Math/39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java
249a250,258
>         if (forward) {
>             if (stepStart + stepSize >= t) {
>                 stepSize = t - stepStart;
>             }
>         } else {
>             if (stepStart + stepSize <= t) {
>                 stepSize = t - stepStart;
>             }
>         }

================ Math-5 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/5/src/main/java/org/apache/commons/math3/complex/Complex.java /home/yicheng/apr/d4jFixedProj/Math/5/src/main/java/org/apache/commons/math3/complex/Complex.java
305c305
<             return NaN;
---
>             return INF;

================ Math-67 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java
92c92
<         return optimizer.getFunctionValue();
---
>         return optimaValues[0];
97c97
<         return optimizer.getResult();
---
>         return optima[0];

================ Math-73 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java /home/yicheng/apr/d4jFixedProj/Math/73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
135a136,139
>         if (yMin * yMax > 0) {
>             throw MathRuntimeException.createIllegalArgumentException(
>                   NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
>         }

================ Math-54 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/54/src/main/java/org/apache/commons/math/dfp/Dfp.java /home/yicheng/apr/d4jFixedProj/Math/54/src/main/java/org/apache/commons/math/dfp/Dfp.java
272a273,275
>                 if ((bits & 0x8000000000000000L) != 0) {
>                     sign = -1;
>                 }
2319c2322,2325
<         if (lessThan(getZero())) {
---
>         int cmp0 = compare(this, getZero());
>         if (cmp0 == 0) {
>             return sign < 0 ? -0.0 : +0.0;
>         } else if (cmp0 < 0) {

================ Math-33 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java /home/yicheng/apr/d4jFixedProj/Math/33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java
338c338
<             if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
---
>             if (Precision.compareTo(entry, 0d, epsilon) > 0) {

================ Math-32 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java /home/yicheng/apr/d4jFixedProj/Math/32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
136c136
<             if ((Boolean) tree.getAttribute()) {
---
>             if (tree.getCut() == null && (Boolean) tree.getAttribute()) {

================ Math-23 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java
150a151
>         UnivariatePointValuePair best = current;
233a235,239
>                 best = best(best,
>                             best(current,
>                                  previous,
>                                  isMinim),
>                             isMinim);
237c243
<                         return best(current, previous, isMinim);
---
>                         return best;
274c280
<                 return
---
>                 return best(best,
276a283
>                                  isMinim),

================ Math-101 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/101/src/java/org/apache/commons/math/complex/ComplexFormat.java /home/yicheng/apr/d4jFixedProj/Math/101/src/java/org/apache/commons/math/complex/ComplexFormat.java
377c377,378
<         if (
---
>         if ((startIndex >= source.length()) ||
>             (endIndex > source.length()) ||

================ Math-30 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java /home/yicheng/apr/d4jFixedProj/Math/30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java
173c173
<         final int n1n2prod = n1 * n2;
---
>         final double n1n2prod = n1 * n2;

================ Math-100 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java /home/yicheng/apr/d4jFixedProj/Math/100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java
166c166
<         final int cols = problem.getAllParameters().length;
---
>         final int cols = problem.getUnboundParameters().length;
202c202
<         int p = problem.getAllParameters().length;
---
>         int p = problem.getUnboundParameters().length;
207c207
<         double[] errors = new double[problem.getAllParameters().length];
---
>         double[] errors = new double[problem.getUnboundParameters().length];

================ Math-9 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java /home/yicheng/apr/d4jFixedProj/Math/9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
87c87,88
<         final Line reverted = new Line(zero, zero.subtract(direction));
---
>         final Line reverted = new Line(this);
>         reverted.direction = reverted.direction.negate();

================ Math-53 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/53/src/main/java/org/apache/commons/math/complex/Complex.java /home/yicheng/apr/d4jFixedProj/Math/53/src/main/java/org/apache/commons/math/complex/Complex.java
152a153,155
>         if (isNaN || rhs.isNaN) {
>             return NaN;
>         }

================ Math-94 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/94/src/java/org/apache/commons/math/util/MathUtils.java /home/yicheng/apr/d4jFixedProj/Math/94/src/java/org/apache/commons/math/util/MathUtils.java
412c412
<         if (u * v == 0) {
---
>         if ((u == 0) || (v == 0)) {

================ Math-89 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/89/src/java/org/apache/commons/math/stat/Frequency.java /home/yicheng/apr/d4jFixedProj/Math/89/src/java/org/apache/commons/math/stat/Frequency.java
109a110
>         if (v instanceof Comparable<?>){
110a112,114
>         } else {
>             throw new IllegalArgumentException("Object must implement Comparable");
>         }

================ Math-82 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java /home/yicheng/apr/d4jFixedProj/Math/82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java
82c82
<             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
---
>             if (MathUtils.compareTo(entry, 0, epsilon) > 0) {

================ Math-58 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java /home/yicheng/apr/d4jFixedProj/Math/58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java
121c121
<         return fit(new Gaussian.Parametric(), guess);
---
>         return fit(guess);

================ Math-37 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/37/src/main/java/org/apache/commons/math/complex/Complex.java /home/yicheng/apr/d4jFixedProj/Math/37/src/main/java/org/apache/commons/math/complex/Complex.java
1018c1018
<         if (isNaN) {
---
>         if (isNaN || Double.isInfinite(real)) {
1020a1021,1026
>         if (imaginary > 20.0) {
>             return createComplex(0.0, 1.0);
>         }
>         if (imaginary < -20.0) {
>             return createComplex(0.0, -1.0);
>         }
1063c1069
<         if (isNaN) {
---
>         if (isNaN || Double.isInfinite(imaginary)) {
1064a1071,1076
>         }
>         if (real > 20.0) {
>             return createComplex(1.0, 0.0);
>         }
>         if (real < -20.0) {
>             return createComplex(-1.0, 0.0);

================ Math-84 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java /home/yicheng/apr/d4jFixedProj/Math/84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java
63a64
>         final RealConvergenceChecker checker = getConvergenceChecker();
91a93,94
>                 return;
>             }
93a97,102
>             final int iter = getIterations();
>             boolean converged = true;
>             for (int i = 0; i < simplex.length; ++i) {
>                 converged &= checker.converged(iter, original[i], simplex[i]);
>             }
>             if (converged) {

================ Math-88 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java /home/yicheng/apr/d4jFixedProj/Math/88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
328a329
>         Set<Integer> basicRows = new HashSet<Integer>();
330a332
>             if (basicRows.contains(basicRow)) {
332a335,337
>                 coefficients[i] = 0;
>             } else {
>                 basicRows.add(basicRow);
336,341d340
<             if (basicRow != null) {
<                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
<                     if (tableau.getEntry(basicRow, j) == 1) {
<                          coefficients[i] = 0;
<                     }
<                 }

================ Math-77 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java /home/yicheng/apr/d4jFixedProj/Math/77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java
721c721
<             max += Math.max(max, Math.abs(a));
---
>             max = Math.max(max, Math.abs(a));
diff -r /home/yicheng/apr/d4jProj/Math/77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java /home/yicheng/apr/d4jFixedProj/Math/77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java
498,506d497
<     public double getLInfNorm() {
<         double max = 0;
<         Iterator iter = entries.iterator();
<         while (iter.hasNext()) {
<             iter.advance();
<             max += iter.value();
<         }
<         return max;
<     }

================ Math-85 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java /home/yicheng/apr/d4jFixedProj/Math/85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
198c198
<         if (fa * fb >= 0.0 ) {
---
>         if (fa * fb > 0.0 ) {

================ Math-13 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
561a562,569
>         if (m instanceof DiagonalMatrix) {
>             final int dim = m.getRowDimension();
>             final RealMatrix sqrtM = new DiagonalMatrix(dim);
>             for (int i = 0; i < dim; i++) {
>                sqrtM.setEntry(i, i, FastMath.sqrt(m.getEntry(i, i)));
>             }
>             return sqrtM;
>         } else {
563a572
>         }

================ Math-69 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java /home/yicheng/apr/d4jFixedProj/Math/69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java
171c171
<                     out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
---
>                     out[i][j] = 2 * tDistribution.cumulativeProbability(-t);

================ Math-27 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/27/src/main/java/org/apache/commons/math3/fraction/Fraction.java /home/yicheng/apr/d4jFixedProj/Math/27/src/main/java/org/apache/commons/math3/fraction/Fraction.java
597c597
<         return multiply(100).doubleValue();
---
>         return 100 * doubleValue();

================ Math-63 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/63/src/main/java/org/apache/commons/math/util/MathUtils.java /home/yicheng/apr/d4jFixedProj/Math/63/src/main/java/org/apache/commons/math/util/MathUtils.java
417c417
<         return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
---
>         return equals(x, y, 1);

================ Math-52 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/52/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java /home/yicheng/apr/d4jFixedProj/Math/52/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java
344c344,345
<   if (c == 0) {
---
>   final double inPlaneThreshold = 0.001;
>   if (c <= inPlaneThreshold * k.getNorm() * u3.getNorm()) {
353c354
<     if (c == 0) {
---
>     if (c <= inPlaneThreshold * k.getNorm() * u2Prime.getNorm()) {
359c360
<       if (c == 0) {
---
>       if (c <= 0) {

================ Math-81 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java /home/yicheng/apr/d4jFixedProj/Math/81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
602a603
>         upperSpectra = Math.max(upperSpectra, upper);
905,906c906,907
<                     for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
<                         if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
---
>                     for (int i = 4 * i0; i < 4 * n0 - 16; i += 4) {
>                         if ((work[i + 3] <= TOLERANCE_2 * work[i]) ||
1543c1544
<                 if (end - start > 2) {
---
>                 if (end - start > 3) {

================ Math-24 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java
230c230
<                         return current;
---
>                         return best(current, previous, isMinim);
267c267
<                 return current;
---
>                 return best(current, previous, isMinim);

================ Math-55 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/55/src/main/java/org/apache/commons/math/geometry/Vector3D.java /home/yicheng/apr/d4jFixedProj/Math/55/src/main/java/org/apache/commons/math/geometry/Vector3D.java
458a459,463
>       final double n1 = v1.getNormSq();
>       final double n2 = v2.getNormSq();
>       if ((n1 * n2) < MathUtils.SAFE_MIN) {
>           return ZERO;
>       }
461a467,473
>       final int deltaExp = (FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4;
>       final double x1    = FastMath.scalb(v1.x, -deltaExp);
>       final double y1    = FastMath.scalb(v1.y, -deltaExp);
>       final double z1    = FastMath.scalb(v1.z, -deltaExp);
>       final double x2    = FastMath.scalb(v2.x,  deltaExp);
>       final double y2    = FastMath.scalb(v2.y,  deltaExp);
>       final double z2    = FastMath.scalb(v2.z,  deltaExp);
469a482,483
>       final double ratio = (x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2, 2 * deltaExp);
>       final double rho   = FastMath.rint(256 * ratio) / 256;
470a485,487
>       final double x3 = x1 - rho * x2;
>       final double y3 = y1 - rho * y2;
>       final double z3 = z1 - rho * z2;
473c490
<       return new Vector3D(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x);
---
>       return new Vector3D(y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2);

================ Math-78 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/78/src/main/java/org/apache/commons/math/ode/events/EventState.java /home/yicheng/apr/d4jFixedProj/Math/78/src/main/java/org/apache/commons/math/ode/events/EventState.java
190a191
>                     if (ga * gb > 0) {
197a199,205
>                         final double epsilon = (forward ? 0.25 : -0.25) * convergence;
>                         for (int k = 0; (k < 4) && (ga * gb > 0); ++k) {
>                             ta += epsilon;
>                             interpolator.setInterpolatedTime(ta);
>                             ga = handler.g(ta, interpolator.getInterpolatedState());
>                         }
>                         if (ga * gb > 0) {
198a207,209
>                             throw MathRuntimeException.createInternalError(null);
>                         }
>                     }

================ Math-29 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java /home/yicheng/apr/d4jFixedProj/Math/29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
349,352c349,351
<         Iterator iter = entries.iterator();
<         while (iter.hasNext()) {
<             iter.advance();
<             res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));
---
>         final int n = getDimension();
>         for (int i = 0; i < n; i++) {
>             res.setEntry(i, this.getEntry(i) / v.getEntry(i));
373a373,384
>         if (v.isNaN() || v.isInfinite()) {
>             final int n = getDimension();
>             for (int i = 0; i < n; i++) {
>                 final double y = v.getEntry(i);
>                 if (Double.isNaN(y)) {
>                     res.setEntry(i, Double.NaN);
>                 } else if (Double.isInfinite(y)) {
>                     final double x = this.getEntry(i);
>                     res.setEntry(i, x * y);
>                 }
>             }
>         }

================ Math-106 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java /home/yicheng/apr/d4jFixedProj/Math/106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java
164a165
>         if (num.intValue() < 0) {
165a167,169
>             pos.setIndex(initialIndex);
>             return null;
>         }
199a204
>         if (den.intValue() < 0) {
200a206,208
>             pos.setIndex(initialIndex);
>             return null;
>         }

================ Math-80 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java /home/yicheng/apr/d4jFixedProj/Math/80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
1135c1135
<             int j = 4 * n - 1;
---
>             int j = 4 * (n - 1);

================ Math-7 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java /home/yicheng/apr/d4jFixedProj/Math/7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
346,347c346,349
<                 currentEvent.stepAccepted(eventT, eventY);
<                 isLastStep = currentEvent.stop();
---
>                 for (final EventState state : eventsStates) {
>                     state.stepAccepted(eventT, eventY);
>                     isLastStep = isLastStep || state.stop();
>                 }
357,359d358
<                     for (final EventState remaining : occuringEvents) {
<                         remaining.stepAccepted(eventT, eventY);
<                     }
363c362,365
<                 boolean needReset = currentEvent.reset(eventT, eventY);
---
>                 boolean needReset = false;
>                 for (final EventState state : eventsStates) {
>                     needReset =  needReset || state.reset(eventT, eventY);
>                 }
370,372d371
<                     for (final EventState remaining : occuringEvents) {
<                         remaining.stepAccepted(eventT, eventY);
<                     }

================ Math-72 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java /home/yicheng/apr/d4jFixedProj/Math/72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
115c115
<             setResult(yMin, 0);
---
>             setResult(min, 0);
127c127
<             setResult(yMax, 0);
---
>             setResult(max, 0);

================ Math-102 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java /home/yicheng/apr/d4jFixedProj/Math/102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java
73a74,85
>         double sumExpected = 0d;
>         double sumObserved = 0d;
>         for (int i = 0; i < observed.length; i++) {
>             sumExpected += expected[i];
>             sumObserved += observed[i];
>         }
>         double ratio = 1.0d;
>         boolean rescale = false;
>         if (Math.abs(sumExpected - sumObserved) > 10E-6) {
>             ratio = sumObserved / sumExpected;
>             rescale = true;
>         }
76a89,92
>             if (rescale) {
>                 dev = ((double) observed[i] - ratio * expected[i]);
>                 sumSq += dev * dev / (ratio * expected[i]);
>             } else {
78a95
>             }

================ Math-38 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java /home/yicheng/apr/d4jFixedProj/Math/38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java
1660c1660
<                     throw new PathIsExploredException(); // XXX
---
> //                     throw new PathIsExploredException(); // XXX
1662,1663c1662,1663
<                 final int iptMinus1 = ipt;
<                 final int jptMinus1 = jpt;
---
>                 final int iptMinus1 = ipt - 1;
>                 final int jptMinus1 = jpt - 1;
1752c1752
<                 throw new PathIsExploredException(); // XXX
---
> //                 throw new PathIsExploredException(); // XXX

================ Math-56 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/56/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java /home/yicheng/apr/d4jFixedProj/Math/56/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java
237,243c237
<         int idx = 1;
<         while (count < index) {
<             count += idx;
<             ++idx;
<         }
<         --idx;
<         indices[last] = idx;
---
>         indices[last] = index - count;

================ Math-40 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java /home/yicheng/apr/d4jFixedProj/Math/40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java
235c235,238
<                 targetY = -REDUCTION_FACTOR * yB;
---
>                 final int p = agingA - MAXIMAL_AGING;
>                 final double weightA = (1 << p) - 1;
>                 final double weightB = p + 1;
>                 targetY = (weightA * yA - weightB * REDUCTION_FACTOR * yB) / (weightA + weightB);
238c241,244
<                 targetY = -REDUCTION_FACTOR * yA;
---
>                 final int p = agingB - MAXIMAL_AGING;
>                 final double weightA = p + 1;
>                 final double weightB = (1 << p) - 1;
>                 targetY = (weightB * yB - weightA * REDUCTION_FACTOR * yA) / (weightA + weightB);

================ Math-11 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java /home/yicheng/apr/d4jFixedProj/Math/11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
183c183
<         return FastMath.pow(2 * FastMath.PI, -dim / 2) *
---
>         return FastMath.pow(2 * FastMath.PI, -0.5 * dim) *

================ Math-61 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java /home/yicheng/apr/d4jFixedProj/Math/61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java
22c22
< import org.apache.commons.math.MathRuntimeException;
---
> import org.apache.commons.math.exception.NotStrictlyPositiveException;
94c94
<             throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);
---
>             throw new NotStrictlyPositiveException(LocalizedFormats.MEAN, p);

================ Math-15 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/15/src/main/java/org/apache/commons/math3/util/FastMath.java /home/yicheng/apr/d4jFixedProj/Math/15/src/main/java/org/apache/commons/math3/util/FastMath.java
312a313
>     private static final double TWO_POWER_53 = 2 * TWO_POWER_52;
1541c1542
<             if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) {
---
>             if (y >= TWO_POWER_53 || y <= -TWO_POWER_53) {

================ Math-31 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java /home/yicheng/apr/d4jFixedProj/Math/31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
134,135d133
<         double p0 = 1.0;
<         double q1 = 1.0;
143,166c141,147
<             double cN = a * hPrev + b * p0;
<             double q2 = a * q1 + b * dPrev;
<             if (Double.isInfinite(cN) || Double.isInfinite(q2)) {
<                 double scaleFactor = 1d;
<                 double lastScaleFactor = 1d;
<                 final int maxPower = 5;
<                 final double scale = FastMath.max(a,b);
<                 if (scale <= 0) {  // Can't scale
<                     throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x);
<                 }
<                 for (int i = 0; i < maxPower; i++) {
<                     lastScaleFactor = scaleFactor;
<                     scaleFactor *= scale;
<                     if (a != 0.0 && a > b) {
<                         cN = hPrev / lastScaleFactor + (b / scaleFactor * p0);
<                         q2 = q1 / lastScaleFactor + (b / scaleFactor * dPrev);
<                     } else if (b != 0) {
<                         cN = (a / scaleFactor * hPrev) + p0 / lastScaleFactor;
<                         q2 = (a / scaleFactor * q1) + dPrev / lastScaleFactor;
<                     }
<                     if (!(Double.isInfinite(cN) || Double.isInfinite(q2))) {
<                         break;
<                     }
<                 }
---
>             double dN = a + b * dPrev;
>             if (Precision.equals(dN, 0.0, small)) {
>                 dN = small;
>             }
>             double cN = a + b / cPrev;
>             if (Precision.equals(cN, 0.0, small)) {
>                 cN = small;
169,170c150,152
<             final double deltaN = cN / q2 / cPrev;
<             hN = cPrev * deltaN;
---
>             dN = 1 / dN;
>             final double deltaN = cN * dN;
>             hN = hPrev * deltaN;
185,189c167,169
<             dPrev = q1;
<             cPrev = cN / q2;
<             p0 = hPrev;
<             hPrev = cN;
<             q1 = q2;
---
>             dPrev = dN;
>             cPrev = cN;
>             hPrev = hN;

================ Math-34 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Math/34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java /home/yicheng/apr/d4jFixedProj/Math/34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java
209c209
<         return chromosomes.iterator();
---
>         return getChromosomes().iterator();

================ Mockito-18 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/18/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java /home/yicheng/apr/d4jFixedProj/Mockito/18/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
86a87,88
>         } else if (type == Iterable.class) {
>             return new ArrayList<Object>(0);

================ Mockito-21 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/21/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java /home/yicheng/apr/d4jFixedProj/Mockito/21/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java
17c17
<         return withOuterClass(cls);
---
>         return withParams(cls, outerClassInstance);
20c20
<     private <T> T withOuterClass(Class<T> cls) {
---
>     private static <T> T withParams(Class<T> cls, Object... params) {
24,25c24,29
<             Constructor<T> c = cls.getDeclaredConstructor(outerClassInstance.getClass());
<             return c.newInstance(outerClassInstance);
---
>             for (Constructor<?> constructor : cls.getDeclaredConstructors()) {
>                 Class<?>[] types = constructor.getParameterTypes();
>                 if (paramsMatch(types, params)) {
>                     return (T) constructor.newInstance(params);
>                 }
>             }
28a33
>         throw paramsException(cls, null);
35a41,51
>     private static boolean paramsMatch(Class<?>[] types, Object[] params) {
>         if (params.length != types.length) {
>             return false;
>         }
>         for (int i = 0; i < params.length; i++) {
>             if (!types[i].isInstance(params[i])) {
>                 return false;
>             }
>         }
>         return true;
>     }

================ Mockito-28 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/28/src/org/mockito/internal/configuration/DefaultInjectionEngine.java /home/yicheng/apr/d4jFixedProj/Mockito/28/src/org/mockito/internal/configuration/DefaultInjectionEngine.java
93c93,94
<             mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
---
>             Object injected = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
>             mocks.remove(injected);

================ Mockito-19 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/19/src/org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java /home/yicheng/apr/d4jFixedProj/Mockito/19/src/org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java
114c114
<             Object injected = mockCandidateFilter.filterCandidate(mocks, field, instance).thenInject();
---
>             Object injected = mockCandidateFilter.filterCandidate(mocks, field, orderedInstanceFields, instance).thenInject();
diff -r /home/yicheng/apr/d4jProj/Mockito/19/src/org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter.java /home/yicheng/apr/d4jFixedProj/Mockito/19/src/org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter.java
12a13
> import java.util.List;
23c24
<     public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {
---
>     public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, List<Field> fields, final Object fieldInstance) {
diff -r /home/yicheng/apr/d4jProj/Mockito/19/src/org/mockito/internal/configuration/injection/filter/MockCandidateFilter.java /home/yicheng/apr/d4jFixedProj/Mockito/19/src/org/mockito/internal/configuration/injection/filter/MockCandidateFilter.java
8a9
> import java.util.List;
15c16
<             Object fieldInstance
---
>             List<Field> fields, Object instance
diff -r /home/yicheng/apr/d4jProj/Mockito/19/src/org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter.java /home/yicheng/apr/d4jFixedProj/Mockito/19/src/org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter.java
23c23
< 			Field field, Object fieldInstance) {
---
> 			Field field, List<Field> fields, Object fieldInstance) {
31c31
< 			return next.filterCandidate(mockNameMatches, field,
---
> 			return next.filterCandidate(mockNameMatches, field, fields,
41a42,57
> 		} else if (mocks.size() == 1) {
> 			String mockName = mockUtil.getMockName(mocks.iterator().next())
> 					.toString();
> 
> 			for (Field otherField : fields) {
> 				if (!otherField.equals(field)
> 						&& otherField.getType().equals(field.getType())
> 						&& otherField.getName().equals(mockName)) {
> 
> 					return new OngoingInjecter() {
> 						public Object thenInject() {
> 							return null;
> 						}
> 					};
> 				}
> 			}
43c59
< 		return next.filterCandidate(mocks, field, fieldInstance);
---
> 		return next.filterCandidate(mocks, field, fields, fieldInstance);
diff -r /home/yicheng/apr/d4jProj/Mockito/19/src/org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java /home/yicheng/apr/d4jFixedProj/Mockito/19/src/org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java
20c20
<     public OngoingInjecter filterCandidate(Collection<Object> mocks, Field field, Object fieldInstance) {
---
>     public OngoingInjecter filterCandidate(Collection<Object> mocks, Field field, List<Field> fields, Object fieldInstance) {
28c28
<         return next.filterCandidate(mockTypeMatches, field, fieldInstance);
---
>         return next.filterCandidate(mockTypeMatches, field, fields, fieldInstance);

================ Mockito-25 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/25/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java /home/yicheng/apr/d4jFixedProj/Mockito/25/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java
6a7
> import org.mockito.MockSettings;
18a20,21
> import static org.mockito.Mockito.mock;
> import static org.mockito.Mockito.withSettings;
53c56
<         return getMock(invocation);
---
>         return getMock(invocation, returnTypeGenericMetadata);
56c59
<     private Object getMock(InvocationOnMock invocation) throws Throwable {
---
>     private Object getMock(InvocationOnMock invocation, GenericMetadataSupport returnTypeGenericMetadata) throws Throwable {
68c71
<         return recordDeepStubMock(invocation, container);
---
>         return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);
76a80,85
>     private Object createNewDeepStubMock(GenericMetadataSupport returnTypeGenericMetadata) {
>         return mock(
>                 returnTypeGenericMetadata.rawType(),
>                 withSettingsUsing(returnTypeGenericMetadata)
>         );
>     }
77a87,91
>     private MockSettings withSettingsUsing(GenericMetadataSupport returnTypeGenericMetadata) {
>         MockSettings mockSettings =
>                 returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ?
>                 withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces())
>                 : withSettings();
78a93,95
>         return mockSettings
>                 .defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));
>     }
79a97,104
>     private ReturnsDeepStubs returnsDeepStubsAnswerUsing(final GenericMetadataSupport returnTypeGenericMetadata) {
>         return new ReturnsDeepStubs() {
>             @Override
>             protected GenericMetadataSupport actualParameterizedType(Object mock) {
>                 return returnTypeGenericMetadata;
>             }
>         };
>     }
81,83c106
<     private Object recordDeepStubMock(InvocationOnMock invocation, InvocationContainerImpl container) {
<         Class<?> clz = invocation.getMethod().getReturnType();
<         final Object mock = org.mockito.Mockito.mock(clz, this);
---
>     private Object recordDeepStubMock(final Object mock, InvocationContainerImpl container) throws Throwable {

================ Mockito-17 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/17/src/org/mockito/internal/creation/MockSettingsImpl.java /home/yicheng/apr/d4jFixedProj/Mockito/17/src/org/mockito/internal/creation/MockSettingsImpl.java
19a20
>     private boolean serializable;
22c23,24
<         return this.extraInterfaces(java.io.Serializable.class);
---
>         this.serializable = true;
>         return this;
74c76
<         return extraInterfaces != null && java.util.Arrays.asList(extraInterfaces).contains(java.io.Serializable.class);
---
>         return serializable;
diff -r /home/yicheng/apr/d4jProj/Mockito/17/src/org/mockito/internal/util/MockUtil.java /home/yicheng/apr/d4jFixedProj/Mockito/17/src/org/mockito/internal/util/MockUtil.java
18a19
> import java.io.Serializable;
44a46,48
>         if (settings.isSerializable()) {
>             ancillaryTypes = interfaces == null ? new Class<?>[] {Serializable.class} : new ArrayUtils().concat(interfaces, Serializable.class);
>         } else {
45a50
>         }

================ Mockito-26 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/26/src/org/mockito/internal/util/Primitives.java /home/yicheng/apr/d4jFixedProj/Mockito/26/src/org/mockito/internal/util/Primitives.java
66c66
<         primitiveValues.put(double.class, 0);
---
>         primitiveValues.put(double.class, 0D);

================ Mockito-2 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/2/src/org/mockito/internal/util/Timer.java /home/yicheng/apr/d4jFixedProj/Mockito/2/src/org/mockito/internal/util/Timer.java
2a3
> import org.mockito.exceptions.Reporter;
9a11
>         validateInput(durationMillis);
27a30,34
>     private void validateInput(long durationMillis) {
>         if (durationMillis < 0) {
>             new Reporter().cannotCreateTimerWithNegativeDurationTime(durationMillis);
>         }
>     }

================ Mockito-20 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/20/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java /home/yicheng/apr/d4jFixedProj/Mockito/20/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java
31a32
>         Instantiator instantiator = new InstantiatorProvider().getInstantiator(settings);
34c35
<             mockInstance = classInstantiator.instantiate(mockedProxyType);
---
>             mockInstance = instantiator.newInstance(mockedProxyType);
45c46
<                     "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
---
>                     "  instance creation by : " + instantiator.getClass().getSimpleName(),

================ Mockito-10 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/10/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java /home/yicheng/apr/d4jFixedProj/Mockito/10/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java
16a17
> import org.mockito.mock.MockCreationSettings;
71c72
<                 newDeepStubMock(returnTypeGenericMetadata),
---
>                 newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()),
87c88,89
<     private Object newDeepStubMock(GenericMetadataSupport returnTypeGenericMetadata) {
---
>     private Object newDeepStubMock(GenericMetadataSupport returnTypeGenericMetadata, Object parentMock) {
>         MockCreationSettings parentMockSettings = new MockUtil().getMockSettings(parentMock);
90c92
<                 withSettingsUsing(returnTypeGenericMetadata)
---
>                 withSettingsUsing(returnTypeGenericMetadata, parentMockSettings)
94c96
<     private MockSettings withSettingsUsing(GenericMetadataSupport returnTypeGenericMetadata) {
---
>     private MockSettings withSettingsUsing(GenericMetadataSupport returnTypeGenericMetadata, MockCreationSettings parentMockSettings) {
99c101
<         return mockSettings.serializable()
---
>         return propagateSerializationSettings(mockSettings, parentMockSettings)
102a105,107
>     private MockSettings propagateSerializationSettings(MockSettings mockSettings, MockCreationSettings parentMockSettings) {
>         return mockSettings.serializable(parentMockSettings.getSerializableMode());
>     }

================ Mockito-35 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/35/src/org/mockito/Matchers.java /home/yicheng/apr/d4jFixedProj/Mockito/35/src/org/mockito/Matchers.java
362c362
<         return reportMatcher(new InstanceOf(clazz)).<T>returnNull();
---
>         return reportMatcher(new InstanceOf(clazz)).<T>returnFor(clazz);
479c479
<         return reportMatcher(new Equals(value)).<T>returnNull();
---
>         return (T) reportMatcher(new Equals(value)).<T>returnFor((Class) value.getClass());
516c516
<         return reportMatcher(new Same(value)).<T>returnNull();
---
>         return (T) reportMatcher(new Same(value)).<T>returnFor((Class) value.getClass());

================ Mockito-12 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/12/src/org/mockito/internal/util/reflection/GenericMaster.java /home/yicheng/apr/d4jFixedProj/Mockito/12/src/org/mockito/internal/util/reflection/GenericMaster.java
19a20
>             if (actual instanceof Class) {
20a22
>             } else if (actual instanceof ParameterizedType) {
21a24,25
>                 return (Class) ((ParameterizedType) actual).getRawType();
>             }

================ Mockito-22 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/22/src/org/mockito/internal/matchers/Equality.java /home/yicheng/apr/d4jFixedProj/Mockito/22/src/org/mockito/internal/matchers/Equality.java
13c13,15
<         if (o1 == null || o2 == null) {
---
>         if (o1 == o2 ) {
>             return true;
> 	} else if (o1 == null || o2 == null) {

================ Mockito-14 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/14/src/org/mockito/internal/MockHandler.java /home/yicheng/apr/d4jFixedProj/Mockito/14/src/org/mockito/internal/MockHandler.java
19a20
> import org.mockito.internal.verification.MockAwareVerificationMode;
75a77
>             if (verificationMode instanceof MockAwareVerificationMode && ((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock()) {
78a81
>             }
diff -r /home/yicheng/apr/d4jProj/Mockito/14/src/org/mockito/internal/MockitoCore.java /home/yicheng/apr/d4jFixedProj/Mockito/14/src/org/mockito/internal/MockitoCore.java
22a23
> import org.mockito.internal.verification.MockAwareVerificationMode;
73c74
<         mockingProgress.verificationStarted(mode);
---
>         mockingProgress.verificationStarted(new MockAwareVerificationMode(mock, mode));

================ Mockito-36 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/36/src/org/mockito/internal/invocation/Invocation.java /home/yicheng/apr/d4jFixedProj/Mockito/36/src/org/mockito/internal/invocation/Invocation.java
10a11
> import org.mockito.exceptions.Reporter;
201a203,205
>         if (this.getMethod().getDeclaringClass().isInterface()) {
>             new Reporter().cannotCallRealMethodOnInterface();
>         }

================ Mockito-4 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/4/src/org/mockito/exceptions/Reporter.java /home/yicheng/apr/d4jFixedProj/Mockito/4/src/org/mockito/exceptions/Reporter.java
424c424
<                 "But found this interaction on mock '" + undesired.getMock() + "':",
---
>                 "But found this interaction on mock '" + safelyGetMockName(undesired.getMock()) + "':",
434c434
<                 "But found this interaction on mock '" + undesired.getMock() + "':",
---
>                 "But found this interaction on mock '" + safelyGetMockName(undesired.getMock()) + "':",
676a677,679
>         if (details.getCause() == null) {
>             return details.getMessage();
>         }

================ Mockito-3 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/3/src/org/mockito/internal/invocation/InvocationMatcher.java /home/yicheng/apr/d4jFixedProj/Mockito/3/src/org/mockito/internal/invocation/InvocationMatcher.java
127,128c127
<             for (int position = indexOfVararg; position < matchers.size(); position++) {
<                 Matcher m = matchers.get(position);
---
>             for (Matcher m : uniqueMatcherSet(indexOfVararg)) {
130c129,132
<                     ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position - indexOfVararg]);
---
>                     Object rawArgument = invocation.getRawArguments()[indexOfVararg];
>                     for (int i = 0; i < Array.getLength(rawArgument); i++) {
>                         ((CapturesArguments) m).captureFrom(Array.get(rawArgument, i));
>                     }
142a145,156
>     private Set<Matcher> uniqueMatcherSet(int indexOfVararg) {
>         HashSet<Matcher> set = new HashSet<Matcher>();
>         for (int position = indexOfVararg; position < matchers.size(); position++) {
>             Matcher matcher = matchers.get(position);
>             if(matcher instanceof MatcherDecorator) {
>                 set.add(((MatcherDecorator) matcher).getActualMatcher());
>             } else {
>                 set.add(matcher);
>             }
>         }
>         return set;
>     }

================ Mockito-8 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/8/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java /home/yicheng/apr/d4jFixedProj/Mockito/8/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
79c79
<             } else {
---
>             } else if (typeParameter != actualTypeArgument) {

================ Mockito-16 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/16/src/org/mockito/Mockito.java /home/yicheng/apr/d4jFixedProj/Mockito/16/src/org/mockito/Mockito.java
827c827
<         return MOCKITO_CORE.mock(classToMock, mockSettings);
---
>         return MOCKITO_CORE.mock(classToMock, mockSettings, true);
899c899
<                 .defaultAnswer(CALLS_REAL_METHODS)); 
---
>                 .defaultAnswer(CALLS_REAL_METHODS), true); 
diff -r /home/yicheng/apr/d4jProj/Mockito/16/src/org/mockito/internal/MockitoCore.java /home/yicheng/apr/d4jFixedProj/Mockito/16/src/org/mockito/internal/MockitoCore.java
32,33c32
<     public <T> T mock(Class<T> classToMock, MockSettings mockSettings, boolean shouldResetOngoingStubbing) { return mock(classToMock, mockSettings); }
<     public <T> T mock(Class<T> classToMock, MockSettings mockSettings) {
---
>     public <T> T mock(Class<T> classToMock, MockSettings mockSettings, boolean shouldResetOngoingStubbing) {
34a34
>         if (shouldResetOngoingStubbing) {
35a36
>         }

================ Mockito-6 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/6/src/org/mockito/Matchers.java /home/yicheng/apr/d4jFixedProj/Mockito/6/src/org/mockito/Matchers.java
122c122
<         return reportMatcher(Any.ANY).returnFalse();
---
>         return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();
137c137
<         return reportMatcher(Any.ANY).returnZero();
---
>         return reportMatcher(new InstanceOf(Byte.class)).returnZero();
152c152
<         return reportMatcher(Any.ANY).returnChar();
---
>         return reportMatcher(new InstanceOf(Character.class)).returnChar();
167c167
<         return reportMatcher(Any.ANY).returnZero();
---
>         return reportMatcher(new InstanceOf(Integer.class)).returnZero();
182c182
<         return reportMatcher(Any.ANY).returnZero();
---
>         return reportMatcher(new InstanceOf(Long.class)).returnZero();
197c197
<         return reportMatcher(Any.ANY).returnZero();
---
>         return reportMatcher(new InstanceOf(Float.class)).returnZero();
212c212
<         return reportMatcher(Any.ANY).returnZero();
---
>         return reportMatcher(new InstanceOf(Double.class)).returnZero();
227c227
<         return reportMatcher(Any.ANY).returnZero();
---
>         return reportMatcher(new InstanceOf(Short.class)).returnZero();
244c244
<         return (T) reportMatcher(Any.ANY).returnNull();
---
>         return (T) reportMatcher(new InstanceOf(Object.class)).returnNull();
292c292
<         return (T) reportMatcher(Any.ANY).returnFor(clazz);
---
>         return (T) reportMatcher(new InstanceOf(clazz)).returnFor(clazz);
309c309
<         return (T) anyObject();
---
>         return (T) reportMatcher(Any.ANY).returnNull();
324c324
<         return reportMatcher(Any.ANY).returnString();
---
>         return reportMatcher(new InstanceOf(String.class)).returnString();
339c339
<         return reportMatcher(Any.ANY).returnList();
---
>         return reportMatcher(new InstanceOf(List.class)).returnList();
358c358
<         return (List) reportMatcher(Any.ANY).returnList();
---
>         return anyList();
373c373
<         return reportMatcher(Any.ANY).returnSet();
---
>         return reportMatcher(new InstanceOf(Set.class)).returnSet();
392c392
<         return (Set) reportMatcher(Any.ANY).returnSet();
---
>         return anySet();
407c407
<         return reportMatcher(Any.ANY).returnMap();
---
>         return reportMatcher(new InstanceOf(Map.class)).returnMap();
427c427
<         return reportMatcher(Any.ANY).returnMap();
---
>         return anyMap();
442c442
<         return reportMatcher(Any.ANY).returnList();
---
>         return reportMatcher(new InstanceOf(Collection.class)).returnList();
461c461
<         return (Collection) reportMatcher(Any.ANY).returnList();
---
>         return anyCollection();

================ Mockito-1 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/1/src/org/mockito/internal/invocation/InvocationMatcher.java /home/yicheng/apr/d4jFixedProj/Mockito/1/src/org/mockito/internal/invocation/InvocationMatcher.java
123c123,134
<             throw new UnsupportedOperationException();
---
>             for (int position = 0; position < indexOfVararg; position++) {
>                 Matcher m = matchers.get(position);
>                 if (m instanceof CapturesArguments) {
>                     ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
>                 }
>             }
>             for (int position = indexOfVararg; position < matchers.size(); position++) {
>                 Matcher m = matchers.get(position);
>                 if (m instanceof CapturesArguments) {
>                     ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position - indexOfVararg]);
>                 }
>             }

================ Mockito-5 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/5/src/org/mockito/internal/verification/VerificationOverTimeImpl.java /home/yicheng/apr/d4jFixedProj/Mockito/5/src/org/mockito/internal/verification/VerificationOverTimeImpl.java
91c91
<             catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {
---
>             catch (AssertionError e) {

================ Mockito-33 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/33/src/org/mockito/internal/invocation/InvocationMatcher.java /home/yicheng/apr/d4jFixedProj/Mockito/33/src/org/mockito/internal/invocation/InvocationMatcher.java
97a98
>         if (m1.getName() != null && m1.getName().equals(m2.getName())) {
99c100,110
<         return m1.equals(m2);
---
>         	Class[] params1 = m1.getParameterTypes();
>         	Class[] params2 = m2.getParameterTypes();
>         	if (params1.length == params2.length) {
>         	    for (int i = 0; i < params1.length; i++) {
>         		if (params1[i] != params2[i])
>         		    return false;
>         	    }
>         	    return true;
>         	}
>         }
>         return false;

================ Mockito-32 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/32/src/org/mockito/internal/configuration/SpyAnnotationEngine.java /home/yicheng/apr/d4jFixedProj/Mockito/32/src/org/mockito/internal/configuration/SpyAnnotationEngine.java
18a19
> import static org.mockito.Mockito.withSettings;
49c50,53
<                         field.set(testClass, Mockito.spy(instance));
---
>                         field.set(testClass, Mockito.mock(instance.getClass(), withSettings()
>                                 .spiedInstance(instance)
>                                 .defaultAnswer(Mockito.CALLS_REAL_METHODS)
>                                 .name(field.getName())));

================ Mockito-23 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/23/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java /home/yicheng/apr/d4jFixedProj/Mockito/23/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java
44,45c44,45
<     private MockitoCore mockitoCore = new MockitoCore();
<     private ReturnsEmptyValues delegate = new ReturnsEmptyValues();
---
>     private transient MockitoCore mockitoCore;
>     private transient ReturnsEmptyValues delegate;
51a52,53
>         instantiateMockitoCoreIfNeeded();
>         instantiateDelegateIfNeeded();
58a61,65
>     private synchronized void instantiateMockitoCoreIfNeeded() {
>         if (mockitoCore == null) {
>             mockitoCore = new MockitoCore();
>         }
>     }
59a67,71
>     private synchronized void instantiateDelegateIfNeeded() {
>         if (delegate == null) {
>             delegate = new ReturnsEmptyValues();
>         }
>     }
99a112
> 		        .serializable()
114c127
<         container.addAnswer(new Answer<Object>() {
---
>         container.addAnswer(new SerializableAnswer() {
122a136
> 	abstract class SerializableAnswer implements Answer<Object>, Serializable {
123a138
> 	}

================ Mockito-30 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/30/src/org/mockito/exceptions/Reporter.java /home/yicheng/apr/d4jFixedProj/Mockito/30/src/org/mockito/exceptions/Reporter.java
438c438
<     public void smartNullPointerException(Location location) {
---
>     public void smartNullPointerException(Object obj, Location location) {
441a442
>                 obj,
diff -r /home/yicheng/apr/d4jProj/Mockito/30/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java /home/yicheng/apr/d4jFixedProj/Mockito/30/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java
56c56
<             new Reporter().smartNullPointerException(location);
---
>             new Reporter().smartNullPointerException(obj, location);

================ Mockito-9 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/9/src/org/mockito/internal/stubbing/answers/CallsRealMethods.java /home/yicheng/apr/d4jFixedProj/Mockito/9/src/org/mockito/internal/stubbing/answers/CallsRealMethods.java
7a8
> import java.lang.reflect.Modifier;
8a10
> import org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer;
35a38,40
>     	if (Modifier.isAbstract(invocation.getMethod().getModifiers())) {
>     		return new GloballyConfiguredAnswer().answer(invocation);
>     	}

================ Mockito-37 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/37/src/org/mockito/internal/stubbing/answers/AnswersValidator.java /home/yicheng/apr/d4jFixedProj/Mockito/37/src/org/mockito/internal/stubbing/answers/AnswersValidator.java
27a28,30
>         if (answer instanceof CallsRealMethods) {
>             validateMockingConcreteClass((CallsRealMethods) answer, invocation);
>         }
29a33,37
>     private void validateMockingConcreteClass(CallsRealMethods answer, Invocation invocation) {
>         if (invocation.getMethod().getDeclaringClass().isInterface()) {
>             reporter.cannotCallRealMethodOnInterface();
>         }
>     }

================ Mockito-13 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/13/src/org/mockito/internal/MockHandler.java /home/yicheng/apr/d4jFixedProj/Mockito/13/src/org/mockito/internal/MockHandler.java
77c77
<             if (verificationMode instanceof MockAwareVerificationMode && ((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock()) {                
---
>             if (((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock()) {                
80a81
>             } else {
82a84
>                 mockingProgress.verificationStarted(verificationMode);

================ Mockito-27 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/27/src/org/mockito/internal/util/MockUtil.java /home/yicheng/apr/d4jFixedProj/Mockito/27/src/org/mockito/internal/util/MockUtil.java
64,65c64
<         MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);
<         MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));
---
>         MethodInterceptorFilter newFilter = newMethodInterceptorFilter(oldMockHandler.getMockSettings());

================ Mockito-24 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/24/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java /home/yicheng/apr/d4jFixedProj/Mockito/24/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
76c76
<             return 1;
---
>             return invocation.getMock() == invocation.getArguments()[0] ? 0 : 1;

================ Mockito-29 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/29/src/org/mockito/internal/matchers/Same.java /home/yicheng/apr/d4jFixedProj/Mockito/29/src/org/mockito/internal/matchers/Same.java
29c29
<         description.appendText(wanted.toString());
---
>         description.appendText(wanted == null ? "null" : wanted.toString());

================ Mockito-7 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/7/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java /home/yicheng/apr/d4jFixedProj/Mockito/7/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
378a379
>             registerTypeParametersOn(new TypeVariable[] { typeVariable });

================ Mockito-38 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/38/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java /home/yicheng/apr/d4jFixedProj/Mockito/38/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java
48c48
<         return StringDescription.toString(m).equals(arg.toString());
---
>         return StringDescription.toString(m).equals(arg == null? "null" : arg.toString());

================ Mockito-11 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/11/src/org/mockito/internal/creation/DelegatingMethod.java /home/yicheng/apr/d4jFixedProj/Mockito/11/src/org/mockito/internal/creation/DelegatingMethod.java
54a55,61
>         if (this == o) {
>             return true;
>         }
>         if (o instanceof DelegatingMethod) {
>             DelegatingMethod that = (DelegatingMethod) o;
>             return method.equals(that.method);
>         } else {
55a63
>         }
60c68
<         return 1;
---
>         return method.hashCode();

================ Mockito-15 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/15/src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java /home/yicheng/apr/d4jFixedProj/Mockito/15/src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java
3a4
> import org.mockito.internal.util.reflection.BeanPropertySetter;
24a26
>                         if (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {
25a28
>                         }

================ Mockito-31 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/31/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java /home/yicheng/apr/d4jFixedProj/Mockito/31/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java
8a9
> import java.util.Arrays;
60c61,62
< 			return invocation.getMethod().getName() + "()";
---
> 			String args = Arrays.toString(invocation.getArguments());
> 			return invocation.getMethod().getName() + "(" + args.substring(1, args.length() - 1) +	")";

================ Mockito-34 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Mockito/34/src/org/mockito/internal/invocation/InvocationMatcher.java /home/yicheng/apr/d4jFixedProj/Mockito/34/src/org/mockito/internal/invocation/InvocationMatcher.java
106c106
<             if (m instanceof CapturesArguments) {
---
>             if (m instanceof CapturesArguments && i.getArguments().length > k) {

================ Time-18 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/18/src/main/java/org/joda/time/chrono/GJChronology.java /home/yicheng/apr/d4jFixedProj/Time/18/src/main/java/org/joda/time/chrono/GJChronology.java
363a364
>         try {
366a368,378
>         } catch (IllegalFieldValueException ex) {
>             if (monthOfYear != 2 || dayOfMonth != 29) {
>                 throw ex;
>             }
>             instant = iGregorianChronology.getDateTimeMillis
>                 (year, monthOfYear, 28,
>                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
>             if (instant >= iCutoverMillis) {
>                 throw ex;
>             }
>         }

================ Time-19 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/19/src/main/java/org/joda/time/DateTimeZone.java /home/yicheng/apr/d4jFixedProj/Time/19/src/main/java/org/joda/time/DateTimeZone.java
900c900
<         } else if (offsetLocal > 0) {
---
>         } else if (offsetLocal >= 0) {

================ Time-25 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/25/src/main/java/org/joda/time/DateTimeZone.java /home/yicheng/apr/d4jFixedProj/Time/25/src/main/java/org/joda/time/DateTimeZone.java
898a899,907
>         } else if (offsetLocal > 0) {
>             long prev = previousTransition(instantAdjusted);
>             if (prev < instantAdjusted) {
>                 int offsetPrev = getOffset(prev);
>                 int diff = offsetPrev - offsetLocal;
>                 if (instantAdjusted - prev <= diff) {
>                     return offsetPrev;
>                 }
>             }

================ Time-17 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/17/src/main/java/org/joda/time/DateTimeZone.java /home/yicheng/apr/d4jFixedProj/Time/17/src/main/java/org/joda/time/DateTimeZone.java
1167,1169c1167,1171
<         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
<         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
<         if (instantBefore == instantAfter) {
---
>         long instantBefore = instant - 3 * DateTimeConstants.MILLIS_PER_HOUR;
>         long instantAfter = instant + 3 * DateTimeConstants.MILLIS_PER_HOUR;
>         long offsetBefore = getOffset(instantBefore);
>         long offsetAfter = getOffset(instantAfter);
>         if (offsetBefore <= offsetAfter) {
1174,1175c1176,1182
<         long local = convertUTCToLocal(instant);
<         return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
---
>         long diff = offsetBefore - offsetAfter;
>         long transition = nextTransition(instantBefore);
>         long overlapStart = transition - diff;
>         long overlapEnd = transition + diff;
>         if (instant < overlapStart || instant >= overlapEnd) {
>           return instant;  // not an overlap
>         }
1177a1185,1186
>         long afterStart = instant - overlapStart;
>         if (afterStart >= diff) {
1178a1188,1189
>           return earlierOrLater ? instant : instant - diff;
>         } else {
1179a1191,1192
>           return earlierOrLater ? instant + diff : instant;
>         }

================ Time-26 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/26/src/main/java/org/joda/time/DateTimeZone.java /home/yicheng/apr/d4jFixedProj/Time/26/src/main/java/org/joda/time/DateTimeZone.java
935a936,944
>     public long convertLocalToUTC(long instantLocal, boolean strict, long originalInstantUTC) {
>         int offsetOriginal = getOffset(originalInstantUTC);
>         long instantUTC = instantLocal - offsetOriginal;
>         int offsetLocalFromOriginal = getOffset(instantUTC);
>         if (offsetLocalFromOriginal == offsetOriginal) {
>             return instantUTC;
>         }
>         return convertLocalToUTC(instantLocal, strict);
>     }
diff -r /home/yicheng/apr/d4jProj/Time/26/src/main/java/org/joda/time/chrono/ZonedChronology.java /home/yicheng/apr/d4jFixedProj/Time/26/src/main/java/org/joda/time/chrono/ZonedChronology.java
436c436
<                return iZone.convertLocalToUTC(localInstant, false);
---
>                return iZone.convertLocalToUTC(localInstant, false, instant);
448c448
<                return iZone.convertLocalToUTC(localInstant, false);
---
>                return iZone.convertLocalToUTC(localInstant, false, instant);
460c460
<                 return iZone.convertLocalToUTC(localInstant, false);
---
>                 return iZone.convertLocalToUTC(localInstant, false, instant);
467c467
<             long result = iZone.convertLocalToUTC(localInstant, false);
---
>             long result = iZone.convertLocalToUTC(localInstant, false, instant);
481c481
<             return iZone.convertLocalToUTC(localInstant, false);
---
>             return iZone.convertLocalToUTC(localInstant, false, instant);
528c528
<                 return iZone.convertLocalToUTC(localInstant, false);
---
>                 return iZone.convertLocalToUTC(localInstant, false, instant);
540c540
<                 return iZone.convertLocalToUTC(localInstant, false);
---
>                 return iZone.convertLocalToUTC(localInstant, false, instant);
diff -r /home/yicheng/apr/d4jProj/Time/26/src/main/java/org/joda/time/field/LenientDateTimeField.java /home/yicheng/apr/d4jFixedProj/Time/26/src/main/java/org/joda/time/field/LenientDateTimeField.java
75c75
<         return iBase.getZone().convertLocalToUTC(localInstant, false);
---
>         return iBase.getZone().convertLocalToUTC(localInstant, false, instant);

================ Time-2 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/2/src/main/java/org/joda/time/Partial.java /home/yicheng/apr/d4jFixedProj/Time/2/src/main/java/org/joda/time/Partial.java
218c218
<                 if (compare < 0 || (compare != 0 && loopUnitField.isSupported() == false)) {
---
>                 if (compare < 0) {
448a449,451
>                             if (fieldType.getRangeDurationType() == null) {
>                                 break;
>                             }
diff -r /home/yicheng/apr/d4jProj/Time/2/src/main/java/org/joda/time/field/UnsupportedDurationField.java /home/yicheng/apr/d4jFixedProj/Time/2/src/main/java/org/joda/time/field/UnsupportedDurationField.java
226a227,229
>         if (durationField.isSupported()) {
>             return 1;
>         }

================ Time-20 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java /home/yicheng/apr/d4jFixedProj/Time/20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
2541a2542
>             String best = null;
2544,2545c2545,2547
<                     bucket.setZone(DateTimeZone.forID(id));
<                     return position + id.length();
---
>                 	if (best == null || id.length() > best.length()) {
>                 		best = id;
>                 	}
2546a2549,2552
>             }
>             if (best != null) {
>                 bucket.setZone(DateTimeZone.forID(best));
>                 return position + best.length();

================ Time-10 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java /home/yicheng/apr/d4jFixedProj/Time/10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java
51a52
>     private static final long START_1972 = 2L * 365L * 86400L * 1000L;
104c105
<         int[] values = chrono.get(zeroInstance, chrono.set(start, 0L), chrono.set(end, 0L));
---
>         int[] values = chrono.get(zeroInstance, chrono.set(start, START_1972), chrono.set(end, START_1972));

================ Time-12 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/12/src/main/java/org/joda/time/LocalDate.java /home/yicheng/apr/d4jFixedProj/Time/12/src/main/java/org/joda/time/LocalDate.java
209a210
>         int era = calendar.get(Calendar.ERA);
212c213
<             yearOfEra,
---
>             (era == GregorianCalendar.AD ? yearOfEra : 1 - yearOfEra),
242a244
>         if (date.getTime() < 0) {
243a246,249
>             GregorianCalendar cal = new GregorianCalendar();
>             cal.setTime(date);
>             return fromCalendarFields(cal);
>         }
diff -r /home/yicheng/apr/d4jProj/Time/12/src/main/java/org/joda/time/LocalDateTime.java /home/yicheng/apr/d4jFixedProj/Time/12/src/main/java/org/joda/time/LocalDateTime.java
198a199
>         int era = calendar.get(Calendar.ERA);
201c202
<             yearOfEra,
---
>             (era == GregorianCalendar.AD ? yearOfEra : 1 - yearOfEra),
235a237
>         if (date.getTime() < 0) {
236a239,242
>             GregorianCalendar cal = new GregorianCalendar();
>             cal.setTime(date);
>             return fromCalendarFields(cal);
>         }

================ Time-22 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/22/src/main/java/org/joda/time/base/BasePeriod.java /home/yicheng/apr/d4jFixedProj/Time/22/src/main/java/org/joda/time/base/BasePeriod.java
222c222
<         this(duration, null, null);
---
>         super();
223a224,228
>         iType = PeriodType.time();
>         int[] values = ISOChronology.getInstanceUTC().get(this, duration);
>         iType = PeriodType.standard();
>         iValues = new int[8];
>         System.arraycopy(values, 0, iValues, 4, 4);

================ Time-14 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java /home/yicheng/apr/d4jFixedProj/Time/14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
208a209
>         if (partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) && fieldIndex == 0) {
209a211,214
>             int curMonth0 = partial.getValue(0) - 1;
>             int newMonth = ((curMonth0 + (valueToAdd % 12) + 12) % 12) + 1;
>             return set(partial, 0, values, newMonth);
>         }

================ Time-4 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/4/src/main/java/org/joda/time/Partial.java /home/yicheng/apr/d4jFixedProj/Time/4/src/main/java/org/joda/time/Partial.java
464c464
<             Partial newPartial = new Partial(iChronology, newTypes, newValues);
---
>             Partial newPartial = new Partial(newTypes, newValues, iChronology);

================ Time-3 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/3/src/main/java/org/joda/time/MutableDateTime.java /home/yicheng/apr/d4jFixedProj/Time/3/src/main/java/org/joda/time/MutableDateTime.java
638a639
>         if (amount != 0) {
639a641
>         }
659a662
>         if (years != 0) {
660a664
>         }
680a685
>         if (weekyears != 0) {
681a687
>         }
701a708
>         if (months != 0) {
702a710
>         }
722a731
>         if (weeks != 0) {
723a733
>         }
763a774
>         if (days != 0) {
764a776
>         }
784a797
>         if (hours != 0) {
785a799
>         }
815a830
>         if (minutes != 0) {
816a832
>         }
846a863
>         if (seconds != 0) {
847a865
>         }
879a898
>         if (millis != 0) {
880a900
>         }

================ Time-8 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/8/src/main/java/org/joda/time/DateTimeZone.java /home/yicheng/apr/d4jFixedProj/Time/8/src/main/java/org/joda/time/DateTimeZone.java
279c279
<         if (minutesOffset < 0 || minutesOffset > 59) {
---
>         if (minutesOffset < -59 || minutesOffset > 59) {
281a282,284
>         if (hoursOffset > 0 && minutesOffset < 0) {
>             throw new IllegalArgumentException("Positive hours must not have negative minutes: " + minutesOffset);
>         }
286c289
<                 minutesOffset = hoursInMinutes - minutesOffset;
---
>                 minutesOffset = hoursInMinutes - Math.abs(minutesOffset);

================ Time-16 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/16/src/main/java/org/joda/time/format/DateTimeFormatter.java /home/yicheng/apr/d4jFixedProj/Time/16/src/main/java/org/joda/time/format/DateTimeFormatter.java
709c709
<             instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);
---
>             instantLocal, chrono, iLocale, iPivotYear, chrono.year().get(instantLocal));

================ Time-6 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/6/src/main/java/org/joda/time/chrono/GJChronology.java /home/yicheng/apr/d4jFixedProj/Time/6/src/main/java/org/joda/time/chrono/GJChronology.java
195a196,199
>             LocalDate cutoverDate = new LocalDate(cutoverInstant.getMillis(), GregorianChronology.getInstance(zone));
>             if (cutoverDate.getYear() <= 0) {
>                 throw new IllegalArgumentException("Cutover too early. Must be on or after 0001-01-01.");
>             }
978a983,993
>                         if (iConvertByWeekyear) {
>                             int wyear = iGregorianChronology.weekyear().get(instant);
>                             if (wyear <= 0) {
>                                 instant = iGregorianChronology.weekyear().add(instant, -1);
>                             }
>                         } else {
>                             int year = iGregorianChronology.year().get(instant);
>                             if (year <= 0) {
>                                 instant = iGregorianChronology.year().add(instant, -1);
>                             }
>                         }
1000a1016,1026
>                         if (iConvertByWeekyear) {
>                             int wyear = iGregorianChronology.weekyear().get(instant);
>                             if (wyear <= 0) {
>                                 instant = iGregorianChronology.weekyear().add(instant, -1);
>                             }
>                         } else {
>                             int year = iGregorianChronology.year().get(instant);
>                             if (year <= 0) {
>                                 instant = iGregorianChronology.year().add(instant, -1);
>                             }
>                         }

================ Time-1 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/1/src/main/java/org/joda/time/Partial.java /home/yicheng/apr/d4jFixedProj/Time/1/src/main/java/org/joda/time/Partial.java
216a217,225
>                 if (loopUnitField.isSupported() == false) {
>                     if (lastUnitField.isSupported()) {
>                         throw new IllegalArgumentException("Types array must be in order largest-smallest: " +
>                                         types[i - 1].getName() + " < " + loopType.getName());
>                     } else {
>                         throw new IllegalArgumentException("Types array must not contain duplicate unsupported: " +
>                                         types[i - 1].getName() + " and " + loopType.getName());
>                     }
>                 }
221c230
<                 } else if (compare == 0) {
---
>                 } else if (compare == 0 && lastUnitField.equals(loopUnitField)) {
diff -r /home/yicheng/apr/d4jProj/Time/1/src/main/java/org/joda/time/field/UnsupportedDurationField.java /home/yicheng/apr/d4jFixedProj/Time/1/src/main/java/org/joda/time/field/UnsupportedDurationField.java
227,229d226
<         if (durationField.isSupported()) {
<             return 1;
<         }

================ Time-5 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/5/src/main/java/org/joda/time/Period.java /home/yicheng/apr/d4jFixedProj/Time/5/src/main/java/org/joda/time/Period.java
1628,1631c1628,1632
<             years = FieldUtils.safeAdd(years, months / 12);
<             months = months % 12;
<             if (years != 0) {
<                 result = result.withYears(years);
---
>             long totalMonths = years * 12L + months;
>             if (type.isSupported(DurationFieldType.YEARS_TYPE)) {
>                 int normalizedYears = FieldUtils.safeToInt(totalMonths / 12);
>                 result = result.withYears(normalizedYears);
>                 totalMonths = totalMonths - (normalizedYears * 12);
1633,1634c1634,1640
<             if (months != 0) {
<                 result = result.withMonths(months);
---
>             if (type.isSupported(DurationFieldType.MONTHS_TYPE)) {
>                 int normalizedMonths = FieldUtils.safeToInt(totalMonths);
>                 result = result.withMonths(normalizedMonths);
>                 totalMonths = totalMonths - normalizedMonths;
>             }
>             if (totalMonths != 0) {
>                 throw new UnsupportedOperationException("Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: " + toString());

================ Time-23 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/23/src/main/java/org/joda/time/DateTimeZone.java /home/yicheng/apr/d4jFixedProj/Time/23/src/main/java/org/joda/time/DateTimeZone.java
563a564,568
>             map.put("WET", "WET");
>             map.put("CET", "CET");
>             map.put("MET", "CET");
>             map.put("ECT", "CET");
>             map.put("EET", "EET");
572c577
<             map.put("IET", "America/Indianapolis");
---
>             map.put("IET", "America/Indiana/Indianapolis");
575c580
<             map.put("AGT", "America/Buenos_Aires");
---
>             map.put("AGT", "America/Argentina/Buenos_Aires");
577,578d581
<             map.put("WET", "Europe/London");
<             map.put("ECT", "Europe/Paris");
581d583
<             map.put("EET", "Europe/Bucharest");
583d584
<             map.put("MET", "Asia/Tehran");
586c587
<             map.put("IST", "Asia/Calcutta");
---
>             map.put("IST", "Asia/Kolkata");
588c589
<             map.put("VST", "Asia/Saigon");
---
>             map.put("VST", "Asia/Ho_Chi_Minh");

================ Time-9 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/9/src/main/java/org/joda/time/DateTimeZone.java /home/yicheng/apr/d4jFixedProj/Time/9/src/main/java/org/joda/time/DateTimeZone.java
95a96
>     private static final int MAX_MILLIS = (86400 * 1000) - 1;
256a258,260
>         if (hoursOffset < -23 || hoursOffset > 23) {
>             throw new IllegalArgumentException("Hours out of range: " + hoursOffset);
>         }
262c266
<             int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);
---
>             int hoursInMinutes = hoursOffset * 60;
264c268
<                 minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);
---
>                 minutesOffset = hoursInMinutes - minutesOffset;
266c270
<                 minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);
---
>                 minutesOffset = hoursInMinutes + minutesOffset;
281a286,288
>         if (millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS) {
>             throw new IllegalArgumentException("Millis out of range: " + millisOffset);
>         }

================ Time-13 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java /home/yicheng/apr/d4jFixedProj/Time/13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
1098c1098
<                 sum = Math.max(sum, 4);
---
>                 sum = (valueLong < 0 ? Math.max(sum, 5) : Math.max(sum, 4));
1132a1133
>             int bufLen = buf.length();
1141a1143,1145
>                     if (valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND) {
>                         buf.insert(bufLen, '-');
>                     }

================ Time-27 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java /home/yicheng/apr/d4jFixedProj/Time/27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
800a801
>             if (sep.iAfterParser == null && sep.iAfterPrinter == null) {
803a805
>             }

================ Time-24 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/24/src/main/java/org/joda/time/format/DateTimeParserBucket.java /home/yicheng/apr/d4jFixedProj/Time/24/src/main/java/org/joda/time/format/DateTimeParserBucket.java
354a355,359
>             if (resetFields) {
>                 for (int i = 0; i < count; i++) {
>                     millis = savedFields[i].set(millis, i == (count - 1));
>                 }
>             }

================ Time-7 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/7/src/main/java/org/joda/time/format/DateTimeFormatter.java /home/yicheng/apr/d4jFixedProj/Time/7/src/main/java/org/joda/time/format/DateTimeFormatter.java
707a708
>         int defaultYear = DateTimeUtils.getChronology(chrono).year().get(instantMillis);
710d710
<         int defaultYear = chrono.year().get(instantLocal);

================ Time-11 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java /home/yicheng/apr/d4jFixedProj/Time/11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java
68,71c68,72
<     static ThreadLocal<Boolean> cVerbose = new ThreadLocal<Boolean>();
<     static {
<         cVerbose.set(Boolean.FALSE);
<     }
---
>     static ThreadLocal<Boolean> cVerbose = new ThreadLocal<Boolean>() {
>         protected Boolean initialValue() {
>             return Boolean.FALSE;
>         }
>     };

================ Time-15 buggy-fixed ================
diff -r /home/yicheng/apr/d4jProj/Time/15/src/main/java/org/joda/time/field/FieldUtils.java /home/yicheng/apr/d4jFixedProj/Time/15/src/main/java/org/joda/time/field/FieldUtils.java
137a138,140
>                 if (val1 == Long.MIN_VALUE) {
>                     throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
>                 }

